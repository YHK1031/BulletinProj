!SESSION 2020-04-29 13:22:53.656 -----------------------------------------------
eclipse.buildId=4.13.0.I20190916-1045
java.version=1.8.0_231
java.vendor=Oracle Corporation
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=ko_KR
Framework arguments:  -product org.eclipse.epp.package.jee.product
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.eclipse.epp.package.jee.product

!ENTRY org.eclipse.egit.ui 2 0 2020-04-29 13:23:05.123
!MESSAGE Warning: The environment variable HOME is not set. The following directory will be used to store the Git
user global configuration and to define the default location to store repositories: 'C:\Users\YH'. If this is
not correct please set the HOME environment variable and restart Eclipse. Otherwise Git for Windows and
EGit might behave differently since they see different configuration options.
This warning can be switched off on the Team > Git > Confirmations and Warnings preference page.

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-04-29 13:24:32.072
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-04-29 13:24:32.081
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-04-29 13:28:43.569
!MESSAGE The artifact org.hibernate:hibernate-validator:jar:6.0.7.Final has been relocated to org.hibernate.validator:hibernate-validator:jar:6.0.7.Final

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-04-29 13:28:43.661
!MESSAGE The artifact org.hibernate:hibernate-validator:jar:6.0.7.Final has been relocated to org.hibernate.validator:hibernate-validator:jar:6.0.7.Final

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-04-29 13:28:43.915
!MESSAGE The artifact org.hibernate:hibernate-validator:jar:6.0.7.Final has been relocated to org.hibernate.validator:hibernate-validator:jar:6.0.7.Final

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-04-29 13:28:44.243
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-04-29 13:28:44.246
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-04-29 13:28:44.252
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-04-29 13:28:45.189
!MESSAGE The artifact org.hibernate:hibernate-validator:jar:6.0.7.Final has been relocated to org.hibernate.validator:hibernate-validator:jar:6.0.7.Final

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-04-29 13:28:45.333
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-04-29 13:28:45.335
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-04-29 13:29:09.941
!MESSAGE The artifact org.hibernate:hibernate-validator:jar:6.0.7.Final has been relocated to org.hibernate.validator:hibernate-validator:jar:6.0.7.Final

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-04-29 13:29:10.051
!MESSAGE The artifact org.hibernate:hibernate-validator:jar:6.0.7.Final has been relocated to org.hibernate.validator:hibernate-validator:jar:6.0.7.Final

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-04-29 13:29:10.138
!MESSAGE The artifact org.hibernate:hibernate-validator:jar:6.0.7.Final has been relocated to org.hibernate.validator:hibernate-validator:jar:6.0.7.Final

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-04-29 13:29:10.538
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-04-29 13:29:10.540
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-04-29 13:29:10.543
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-04-29 13:29:11.557
!MESSAGE The artifact org.hibernate:hibernate-validator:jar:6.0.7.Final has been relocated to org.hibernate.validator:hibernate-validator:jar:6.0.7.Final

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-04-29 13:29:11.603
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-04-29 13:29:11.604
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-04-29 13:29:24.394
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-04-29 13:29:24.396
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-04-29 13:29:29.454
!MESSAGE The artifact org.hibernate:hibernate-validator:jar:6.0.7.Final has been relocated to org.hibernate.validator:hibernate-validator:jar:6.0.7.Final

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-04-29 13:29:29.547
!MESSAGE The artifact org.hibernate:hibernate-validator:jar:6.0.7.Final has been relocated to org.hibernate.validator:hibernate-validator:jar:6.0.7.Final

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-04-29 13:29:29.956
!MESSAGE The artifact org.hibernate:hibernate-validator:jar:6.0.7.Final has been relocated to org.hibernate.validator:hibernate-validator:jar:6.0.7.Final

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-04-29 13:29:30.118
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-04-29 13:29:30.122
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-04-29 13:29:30.126
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-04-29 13:29:40.008
!MESSAGE The artifact org.hibernate:hibernate-validator:jar:6.0.7.Final has been relocated to org.hibernate.validator:hibernate-validator:jar:6.0.7.Final

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-04-29 13:29:40.464
!MESSAGE The artifact org.hibernate:hibernate-validator:jar:6.0.7.Final has been relocated to org.hibernate.validator:hibernate-validator:jar:6.0.7.Final

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-04-29 13:29:41.856
!MESSAGE The artifact org.hibernate:hibernate-validator:jar:6.0.7.Final has been relocated to org.hibernate.validator:hibernate-validator:jar:6.0.7.Final

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-04-29 13:29:41.878
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-04-29 13:29:41.880
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-04-29 13:29:41.884
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-04-29 13:29:42.135
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-04-29 13:29:42.138
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-04-29 13:52:15.506
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-04-29 13:52:15.508
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-04-29 13:52:47.335
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-04-29 13:52:47.336
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-04-29 13:53:32.714
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-04-29 13:53:32.716
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-04-29 13:54:20.764
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-04-29 13:54:20.765
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-04-29 13:55:32.924
!MESSAGE The artifact org.hibernate:hibernate-validator:jar:6.0.7.Final has been relocated to org.hibernate.validator:hibernate-validator:jar:6.0.7.Final

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-04-29 13:55:33.332
!MESSAGE The artifact org.hibernate:hibernate-validator:jar:6.0.7.Final has been relocated to org.hibernate.validator:hibernate-validator:jar:6.0.7.Final

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-04-29 13:55:34.707
!MESSAGE The artifact org.hibernate:hibernate-validator:jar:6.0.7.Final has been relocated to org.hibernate.validator:hibernate-validator:jar:6.0.7.Final

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-04-29 13:55:34.841
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-04-29 13:55:34.842
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-04-29 13:55:34.846
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-04-29 13:58:49.554
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-04-29 13:58:49.562
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-04-29 13:59:54.652
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-04-29 13:59:54.653
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-04-29 14:00:03.390
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-04-29 14:00:03.391
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-04-29 14:00:45.323
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-04-29 14:00:45.324
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-04-29 14:01:22.729
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-04-29 14:01:22.751
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-04-29 14:01:31.027
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-04-29 14:01:31.029
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-04-29 14:01:56.839
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-04-29 14:01:56.841
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-04-29 14:01:57.887
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-04-29 14:01:57.889
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-04-29 14:02:18.827
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-04-29 14:02:18.829
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-04-29 14:15:59.429
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-04-29 14:15:59.445
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.wst.server.discovery 1 0 2020-04-29 14:15:59.638
!MESSAGE already installed: org.eclipse.jst.server.generic.jonas4

!ENTRY org.eclipse.equinox.p2.transport.ecf 2 0 2020-04-29 14:16:02.889
!MESSAGE Connection to http://jope.ow2.org/update/jope/site.xml failed on jope.ow2.org. Retry attempt 0 started
!STACK 0
java.net.UnknownHostException: jope.ow2.org
	at java.net.Inet6AddressImpl.lookupAllHostAddr(Native Method)
	at java.net.InetAddress$2.lookupAllHostAddr(Unknown Source)
	at java.net.InetAddress.getAddressesFromNameService(Unknown Source)
	at java.net.InetAddress.getAllByName0(Unknown Source)
	at java.net.InetAddress.getAllByName(Unknown Source)
	at java.net.InetAddress.getAllByName(Unknown Source)
	at org.apache.http.impl.conn.SystemDefaultDnsResolver.resolve(SystemDefaultDnsResolver.java:45)
	at org.apache.http.impl.conn.DefaultHttpClientConnectionOperator.connect(DefaultHttpClientConnectionOperator.java:112)
	at org.apache.http.impl.conn.PoolingHttpClientConnectionManager.connect(PoolingHttpClientConnectionManager.java:373)
	at org.apache.http.impl.execchain.MainClientExec.establishRoute(MainClientExec.java:394)
	at org.apache.http.impl.execchain.MainClientExec.execute(MainClientExec.java:237)
	at org.apache.http.impl.execchain.ProtocolExec.execute(ProtocolExec.java:185)
	at org.apache.http.impl.execchain.RetryExec.execute(RetryExec.java:89)
	at org.apache.http.impl.execchain.RedirectExec.execute(RedirectExec.java:110)
	at org.apache.http.impl.client.InternalHttpClient.doExecute(InternalHttpClient.java:185)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:83)
	at org.eclipse.ecf.provider.filetransfer.httpclient45.HttpClientRetrieveFileTransfer.performConnect(HttpClientRetrieveFileTransfer.java:1000)
	at org.eclipse.ecf.provider.filetransfer.httpclient45.HttpClientRetrieveFileTransfer.access$0(HttpClientRetrieveFileTransfer.java:992)
	at org.eclipse.ecf.provider.filetransfer.httpclient45.HttpClientRetrieveFileTransfer$1.performFileTransfer(HttpClientRetrieveFileTransfer.java:988)
	at org.eclipse.ecf.filetransfer.FileTransferJob.run(FileTransferJob.java:74)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.equinox.p2.transport.ecf 2 0 2020-04-29 14:16:03.102
!MESSAGE Connection to http://jope.ow2.org/update/jope/p2.index failed on jope.ow2.org. Retry attempt 0 started
!STACK 0
java.net.UnknownHostException: jope.ow2.org
	at java.net.InetAddress.getAllByName0(Unknown Source)
	at java.net.InetAddress.getAllByName(Unknown Source)
	at java.net.InetAddress.getAllByName(Unknown Source)
	at org.apache.http.impl.conn.SystemDefaultDnsResolver.resolve(SystemDefaultDnsResolver.java:45)
	at org.apache.http.impl.conn.DefaultHttpClientConnectionOperator.connect(DefaultHttpClientConnectionOperator.java:112)
	at org.apache.http.impl.conn.PoolingHttpClientConnectionManager.connect(PoolingHttpClientConnectionManager.java:373)
	at org.apache.http.impl.execchain.MainClientExec.establishRoute(MainClientExec.java:394)
	at org.apache.http.impl.execchain.MainClientExec.execute(MainClientExec.java:237)
	at org.apache.http.impl.execchain.ProtocolExec.execute(ProtocolExec.java:185)
	at org.apache.http.impl.execchain.RetryExec.execute(RetryExec.java:89)
	at org.apache.http.impl.execchain.RedirectExec.execute(RedirectExec.java:110)
	at org.apache.http.impl.client.InternalHttpClient.doExecute(InternalHttpClient.java:185)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:83)
	at org.eclipse.ecf.provider.filetransfer.httpclient45.HttpClientRetrieveFileTransfer.performConnect(HttpClientRetrieveFileTransfer.java:1000)
	at org.eclipse.ecf.provider.filetransfer.httpclient45.HttpClientRetrieveFileTransfer.access$0(HttpClientRetrieveFileTransfer.java:992)
	at org.eclipse.ecf.provider.filetransfer.httpclient45.HttpClientRetrieveFileTransfer$1.performFileTransfer(HttpClientRetrieveFileTransfer.java:988)
	at org.eclipse.ecf.filetransfer.FileTransferJob.run(FileTransferJob.java:74)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.wst.server.discovery 1 0 2020-04-29 14:16:04.088
!MESSAGE already installed: org.eclipse.jst.server.generic.jonas4

!ENTRY org.eclipse.wst.server.discovery 1 0 2020-04-29 14:17:31.923
!MESSAGE already installed: org.eclipse.jst.server.generic.jonas4

!ENTRY org.eclipse.equinox.p2.transport.ecf 2 0 2020-04-29 14:20:33.803
!MESSAGE Connection to http://jope.ow2.org/update/jope/site.xml failed on jope.ow2.org. Retry attempt 0 started
!STACK 0
java.net.UnknownHostException: jope.ow2.org
	at java.net.Inet6AddressImpl.lookupAllHostAddr(Native Method)
	at java.net.InetAddress$2.lookupAllHostAddr(Unknown Source)
	at java.net.InetAddress.getAddressesFromNameService(Unknown Source)
	at java.net.InetAddress.getAllByName0(Unknown Source)
	at java.net.InetAddress.getAllByName(Unknown Source)
	at java.net.InetAddress.getAllByName(Unknown Source)
	at org.apache.http.impl.conn.SystemDefaultDnsResolver.resolve(SystemDefaultDnsResolver.java:45)
	at org.apache.http.impl.conn.DefaultHttpClientConnectionOperator.connect(DefaultHttpClientConnectionOperator.java:112)
	at org.apache.http.impl.conn.PoolingHttpClientConnectionManager.connect(PoolingHttpClientConnectionManager.java:373)
	at org.apache.http.impl.execchain.MainClientExec.establishRoute(MainClientExec.java:394)
	at org.apache.http.impl.execchain.MainClientExec.execute(MainClientExec.java:237)
	at org.apache.http.impl.execchain.ProtocolExec.execute(ProtocolExec.java:185)
	at org.apache.http.impl.execchain.RetryExec.execute(RetryExec.java:89)
	at org.apache.http.impl.execchain.RedirectExec.execute(RedirectExec.java:110)
	at org.apache.http.impl.client.InternalHttpClient.doExecute(InternalHttpClient.java:185)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:83)
	at org.eclipse.ecf.provider.filetransfer.httpclient45.HttpClientRetrieveFileTransfer.performConnect(HttpClientRetrieveFileTransfer.java:1000)
	at org.eclipse.ecf.provider.filetransfer.httpclient45.HttpClientRetrieveFileTransfer.access$0(HttpClientRetrieveFileTransfer.java:992)
	at org.eclipse.ecf.provider.filetransfer.httpclient45.HttpClientRetrieveFileTransfer$1.performFileTransfer(HttpClientRetrieveFileTransfer.java:988)
	at org.eclipse.ecf.filetransfer.FileTransferJob.run(FileTransferJob.java:74)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.equinox.p2.transport.ecf 2 0 2020-04-29 14:20:34.009
!MESSAGE Connection to http://jope.ow2.org/update/jope/p2.index failed on jope.ow2.org. Retry attempt 0 started
!STACK 0
java.net.UnknownHostException: jope.ow2.org
	at java.net.InetAddress.getAllByName0(Unknown Source)
	at java.net.InetAddress.getAllByName(Unknown Source)
	at java.net.InetAddress.getAllByName(Unknown Source)
	at org.apache.http.impl.conn.SystemDefaultDnsResolver.resolve(SystemDefaultDnsResolver.java:45)
	at org.apache.http.impl.conn.DefaultHttpClientConnectionOperator.connect(DefaultHttpClientConnectionOperator.java:112)
	at org.apache.http.impl.conn.PoolingHttpClientConnectionManager.connect(PoolingHttpClientConnectionManager.java:373)
	at org.apache.http.impl.execchain.MainClientExec.establishRoute(MainClientExec.java:394)
	at org.apache.http.impl.execchain.MainClientExec.execute(MainClientExec.java:237)
	at org.apache.http.impl.execchain.ProtocolExec.execute(ProtocolExec.java:185)
	at org.apache.http.impl.execchain.RetryExec.execute(RetryExec.java:89)
	at org.apache.http.impl.execchain.RedirectExec.execute(RedirectExec.java:110)
	at org.apache.http.impl.client.InternalHttpClient.doExecute(InternalHttpClient.java:185)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:83)
	at org.eclipse.ecf.provider.filetransfer.httpclient45.HttpClientRetrieveFileTransfer.performConnect(HttpClientRetrieveFileTransfer.java:1000)
	at org.eclipse.ecf.provider.filetransfer.httpclient45.HttpClientRetrieveFileTransfer.access$0(HttpClientRetrieveFileTransfer.java:992)
	at org.eclipse.ecf.provider.filetransfer.httpclient45.HttpClientRetrieveFileTransfer$1.performFileTransfer(HttpClientRetrieveFileTransfer.java:988)
	at org.eclipse.ecf.filetransfer.FileTransferJob.run(FileTransferJob.java:74)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.equinox.p2.transport.ecf 2 0 2020-04-29 14:24:12.740
!MESSAGE Connection to http://jope.ow2.org/update/jope/site.xml failed on jope.ow2.org. Retry attempt 0 started
!STACK 0
java.net.UnknownHostException: jope.ow2.org
	at java.net.Inet6AddressImpl.lookupAllHostAddr(Native Method)
	at java.net.InetAddress$2.lookupAllHostAddr(Unknown Source)
	at java.net.InetAddress.getAddressesFromNameService(Unknown Source)
	at java.net.InetAddress.getAllByName0(Unknown Source)
	at java.net.InetAddress.getAllByName(Unknown Source)
	at java.net.InetAddress.getAllByName(Unknown Source)
	at org.apache.http.impl.conn.SystemDefaultDnsResolver.resolve(SystemDefaultDnsResolver.java:45)
	at org.apache.http.impl.conn.DefaultHttpClientConnectionOperator.connect(DefaultHttpClientConnectionOperator.java:112)
	at org.apache.http.impl.conn.PoolingHttpClientConnectionManager.connect(PoolingHttpClientConnectionManager.java:373)
	at org.apache.http.impl.execchain.MainClientExec.establishRoute(MainClientExec.java:394)
	at org.apache.http.impl.execchain.MainClientExec.execute(MainClientExec.java:237)
	at org.apache.http.impl.execchain.ProtocolExec.execute(ProtocolExec.java:185)
	at org.apache.http.impl.execchain.RetryExec.execute(RetryExec.java:89)
	at org.apache.http.impl.execchain.RedirectExec.execute(RedirectExec.java:110)
	at org.apache.http.impl.client.InternalHttpClient.doExecute(InternalHttpClient.java:185)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:83)
	at org.eclipse.ecf.provider.filetransfer.httpclient45.HttpClientRetrieveFileTransfer.performConnect(HttpClientRetrieveFileTransfer.java:1000)
	at org.eclipse.ecf.provider.filetransfer.httpclient45.HttpClientRetrieveFileTransfer.access$0(HttpClientRetrieveFileTransfer.java:992)
	at org.eclipse.ecf.provider.filetransfer.httpclient45.HttpClientRetrieveFileTransfer$1.performFileTransfer(HttpClientRetrieveFileTransfer.java:988)
	at org.eclipse.ecf.filetransfer.FileTransferJob.run(FileTransferJob.java:74)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.equinox.p2.transport.ecf 2 0 2020-04-29 14:24:12.981
!MESSAGE Connection to http://jope.ow2.org/update/jope/p2.index failed on jope.ow2.org. Retry attempt 0 started
!STACK 0
java.net.UnknownHostException: jope.ow2.org
	at java.net.InetAddress.getAllByName0(Unknown Source)
	at java.net.InetAddress.getAllByName(Unknown Source)
	at java.net.InetAddress.getAllByName(Unknown Source)
	at org.apache.http.impl.conn.SystemDefaultDnsResolver.resolve(SystemDefaultDnsResolver.java:45)
	at org.apache.http.impl.conn.DefaultHttpClientConnectionOperator.connect(DefaultHttpClientConnectionOperator.java:112)
	at org.apache.http.impl.conn.PoolingHttpClientConnectionManager.connect(PoolingHttpClientConnectionManager.java:373)
	at org.apache.http.impl.execchain.MainClientExec.establishRoute(MainClientExec.java:394)
	at org.apache.http.impl.execchain.MainClientExec.execute(MainClientExec.java:237)
	at org.apache.http.impl.execchain.ProtocolExec.execute(ProtocolExec.java:185)
	at org.apache.http.impl.execchain.RetryExec.execute(RetryExec.java:89)
	at org.apache.http.impl.execchain.RedirectExec.execute(RedirectExec.java:110)
	at org.apache.http.impl.client.InternalHttpClient.doExecute(InternalHttpClient.java:185)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:83)
	at org.eclipse.ecf.provider.filetransfer.httpclient45.HttpClientRetrieveFileTransfer.performConnect(HttpClientRetrieveFileTransfer.java:1000)
	at org.eclipse.ecf.provider.filetransfer.httpclient45.HttpClientRetrieveFileTransfer.access$0(HttpClientRetrieveFileTransfer.java:992)
	at org.eclipse.ecf.provider.filetransfer.httpclient45.HttpClientRetrieveFileTransfer$1.performFileTransfer(HttpClientRetrieveFileTransfer.java:988)
	at org.eclipse.ecf.filetransfer.FileTransferJob.run(FileTransferJob.java:74)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-04-29 14:31:36.015
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-04-29 14:31:36.046
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-04-29 14:31:39.455
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-04-29 14:31:39.457
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-04-29 14:32:56.011
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-04-29 14:32:56.013
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-04-29 14:33:36.329
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-04-29 14:33:36.331
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-04-29 14:34:27.687
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-04-29 14:34:27.691
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-04-29 14:40:25.963
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-04-29 14:40:25.964
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-04-29 14:40:38.596
!MESSAGE The artifact org.hibernate:hibernate-validator:jar:6.0.7.Final has been relocated to org.hibernate.validator:hibernate-validator:jar:6.0.7.Final

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-04-29 14:40:39.047
!MESSAGE The artifact org.hibernate:hibernate-validator:jar:6.0.7.Final has been relocated to org.hibernate.validator:hibernate-validator:jar:6.0.7.Final

!ENTRY org.eclipse.m2e.logback.appender 4 0 2020-04-29 14:40:39.455
!MESSAGE Unable to configure bulletin
!STACK 0
org.eclipse.m2e.wtp.MarkedException: Unable to configure bulletin
	at org.eclipse.m2e.wtp.AbstractProjectConfiguratorDelegate.configureProject(AbstractProjectConfiguratorDelegate.java:99)
	at org.eclipse.m2e.wtp.WTPProjectConfigurator.configure(WTPProjectConfigurator.java:68)
	at org.eclipse.m2e.core.project.configurator.AbstractLifecycleMapping.configure(AbstractLifecycleMapping.java:120)
	at org.eclipse.m2e.core.internal.project.ProjectConfigurationManager$3.call(ProjectConfigurationManager.java:508)
	at org.eclipse.m2e.core.internal.project.ProjectConfigurationManager$3.call(ProjectConfigurationManager.java:1)
	at org.eclipse.m2e.core.internal.embedder.MavenExecutionContext.executeBare(MavenExecutionContext.java:177)
	at org.eclipse.m2e.core.internal.embedder.MavenExecutionContext.execute(MavenExecutionContext.java:151)
	at org.eclipse.m2e.core.internal.project.ProjectConfigurationManager.updateProjectConfiguration(ProjectConfigurationManager.java:501)
	at org.eclipse.m2e.core.internal.project.ProjectConfigurationManager.updateProjectConfiguration0(ProjectConfigurationManager.java:439)
	at org.eclipse.m2e.core.internal.project.ProjectConfigurationManager$2.call(ProjectConfigurationManager.java:352)
	at org.eclipse.m2e.core.internal.project.ProjectConfigurationManager$2.call(ProjectConfigurationManager.java:1)
	at org.eclipse.m2e.core.internal.embedder.MavenExecutionContext.executeBare(MavenExecutionContext.java:177)
	at org.eclipse.m2e.core.internal.embedder.MavenExecutionContext.execute(MavenExecutionContext.java:151)
	at org.eclipse.m2e.core.internal.embedder.MavenExecutionContext.execute(MavenExecutionContext.java:99)
	at org.eclipse.m2e.core.internal.embedder.MavenImpl.execute(MavenImpl.java:1370)
	at org.eclipse.m2e.core.internal.project.ProjectConfigurationManager.updateProjectConfiguration(ProjectConfigurationManager.java:349)
	at org.eclipse.m2e.core.ui.internal.UpdateMavenProjectJob.runInWorkspace(UpdateMavenProjectJob.java:77)
	at org.eclipse.core.internal.resources.InternalWorkspaceJob.run(InternalWorkspaceJob.java:42)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)
Caused by: org.eclipse.core.runtime.CoreException: One or more constraints have not been satisfied.
	at org.eclipse.wst.common.project.facet.core.internal.FacetedProject.modifyInternal(FacetedProject.java:363)
	at org.eclipse.wst.common.project.facet.core.internal.FacetedProject.mergeChangesInternal(FacetedProject.java:1181)
	at org.eclipse.wst.common.project.facet.core.internal.FacetedProject.access$2(FacetedProject.java:1117)
	at org.eclipse.wst.common.project.facet.core.internal.FacetedProject$1.run(FacetedProject.java:324)
	at org.eclipse.core.internal.resources.Workspace.run(Workspace.java:2295)
	at org.eclipse.core.internal.resources.Workspace.run(Workspace.java:2322)
	at org.eclipse.wst.common.project.facet.core.internal.FacetedProject.modify(FacetedProject.java:339)
	at org.eclipse.m2e.wtp.WebProjectConfiguratorDelegate.configure(WebProjectConfiguratorDelegate.java:136)
	at org.eclipse.m2e.wtp.AbstractProjectConfiguratorDelegate.configureProject(AbstractProjectConfiguratorDelegate.java:95)
	... 18 more

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-04-29 14:40:39.842
!MESSAGE The artifact org.hibernate:hibernate-validator:jar:6.0.7.Final has been relocated to org.hibernate.validator:hibernate-validator:jar:6.0.7.Final

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-04-29 14:40:39.965
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-04-29 14:40:39.972
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-04-29 14:40:39.975
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.wst.server.core 4 0 2020-04-29 14:40:41.658
!MESSAGE Could not delete D:/Bulletin/.metadata/.plugins/org.eclipse.wst.server.core/tmp0/wtpwebapps/bulletin/WEB-INF/lib. May be locked by another process.

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-04-29 14:40:58.708
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-04-29 14:40:58.711
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-04-29 14:41:08.029
!MESSAGE The artifact org.hibernate:hibernate-validator:jar:6.0.7.Final has been relocated to org.hibernate.validator:hibernate-validator:jar:6.0.7.Final

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-04-29 14:41:08.372
!MESSAGE The artifact org.hibernate:hibernate-validator:jar:6.0.7.Final has been relocated to org.hibernate.validator:hibernate-validator:jar:6.0.7.Final

!ENTRY org.eclipse.m2e.logback.appender 4 0 2020-04-29 14:41:08.667
!MESSAGE Unable to configure bulletin
!STACK 0
org.eclipse.m2e.wtp.MarkedException: Unable to configure bulletin
	at org.eclipse.m2e.wtp.AbstractProjectConfiguratorDelegate.configureProject(AbstractProjectConfiguratorDelegate.java:99)
	at org.eclipse.m2e.wtp.WTPProjectConfigurator.configure(WTPProjectConfigurator.java:68)
	at org.eclipse.m2e.core.project.configurator.AbstractLifecycleMapping.configure(AbstractLifecycleMapping.java:120)
	at org.eclipse.m2e.core.internal.project.ProjectConfigurationManager$3.call(ProjectConfigurationManager.java:508)
	at org.eclipse.m2e.core.internal.project.ProjectConfigurationManager$3.call(ProjectConfigurationManager.java:1)
	at org.eclipse.m2e.core.internal.embedder.MavenExecutionContext.executeBare(MavenExecutionContext.java:177)
	at org.eclipse.m2e.core.internal.embedder.MavenExecutionContext.execute(MavenExecutionContext.java:151)
	at org.eclipse.m2e.core.internal.project.ProjectConfigurationManager.updateProjectConfiguration(ProjectConfigurationManager.java:501)
	at org.eclipse.m2e.core.internal.project.ProjectConfigurationManager.updateProjectConfiguration0(ProjectConfigurationManager.java:439)
	at org.eclipse.m2e.core.internal.project.ProjectConfigurationManager$2.call(ProjectConfigurationManager.java:352)
	at org.eclipse.m2e.core.internal.project.ProjectConfigurationManager$2.call(ProjectConfigurationManager.java:1)
	at org.eclipse.m2e.core.internal.embedder.MavenExecutionContext.executeBare(MavenExecutionContext.java:177)
	at org.eclipse.m2e.core.internal.embedder.MavenExecutionContext.execute(MavenExecutionContext.java:151)
	at org.eclipse.m2e.core.internal.embedder.MavenExecutionContext.execute(MavenExecutionContext.java:99)
	at org.eclipse.m2e.core.internal.embedder.MavenImpl.execute(MavenImpl.java:1370)
	at org.eclipse.m2e.core.internal.project.ProjectConfigurationManager.updateProjectConfiguration(ProjectConfigurationManager.java:349)
	at org.eclipse.m2e.core.ui.internal.UpdateMavenProjectJob.runInWorkspace(UpdateMavenProjectJob.java:77)
	at org.eclipse.core.internal.resources.InternalWorkspaceJob.run(InternalWorkspaceJob.java:42)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)
Caused by: org.eclipse.core.runtime.CoreException: One or more constraints have not been satisfied.
	at org.eclipse.wst.common.project.facet.core.internal.FacetedProject.modifyInternal(FacetedProject.java:363)
	at org.eclipse.wst.common.project.facet.core.internal.FacetedProject.mergeChangesInternal(FacetedProject.java:1181)
	at org.eclipse.wst.common.project.facet.core.internal.FacetedProject.access$2(FacetedProject.java:1117)
	at org.eclipse.wst.common.project.facet.core.internal.FacetedProject$1.run(FacetedProject.java:324)
	at org.eclipse.core.internal.resources.Workspace.run(Workspace.java:2295)
	at org.eclipse.core.internal.resources.Workspace.run(Workspace.java:2322)
	at org.eclipse.wst.common.project.facet.core.internal.FacetedProject.modify(FacetedProject.java:339)
	at org.eclipse.m2e.wtp.WebProjectConfiguratorDelegate.configure(WebProjectConfiguratorDelegate.java:136)
	at org.eclipse.m2e.wtp.AbstractProjectConfiguratorDelegate.configureProject(AbstractProjectConfiguratorDelegate.java:95)
	... 18 more

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-04-29 14:41:09.040
!MESSAGE The artifact org.hibernate:hibernate-validator:jar:6.0.7.Final has been relocated to org.hibernate.validator:hibernate-validator:jar:6.0.7.Final

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-04-29 14:41:09.172
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-04-29 14:41:09.179
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-04-29 14:41:09.182
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-04-29 14:41:34.595
!MESSAGE The artifact org.hibernate:hibernate-validator:jar:6.0.7.Final has been relocated to org.hibernate.validator:hibernate-validator:jar:6.0.7.Final

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-04-29 14:41:34.899
!MESSAGE The artifact org.hibernate:hibernate-validator:jar:6.0.7.Final has been relocated to org.hibernate.validator:hibernate-validator:jar:6.0.7.Final

!ENTRY org.eclipse.m2e.logback.appender 4 0 2020-04-29 14:41:35.165
!MESSAGE Unable to configure bulletin
!STACK 0
org.eclipse.m2e.wtp.MarkedException: Unable to configure bulletin
	at org.eclipse.m2e.wtp.AbstractProjectConfiguratorDelegate.configureProject(AbstractProjectConfiguratorDelegate.java:99)
	at org.eclipse.m2e.wtp.WTPProjectConfigurator.configure(WTPProjectConfigurator.java:68)
	at org.eclipse.m2e.core.project.configurator.AbstractLifecycleMapping.configure(AbstractLifecycleMapping.java:120)
	at org.eclipse.m2e.core.internal.project.ProjectConfigurationManager$3.call(ProjectConfigurationManager.java:508)
	at org.eclipse.m2e.core.internal.project.ProjectConfigurationManager$3.call(ProjectConfigurationManager.java:1)
	at org.eclipse.m2e.core.internal.embedder.MavenExecutionContext.executeBare(MavenExecutionContext.java:177)
	at org.eclipse.m2e.core.internal.embedder.MavenExecutionContext.execute(MavenExecutionContext.java:151)
	at org.eclipse.m2e.core.internal.project.ProjectConfigurationManager.updateProjectConfiguration(ProjectConfigurationManager.java:501)
	at org.eclipse.m2e.core.internal.project.ProjectConfigurationManager.updateProjectConfiguration0(ProjectConfigurationManager.java:439)
	at org.eclipse.m2e.core.internal.project.ProjectConfigurationManager$2.call(ProjectConfigurationManager.java:352)
	at org.eclipse.m2e.core.internal.project.ProjectConfigurationManager$2.call(ProjectConfigurationManager.java:1)
	at org.eclipse.m2e.core.internal.embedder.MavenExecutionContext.executeBare(MavenExecutionContext.java:177)
	at org.eclipse.m2e.core.internal.embedder.MavenExecutionContext.execute(MavenExecutionContext.java:151)
	at org.eclipse.m2e.core.internal.embedder.MavenExecutionContext.execute(MavenExecutionContext.java:99)
	at org.eclipse.m2e.core.internal.embedder.MavenImpl.execute(MavenImpl.java:1370)
	at org.eclipse.m2e.core.internal.project.ProjectConfigurationManager.updateProjectConfiguration(ProjectConfigurationManager.java:349)
	at org.eclipse.m2e.core.ui.internal.UpdateMavenProjectJob.runInWorkspace(UpdateMavenProjectJob.java:77)
	at org.eclipse.core.internal.resources.InternalWorkspaceJob.run(InternalWorkspaceJob.java:42)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)
Caused by: org.eclipse.core.runtime.CoreException: One or more constraints have not been satisfied.
	at org.eclipse.wst.common.project.facet.core.internal.FacetedProject.modifyInternal(FacetedProject.java:363)
	at org.eclipse.wst.common.project.facet.core.internal.FacetedProject.mergeChangesInternal(FacetedProject.java:1181)
	at org.eclipse.wst.common.project.facet.core.internal.FacetedProject.access$2(FacetedProject.java:1117)
	at org.eclipse.wst.common.project.facet.core.internal.FacetedProject$1.run(FacetedProject.java:324)
	at org.eclipse.core.internal.resources.Workspace.run(Workspace.java:2295)
	at org.eclipse.core.internal.resources.Workspace.run(Workspace.java:2322)
	at org.eclipse.wst.common.project.facet.core.internal.FacetedProject.modify(FacetedProject.java:339)
	at org.eclipse.m2e.wtp.WebProjectConfiguratorDelegate.configure(WebProjectConfiguratorDelegate.java:136)
	at org.eclipse.m2e.wtp.AbstractProjectConfiguratorDelegate.configureProject(AbstractProjectConfiguratorDelegate.java:95)
	... 18 more

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-04-29 14:41:35.469
!MESSAGE The artifact org.hibernate:hibernate-validator:jar:6.0.7.Final has been relocated to org.hibernate.validator:hibernate-validator:jar:6.0.7.Final

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-04-29 14:41:35.595
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-04-29 14:41:35.602
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-04-29 14:41:35.605
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!
!SESSION 2020-04-29 14:42:06.644 -----------------------------------------------
eclipse.buildId=4.13.0.I20190916-1045
java.version=1.8.0_231
java.vendor=Oracle Corporation
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=ko_KR
Framework arguments:  -product org.eclipse.epp.package.jee.product
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.eclipse.epp.package.jee.product

!ENTRY org.eclipse.egit.ui 2 0 2020-04-29 14:42:42.196
!MESSAGE Warning: The environment variable HOME is not set. The following directory will be used to store the Git
user global configuration and to define the default location to store repositories: 'C:\Users\YH'. If this is
not correct please set the HOME environment variable and restart Eclipse. Otherwise Git for Windows and
EGit might behave differently since they see different configuration options.
This warning can be switched off on the Team > Git > Confirmations and Warnings preference page.

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-04-29 14:42:43.591
!MESSAGE The artifact org.hibernate:hibernate-validator:jar:6.0.7.Final has been relocated to org.hibernate.validator:hibernate-validator:jar:6.0.7.Final

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-04-29 14:42:43.895
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-04-29 14:42:43.906
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-04-29 14:43:05.137
!MESSAGE The artifact org.hibernate:hibernate-validator:jar:6.0.7.Final has been relocated to org.hibernate.validator:hibernate-validator:jar:6.0.7.Final

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-04-29 14:43:05.273
!MESSAGE The artifact org.hibernate:hibernate-validator:jar:6.0.7.Final has been relocated to org.hibernate.validator:hibernate-validator:jar:6.0.7.Final

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-04-29 14:43:05.671
!MESSAGE The artifact org.hibernate:hibernate-validator:jar:6.0.7.Final has been relocated to org.hibernate.validator:hibernate-validator:jar:6.0.7.Final

!ENTRY org.eclipse.m2e.logback.appender 4 0 2020-04-29 14:43:06.290
!MESSAGE Unable to configure bulletin
!STACK 0
org.eclipse.m2e.wtp.MarkedException: Unable to configure bulletin
	at org.eclipse.m2e.wtp.AbstractProjectConfiguratorDelegate.configureProject(AbstractProjectConfiguratorDelegate.java:99)
	at org.eclipse.m2e.wtp.WTPProjectConfigurator.configure(WTPProjectConfigurator.java:68)
	at org.eclipse.m2e.core.project.configurator.AbstractLifecycleMapping.configure(AbstractLifecycleMapping.java:120)
	at org.eclipse.m2e.core.internal.project.ProjectConfigurationManager$3.call(ProjectConfigurationManager.java:508)
	at org.eclipse.m2e.core.internal.project.ProjectConfigurationManager$3.call(ProjectConfigurationManager.java:1)
	at org.eclipse.m2e.core.internal.embedder.MavenExecutionContext.executeBare(MavenExecutionContext.java:177)
	at org.eclipse.m2e.core.internal.embedder.MavenExecutionContext.execute(MavenExecutionContext.java:151)
	at org.eclipse.m2e.core.internal.project.ProjectConfigurationManager.updateProjectConfiguration(ProjectConfigurationManager.java:501)
	at org.eclipse.m2e.core.internal.project.ProjectConfigurationManager.updateProjectConfiguration0(ProjectConfigurationManager.java:439)
	at org.eclipse.m2e.core.internal.project.ProjectConfigurationManager$2.call(ProjectConfigurationManager.java:352)
	at org.eclipse.m2e.core.internal.project.ProjectConfigurationManager$2.call(ProjectConfigurationManager.java:1)
	at org.eclipse.m2e.core.internal.embedder.MavenExecutionContext.executeBare(MavenExecutionContext.java:177)
	at org.eclipse.m2e.core.internal.embedder.MavenExecutionContext.execute(MavenExecutionContext.java:151)
	at org.eclipse.m2e.core.internal.embedder.MavenExecutionContext.execute(MavenExecutionContext.java:99)
	at org.eclipse.m2e.core.internal.embedder.MavenImpl.execute(MavenImpl.java:1370)
	at org.eclipse.m2e.core.internal.project.ProjectConfigurationManager.updateProjectConfiguration(ProjectConfigurationManager.java:349)
	at org.eclipse.m2e.core.ui.internal.UpdateMavenProjectJob.runInWorkspace(UpdateMavenProjectJob.java:77)
	at org.eclipse.core.internal.resources.InternalWorkspaceJob.run(InternalWorkspaceJob.java:42)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)
Caused by: org.eclipse.core.runtime.CoreException: One or more constraints have not been satisfied.
	at org.eclipse.wst.common.project.facet.core.internal.FacetedProject.modifyInternal(FacetedProject.java:363)
	at org.eclipse.wst.common.project.facet.core.internal.FacetedProject.mergeChangesInternal(FacetedProject.java:1181)
	at org.eclipse.wst.common.project.facet.core.internal.FacetedProject.access$2(FacetedProject.java:1117)
	at org.eclipse.wst.common.project.facet.core.internal.FacetedProject$1.run(FacetedProject.java:324)
	at org.eclipse.core.internal.resources.Workspace.run(Workspace.java:2295)
	at org.eclipse.core.internal.resources.Workspace.run(Workspace.java:2322)
	at org.eclipse.wst.common.project.facet.core.internal.FacetedProject.modify(FacetedProject.java:339)
	at org.eclipse.m2e.wtp.WebProjectConfiguratorDelegate.configure(WebProjectConfiguratorDelegate.java:136)
	at org.eclipse.m2e.wtp.AbstractProjectConfiguratorDelegate.configureProject(AbstractProjectConfiguratorDelegate.java:95)
	... 18 more

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-04-29 14:43:06.757
!MESSAGE The artifact org.hibernate:hibernate-validator:jar:6.0.7.Final has been relocated to org.hibernate.validator:hibernate-validator:jar:6.0.7.Final

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-04-29 14:43:06.783
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-04-29 14:43:06.792
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-04-29 14:43:06.807
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-04-29 14:45:05.708
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-04-29 14:45:05.710
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-04-29 14:45:06.805
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-04-29 14:45:06.808
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-04-29 14:46:38.305
!MESSAGE The artifact org.hibernate:hibernate-validator:jar:6.0.7.Final has been relocated to org.hibernate.validator:hibernate-validator:jar:6.0.7.Final

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-04-29 14:46:38.387
!MESSAGE The artifact org.hibernate:hibernate-validator:jar:6.0.7.Final has been relocated to org.hibernate.validator:hibernate-validator:jar:6.0.7.Final

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-04-29 14:46:38.410
!MESSAGE The artifact org.hibernate:hibernate-validator:jar:6.0.7.Final has been relocated to org.hibernate.validator:hibernate-validator:jar:6.0.7.Final

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-04-29 14:46:38.614
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-04-29 14:46:38.615
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-04-29 14:46:38.626
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-04-29 14:46:39.921
!MESSAGE The artifact org.hibernate:hibernate-validator:jar:6.0.7.Final has been relocated to org.hibernate.validator:hibernate-validator:jar:6.0.7.Final

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-04-29 14:46:39.936
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-04-29 14:46:39.937
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-04-29 14:49:37.472
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-04-29 14:49:37.475
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-04-29 14:50:44.855
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-04-29 14:50:44.858
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-04-29 14:51:15.778
!MESSAGE The artifact org.hibernate:hibernate-validator:jar:6.0.7.Final has been relocated to org.hibernate.validator:hibernate-validator:jar:6.0.7.Final

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-04-29 14:51:15.804
!MESSAGE The artifact org.hibernate:hibernate-validator:jar:6.0.7.Final has been relocated to org.hibernate.validator:hibernate-validator:jar:6.0.7.Final

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-04-29 14:51:17.114
!MESSAGE The artifact org.hibernate:hibernate-validator:jar:6.0.7.Final has been relocated to org.hibernate.validator:hibernate-validator:jar:6.0.7.Final

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-04-29 14:51:17.129
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-04-29 14:51:17.130
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-04-29 14:51:17.137
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-04-29 14:51:44.663
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-04-29 14:51:44.667
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-04-29 14:51:50.908
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-04-29 14:51:50.911
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-04-29 14:52:09.566
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-04-29 14:52:09.568
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-04-29 14:52:17.746
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-04-29 14:52:17.747
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-04-29 14:52:35.447
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-04-29 14:52:35.449
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-04-29 14:54:47.752
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-04-29 14:54:47.754
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-04-29 14:56:29.336
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-04-29 14:56:29.338
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-04-29 14:56:57.981
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-04-29 14:56:57.983
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-04-29 15:03:58.652
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-04-29 15:03:58.654
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-04-29 15:05:35.246
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-04-29 15:05:35.248
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-04-29 15:05:59.605
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-04-29 15:05:59.606
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-04-29 15:06:12.184
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-04-29 15:06:12.185
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-04-29 15:06:19.460
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-04-29 15:06:19.461
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-04-29 15:06:31.804
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-04-29 15:06:31.806
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-04-29 15:07:09.759
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-04-29 15:07:09.762
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!
!SESSION 2020-04-29 15:18:50.929 -----------------------------------------------
eclipse.buildId=4.13.0.I20190916-1045
java.version=1.8.0_231
java.vendor=Oracle Corporation
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=ko_KR
Framework arguments:  -product org.eclipse.epp.package.jee.product
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.eclipse.epp.package.jee.product

!ENTRY org.eclipse.egit.ui 2 0 2020-04-29 15:19:03.238
!MESSAGE Warning: The environment variable HOME is not set. The following directory will be used to store the Git
user global configuration and to define the default location to store repositories: 'C:\Users\YH'. If this is
not correct please set the HOME environment variable and restart Eclipse. Otherwise Git for Windows and
EGit might behave differently since they see different configuration options.
This warning can be switched off on the Team > Git > Confirmations and Warnings preference page.

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-04-29 15:19:04.816
!MESSAGE The artifact org.hibernate:hibernate-validator:jar:6.0.7.Final has been relocated to org.hibernate.validator:hibernate-validator:jar:6.0.7.Final

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-04-29 15:19:05.434
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-04-29 15:19:05.444
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-04-29 15:19:33.092
!MESSAGE The artifact org.hibernate:hibernate-validator:jar:6.0.7.Final has been relocated to org.hibernate.validator:hibernate-validator:jar:6.0.7.Final

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-04-29 15:30:26.899
!MESSAGE The artifact org.hibernate:hibernate-validator:jar:6.0.7.Final has been relocated to org.hibernate.validator:hibernate-validator:jar:6.0.7.Final

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-04-29 15:30:27.374
!MESSAGE The artifact org.hibernate:hibernate-validator:jar:6.0.7.Final has been relocated to org.hibernate.validator:hibernate-validator:jar:6.0.7.Final

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-04-29 15:30:27.616
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-04-29 15:30:27.619
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-04-29 15:30:27.626
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-04-29 15:30:30.308
!MESSAGE The artifact org.hibernate:hibernate-validator:jar:6.0.7.Final has been relocated to org.hibernate.validator:hibernate-validator:jar:6.0.7.Final

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-04-29 15:30:30.588
!MESSAGE The artifact org.hibernate:hibernate-validator:jar:6.0.7.Final has been relocated to org.hibernate.validator:hibernate-validator:jar:6.0.7.Final

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-04-29 15:30:33.125
!MESSAGE The artifact org.hibernate:hibernate-validator:jar:6.0.7.Final has been relocated to org.hibernate.validator:hibernate-validator:jar:6.0.7.Final

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-04-29 15:30:35.433
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-04-29 15:30:35.444
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-04-29 15:30:35.448
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-04-29 15:30:36.799
!MESSAGE The artifact org.hibernate:hibernate-validator:jar:6.0.7.Final has been relocated to org.hibernate.validator:hibernate-validator:jar:6.0.7.Final

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-04-29 15:30:36.816
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-04-29 15:30:36.819
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-04-29 15:31:03.567
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-04-29 15:31:03.568
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.equinox.p2.transport.ecf 2 0 2020-04-29 15:37:39.884
!MESSAGE Connection to http://jope.ow2.org/update/jope/p2.index failed on jope.ow2.org. Retry attempt 0 started
!STACK 0
java.net.UnknownHostException: jope.ow2.org
	at java.net.Inet6AddressImpl.lookupAllHostAddr(Native Method)
	at java.net.InetAddress$2.lookupAllHostAddr(Unknown Source)
	at java.net.InetAddress.getAddressesFromNameService(Unknown Source)
	at java.net.InetAddress.getAllByName0(Unknown Source)
	at java.net.InetAddress.getAllByName(Unknown Source)
	at java.net.InetAddress.getAllByName(Unknown Source)
	at org.apache.http.impl.conn.SystemDefaultDnsResolver.resolve(SystemDefaultDnsResolver.java:45)
	at org.apache.http.impl.conn.DefaultHttpClientConnectionOperator.connect(DefaultHttpClientConnectionOperator.java:112)
	at org.apache.http.impl.conn.PoolingHttpClientConnectionManager.connect(PoolingHttpClientConnectionManager.java:373)
	at org.apache.http.impl.execchain.MainClientExec.establishRoute(MainClientExec.java:394)
	at org.apache.http.impl.execchain.MainClientExec.execute(MainClientExec.java:237)
	at org.apache.http.impl.execchain.ProtocolExec.execute(ProtocolExec.java:185)
	at org.apache.http.impl.execchain.RetryExec.execute(RetryExec.java:89)
	at org.apache.http.impl.execchain.RedirectExec.execute(RedirectExec.java:110)
	at org.apache.http.impl.client.InternalHttpClient.doExecute(InternalHttpClient.java:185)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:83)
	at org.eclipse.ecf.provider.filetransfer.httpclient45.HttpClientRetrieveFileTransfer.performConnect(HttpClientRetrieveFileTransfer.java:1000)
	at org.eclipse.ecf.provider.filetransfer.httpclient45.HttpClientRetrieveFileTransfer.access$0(HttpClientRetrieveFileTransfer.java:992)
	at org.eclipse.ecf.provider.filetransfer.httpclient45.HttpClientRetrieveFileTransfer$1.performFileTransfer(HttpClientRetrieveFileTransfer.java:988)
	at org.eclipse.ecf.filetransfer.FileTransferJob.run(FileTransferJob.java:74)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.equinox.p2.transport.ecf 4 1006 2020-04-29 15:37:40.110
!MESSAGE Unknown Host: http://jope.ow2.org/update/jope/content.xml
!STACK 0
java.net.UnknownHostException: jope.ow2.org
	at java.net.InetAddress.getAllByName0(Unknown Source)
	at java.net.InetAddress.getAllByName(Unknown Source)
	at java.net.InetAddress.getAllByName(Unknown Source)
	at org.apache.http.impl.conn.SystemDefaultDnsResolver.resolve(SystemDefaultDnsResolver.java:45)
	at org.apache.http.impl.conn.DefaultHttpClientConnectionOperator.connect(DefaultHttpClientConnectionOperator.java:112)
	at org.apache.http.impl.conn.PoolingHttpClientConnectionManager.connect(PoolingHttpClientConnectionManager.java:373)
	at org.apache.http.impl.execchain.MainClientExec.establishRoute(MainClientExec.java:394)
	at org.apache.http.impl.execchain.MainClientExec.execute(MainClientExec.java:237)
	at org.apache.http.impl.execchain.ProtocolExec.execute(ProtocolExec.java:185)
	at org.apache.http.impl.execchain.RetryExec.execute(RetryExec.java:89)
	at org.apache.http.impl.execchain.RedirectExec.execute(RedirectExec.java:110)
	at org.apache.http.impl.client.InternalHttpClient.doExecute(InternalHttpClient.java:185)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:83)
	at org.eclipse.ecf.provider.filetransfer.httpclient45.HttpClientFileSystemBrowser.runRequest(HttpClientFileSystemBrowser.java:246)
	at org.eclipse.ecf.provider.filetransfer.browse.AbstractFileSystemBrowser$DirectoryJob.run(AbstractFileSystemBrowser.java:69)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.equinox.p2.transport.ecf 2 0 2020-04-29 15:37:43.627
!MESSAGE Connection to http://jope.ow2.org/update/jope/p2.index failed on jope.ow2.org. Retry attempt 0 started
!STACK 0
java.net.UnknownHostException: jope.ow2.org
	at java.net.InetAddress.getAllByName0(Unknown Source)
	at java.net.InetAddress.getAllByName(Unknown Source)
	at java.net.InetAddress.getAllByName(Unknown Source)
	at org.apache.http.impl.conn.SystemDefaultDnsResolver.resolve(SystemDefaultDnsResolver.java:45)
	at org.apache.http.impl.conn.DefaultHttpClientConnectionOperator.connect(DefaultHttpClientConnectionOperator.java:112)
	at org.apache.http.impl.conn.PoolingHttpClientConnectionManager.connect(PoolingHttpClientConnectionManager.java:373)
	at org.apache.http.impl.execchain.MainClientExec.establishRoute(MainClientExec.java:394)
	at org.apache.http.impl.execchain.MainClientExec.execute(MainClientExec.java:237)
	at org.apache.http.impl.execchain.ProtocolExec.execute(ProtocolExec.java:185)
	at org.apache.http.impl.execchain.RetryExec.execute(RetryExec.java:89)
	at org.apache.http.impl.execchain.RedirectExec.execute(RedirectExec.java:110)
	at org.apache.http.impl.client.InternalHttpClient.doExecute(InternalHttpClient.java:185)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:83)
	at org.eclipse.ecf.provider.filetransfer.httpclient45.HttpClientRetrieveFileTransfer.performConnect(HttpClientRetrieveFileTransfer.java:1000)
	at org.eclipse.ecf.provider.filetransfer.httpclient45.HttpClientRetrieveFileTransfer.access$0(HttpClientRetrieveFileTransfer.java:992)
	at org.eclipse.ecf.provider.filetransfer.httpclient45.HttpClientRetrieveFileTransfer$1.performFileTransfer(HttpClientRetrieveFileTransfer.java:988)
	at org.eclipse.ecf.filetransfer.FileTransferJob.run(FileTransferJob.java:74)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-04-29 18:13:58.546
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-04-29 18:13:58.555
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-04-29 18:14:18.798
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-04-29 18:14:18.800
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-04-29 18:14:33.576
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-04-29 18:14:33.578
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.wst.sse.core 4 4 2020-04-29 18:14:33.965
!MESSAGE can not get a buffer without a document reference
!STACK 0
java.lang.IllegalArgumentException: can not get a buffer without a document reference
	at org.eclipse.wst.sse.core.internal.FileBufferModelManager.getBuffer(FileBufferModelManager.java:691)
	at org.eclipse.jst.jsp.core.internal.java.JSPTranslator.getModelPath(JSPTranslator.java:3276)
	at org.eclipse.jst.jsp.core.internal.java.JSPTranslator.writeExternal(JSPTranslator.java:3383)
	at java.io.ObjectOutputStream.writeExternalData(Unknown Source)
	at java.io.ObjectOutputStream.writeOrdinaryObject(Unknown Source)
	at java.io.ObjectOutputStream.writeObject0(Unknown Source)
	at java.io.ObjectOutputStream.writeObject(Unknown Source)
	at org.eclipse.jst.jsp.core.internal.java.JSPTranslatorPersister.persistTranslator(JSPTranslatorPersister.java:265)
	at org.eclipse.jst.jsp.core.internal.java.JSPTranslatorPersister.persistTranslation(JSPTranslatorPersister.java:149)
	at org.eclipse.jst.jsp.core.internal.java.search.JSPIndexManager.performAction(JSPIndexManager.java:139)
	at org.eclipse.wst.sse.core.indexing.AbstractIndexManager$ResourceEventProcessingJob$1.run(AbstractIndexManager.java:1561)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.wst.sse.core.indexing.AbstractIndexManager$ResourceEventProcessingJob.run(AbstractIndexManager.java:1559)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-04-29 18:15:09.747
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-04-29 18:15:09.749
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-04-29 18:24:27.840
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-04-29 18:24:27.892
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-04-29 18:26:30.149
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-04-29 18:26:30.153
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-04-29 18:26:56.089
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-04-29 18:26:56.091
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-04-29 18:28:13.096
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-04-29 18:28:13.097
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.jst.server.tomcat.core 4 0 2020-04-29 18:28:21.370
!MESSAGE Port 8005 required by Tomcat v9.0 Server at localhost is already in use. The server may already be running in another process, or a system process may be using the port. To start this server you will need to stop the other process or change the port number(s).

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-04-29 18:30:37.734
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-04-29 18:30:37.736
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-04-29 18:30:47.346
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-04-29 18:30:47.348
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-04-29 18:30:57.041
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-04-29 18:30:57.044
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!
!SESSION 2020-05-01 20:50:12.182 -----------------------------------------------
eclipse.buildId=4.12.0.I20190605-1800
java.version=1.8.0_221
java.vendor=Oracle Corporation
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=ko_KR
Framework arguments:  -product org.eclipse.epp.package.jee.product
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.eclipse.epp.package.jee.product

!ENTRY org.eclipse.egit.core 1 0 2020-05-01 20:50:39.599
!MESSAGE Using Apache MINA sshd as ssh client.

!ENTRY org.eclipse.e4.ui.workbench 2 0 2020-05-01 20:50:53.046
!MESSAGE Removing part descriptor with the 'org.eclipse.pde.ui.FeaturesView' id and the 'Features' description. Points to the invalid 'bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.e4.compatibility.CompatibilityView' class.

!ENTRY org.eclipse.egit.ui 2 0 2020-05-01 20:50:53.063
!MESSAGE Warning: The environment variable HOME is not set. The following directory will be used to store the Git
user global configuration and to define the default location to store repositories: 'C:\Users\YH'. If this is
not correct please set the HOME environment variable and restart Eclipse. Otherwise Git for Windows and
EGit might behave differently since they see different configuration options.
This warning can be switched off on the Team > Git > Confirmations and Warnings preference page.

!ENTRY org.eclipse.jst.jsp.core 4 4 2020-05-01 20:50:56.624
!MESSAGE A workspace crash was detected. The previous session did not exit normally. Not using saved taglib indexes.

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-01 20:51:04.235
!MESSAGE Failed to write tracking file C:\Users\YH\.m2\repository\org\springframework\spring-expression\5.2.6.RELEASE\spring-expression-5.2.6.RELEASE.pom.lastUpdated
!STACK 0
java.io.FileNotFoundException: C:\Users\YH\.m2\repository\org\springframework\spring-expression\5.2.6.RELEASE\spring-expression-5.2.6.RELEASE.pom.lastUpdated (액세스가 거부되었습니다)
	at java.io.RandomAccessFile.open0(Native Method)
	at java.io.RandomAccessFile.open(RandomAccessFile.java:316)
	at java.io.RandomAccessFile.<init>(RandomAccessFile.java:243)
	at org.eclipse.aether.internal.impl.TrackingFileManager.update(TrackingFileManager.java:99)
	at org.eclipse.aether.internal.impl.DefaultUpdateCheckManager.write(DefaultUpdateCheckManager.java:588)
	at org.eclipse.aether.internal.impl.DefaultUpdateCheckManager.touchArtifact(DefaultUpdateCheckManager.java:524)
	at org.eclipse.aether.internal.impl.DefaultArtifactResolver.evaluateDownloads(DefaultArtifactResolver.java:624)
	at org.eclipse.aether.internal.impl.DefaultArtifactResolver.performDownloads(DefaultArtifactResolver.java:514)
	at org.eclipse.aether.internal.impl.DefaultArtifactResolver.resolve(DefaultArtifactResolver.java:400)
	at org.eclipse.aether.internal.impl.DefaultArtifactResolver.resolveArtifacts(DefaultArtifactResolver.java:225)
	at org.eclipse.aether.internal.impl.DefaultArtifactResolver.resolveArtifact(DefaultArtifactResolver.java:202)
	at org.apache.maven.repository.internal.DefaultArtifactDescriptorReader.loadPom(DefaultArtifactDescriptorReader.java:240)
	at org.apache.maven.repository.internal.DefaultArtifactDescriptorReader.readArtifactDescriptor(DefaultArtifactDescriptorReader.java:171)
	at org.eclipse.aether.internal.impl.collect.DefaultDependencyCollector.resolveCachedArtifactDescriptor(DefaultDependencyCollector.java:530)
	at org.eclipse.aether.internal.impl.collect.DefaultDependencyCollector.getArtifactDescriptorResult(DefaultDependencyCollector.java:515)
	at org.eclipse.aether.internal.impl.collect.DefaultDependencyCollector.processDependency(DefaultDependencyCollector.java:403)
	at org.eclipse.aether.internal.impl.collect.DefaultDependencyCollector.processDependency(DefaultDependencyCollector.java:356)
	at org.eclipse.aether.internal.impl.collect.DefaultDependencyCollector.process(DefaultDependencyCollector.java:344)
	at org.eclipse.aether.internal.impl.collect.DefaultDependencyCollector.doRecurse(DefaultDependencyCollector.java:498)
	at org.eclipse.aether.internal.impl.collect.DefaultDependencyCollector.processDependency(DefaultDependencyCollector.java:451)
	at org.eclipse.aether.internal.impl.collect.DefaultDependencyCollector.processDependency(DefaultDependencyCollector.java:356)
	at org.eclipse.aether.internal.impl.collect.DefaultDependencyCollector.process(DefaultDependencyCollector.java:344)
	at org.eclipse.aether.internal.impl.collect.DefaultDependencyCollector.doRecurse(DefaultDependencyCollector.java:498)
	at org.eclipse.aether.internal.impl.collect.DefaultDependencyCollector.processDependency(DefaultDependencyCollector.java:451)
	at org.eclipse.aether.internal.impl.collect.DefaultDependencyCollector.processDependency(DefaultDependencyCollector.java:356)
	at org.eclipse.aether.internal.impl.collect.DefaultDependencyCollector.process(DefaultDependencyCollector.java:344)
	at org.eclipse.aether.internal.impl.collect.DefaultDependencyCollector.collectDependencies(DefaultDependencyCollector.java:247)
	at org.eclipse.aether.internal.impl.DefaultRepositorySystem.collectDependencies(DefaultRepositorySystem.java:279)
	at org.apache.maven.project.DefaultProjectDependenciesResolver.resolve(DefaultProjectDependenciesResolver.java:169)
	at org.apache.maven.project.DefaultProjectBuilder.resolveDependencies(DefaultProjectBuilder.java:225)
	at org.apache.maven.project.DefaultProjectBuilder.build(DefaultProjectBuilder.java:198)
	at org.apache.maven.project.DefaultProjectBuilder.build(DefaultProjectBuilder.java:122)
	at org.eclipse.m2e.core.internal.embedder.MavenImpl.readMavenProject(MavenImpl.java:630)
	at org.eclipse.m2e.core.internal.project.registry.DefaultMavenDependencyResolver.resolveProjectDependencies(DefaultMavenDependencyResolver.java:63)
	at org.eclipse.m2e.core.internal.project.registry.ProjectRegistryManager.refreshPhase2(ProjectRegistryManager.java:551)
	at org.eclipse.m2e.core.internal.project.registry.ProjectRegistryManager.lambda$2(ProjectRegistryManager.java:515)
	at org.eclipse.m2e.core.internal.embedder.MavenExecutionContext.executeBare(MavenExecutionContext.java:177)
	at org.eclipse.m2e.core.internal.embedder.MavenExecutionContext.execute(MavenExecutionContext.java:151)
	at org.eclipse.m2e.core.internal.project.registry.ProjectRegistryManager.refresh(ProjectRegistryManager.java:513)
	at org.eclipse.m2e.core.internal.project.registry.ProjectRegistryManager.refresh(ProjectRegistryManager.java:365)
	at org.eclipse.m2e.core.internal.project.registry.ProjectRegistryRefreshJob.lambda$4(ProjectRegistryRefreshJob.java:139)
	at org.eclipse.m2e.core.internal.embedder.MavenExecutionContext.executeBare(MavenExecutionContext.java:177)
	at org.eclipse.m2e.core.internal.embedder.MavenExecutionContext.execute(MavenExecutionContext.java:151)
	at org.eclipse.m2e.core.internal.embedder.MavenExecutionContext.execute(MavenExecutionContext.java:99)
	at org.eclipse.m2e.core.internal.embedder.MavenImpl.execute(MavenImpl.java:1370)
	at org.eclipse.m2e.core.internal.project.registry.ProjectRegistryRefreshJob.lambda$0(ProjectRegistryRefreshJob.java:138)
	at org.eclipse.m2e.core.internal.embedder.MavenExecutionContext.executeBare(MavenExecutionContext.java:177)
	at org.eclipse.m2e.core.internal.embedder.MavenExecutionContext.execute(MavenExecutionContext.java:151)
	at org.eclipse.m2e.core.internal.embedder.MavenExecutionContext.execute(MavenExecutionContext.java:99)
	at org.eclipse.m2e.core.internal.embedder.MavenImpl.execute(MavenImpl.java:1374)
	at org.eclipse.m2e.core.internal.project.registry.ProjectRegistryRefreshJob.run(ProjectRegistryRefreshJob.java:82)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-01 20:51:06.141
!MESSAGE Failed to write tracking file C:\Users\YH\.m2\repository\com\mchange\c3p0\0.9.5.4\c3p0-0.9.5.4.pom.lastUpdated
!STACK 0
java.io.FileNotFoundException: C:\Users\YH\.m2\repository\com\mchange\c3p0\0.9.5.4\c3p0-0.9.5.4.pom.lastUpdated (액세스가 거부되었습니다)
	at java.io.RandomAccessFile.open0(Native Method)
	at java.io.RandomAccessFile.open(RandomAccessFile.java:316)
	at java.io.RandomAccessFile.<init>(RandomAccessFile.java:243)
	at org.eclipse.aether.internal.impl.TrackingFileManager.update(TrackingFileManager.java:99)
	at org.eclipse.aether.internal.impl.DefaultUpdateCheckManager.write(DefaultUpdateCheckManager.java:588)
	at org.eclipse.aether.internal.impl.DefaultUpdateCheckManager.touchArtifact(DefaultUpdateCheckManager.java:524)
	at org.eclipse.aether.internal.impl.DefaultArtifactResolver.evaluateDownloads(DefaultArtifactResolver.java:624)
	at org.eclipse.aether.internal.impl.DefaultArtifactResolver.performDownloads(DefaultArtifactResolver.java:514)
	at org.eclipse.aether.internal.impl.DefaultArtifactResolver.resolve(DefaultArtifactResolver.java:400)
	at org.eclipse.aether.internal.impl.DefaultArtifactResolver.resolveArtifacts(DefaultArtifactResolver.java:225)
	at org.eclipse.aether.internal.impl.DefaultArtifactResolver.resolveArtifact(DefaultArtifactResolver.java:202)
	at org.apache.maven.repository.internal.DefaultArtifactDescriptorReader.loadPom(DefaultArtifactDescriptorReader.java:240)
	at org.apache.maven.repository.internal.DefaultArtifactDescriptorReader.readArtifactDescriptor(DefaultArtifactDescriptorReader.java:171)
	at org.eclipse.aether.internal.impl.collect.DefaultDependencyCollector.resolveCachedArtifactDescriptor(DefaultDependencyCollector.java:530)
	at org.eclipse.aether.internal.impl.collect.DefaultDependencyCollector.getArtifactDescriptorResult(DefaultDependencyCollector.java:515)
	at org.eclipse.aether.internal.impl.collect.DefaultDependencyCollector.processDependency(DefaultDependencyCollector.java:403)
	at org.eclipse.aether.internal.impl.collect.DefaultDependencyCollector.processDependency(DefaultDependencyCollector.java:356)
	at org.eclipse.aether.internal.impl.collect.DefaultDependencyCollector.process(DefaultDependencyCollector.java:344)
	at org.eclipse.aether.internal.impl.collect.DefaultDependencyCollector.collectDependencies(DefaultDependencyCollector.java:247)
	at org.eclipse.aether.internal.impl.DefaultRepositorySystem.collectDependencies(DefaultRepositorySystem.java:279)
	at org.apache.maven.project.DefaultProjectDependenciesResolver.resolve(DefaultProjectDependenciesResolver.java:169)
	at org.apache.maven.project.DefaultProjectBuilder.resolveDependencies(DefaultProjectBuilder.java:225)
	at org.apache.maven.project.DefaultProjectBuilder.build(DefaultProjectBuilder.java:198)
	at org.apache.maven.project.DefaultProjectBuilder.build(DefaultProjectBuilder.java:122)
	at org.eclipse.m2e.core.internal.embedder.MavenImpl.readMavenProject(MavenImpl.java:630)
	at org.eclipse.m2e.core.internal.project.registry.DefaultMavenDependencyResolver.resolveProjectDependencies(DefaultMavenDependencyResolver.java:63)
	at org.eclipse.m2e.core.internal.project.registry.ProjectRegistryManager.refreshPhase2(ProjectRegistryManager.java:551)
	at org.eclipse.m2e.core.internal.project.registry.ProjectRegistryManager.lambda$2(ProjectRegistryManager.java:515)
	at org.eclipse.m2e.core.internal.embedder.MavenExecutionContext.executeBare(MavenExecutionContext.java:177)
	at org.eclipse.m2e.core.internal.embedder.MavenExecutionContext.execute(MavenExecutionContext.java:151)
	at org.eclipse.m2e.core.internal.project.registry.ProjectRegistryManager.refresh(ProjectRegistryManager.java:513)
	at org.eclipse.m2e.core.internal.project.registry.ProjectRegistryManager.refresh(ProjectRegistryManager.java:365)
	at org.eclipse.m2e.core.internal.project.registry.ProjectRegistryRefreshJob.lambda$4(ProjectRegistryRefreshJob.java:139)
	at org.eclipse.m2e.core.internal.embedder.MavenExecutionContext.executeBare(MavenExecutionContext.java:177)
	at org.eclipse.m2e.core.internal.embedder.MavenExecutionContext.execute(MavenExecutionContext.java:151)
	at org.eclipse.m2e.core.internal.embedder.MavenExecutionContext.execute(MavenExecutionContext.java:99)
	at org.eclipse.m2e.core.internal.embedder.MavenImpl.execute(MavenImpl.java:1370)
	at org.eclipse.m2e.core.internal.project.registry.ProjectRegistryRefreshJob.lambda$0(ProjectRegistryRefreshJob.java:138)
	at org.eclipse.m2e.core.internal.embedder.MavenExecutionContext.executeBare(MavenExecutionContext.java:177)
	at org.eclipse.m2e.core.internal.embedder.MavenExecutionContext.execute(MavenExecutionContext.java:151)
	at org.eclipse.m2e.core.internal.embedder.MavenExecutionContext.execute(MavenExecutionContext.java:99)
	at org.eclipse.m2e.core.internal.embedder.MavenImpl.execute(MavenImpl.java:1374)
	at org.eclipse.m2e.core.internal.project.registry.ProjectRegistryRefreshJob.run(ProjectRegistryRefreshJob.java:82)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-01 20:51:06.749
!MESSAGE The artifact org.hibernate:hibernate-validator:jar:6.0.7.Final has been relocated to org.hibernate.validator:hibernate-validator:jar:6.0.7.Final

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-01 20:51:06.755
!MESSAGE The artifact org.hibernate:hibernate-validator:jar:6.0.7.Final has been relocated to org.hibernate.validator:hibernate-validator:jar:6.0.7.Final

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-01 20:51:14.490
!MESSAGE Failed to dispatch repository event to org.eclipse.m2e.core.internal.embedder.EclipseRepositoryListener: null

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-01 20:51:14.847
!MESSAGE The artifact org.hibernate:hibernate-validator:jar:6.0.7.Final has been relocated to org.hibernate.validator:hibernate-validator:jar:6.0.7.Final

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-01 20:51:17.034
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-01 20:51:17.048
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-01 20:51:17.060
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-01 20:51:17.689
!MESSAGE The artifact org.hibernate:hibernate-validator:jar:6.0.7.Final has been relocated to org.hibernate.validator:hibernate-validator:jar:6.0.7.Final

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-01 20:51:18.085
!MESSAGE The artifact org.hibernate:hibernate-validator:jar:6.0.7.Final has been relocated to org.hibernate.validator:hibernate-validator:jar:6.0.7.Final

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-01 20:51:19.217
!MESSAGE The artifact org.hibernate:hibernate-validator:jar:6.0.7.Final has been relocated to org.hibernate.validator:hibernate-validator:jar:6.0.7.Final

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-01 20:51:19.381
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-01 20:51:19.400
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-01 20:51:42.749
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-01 20:51:42.756
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-01 20:53:35.190
!MESSAGE The artifact org.hibernate:hibernate-validator:jar:6.0.7.Final has been relocated to org.hibernate.validator:hibernate-validator:jar:6.0.7.Final

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-01 20:53:35.542
!MESSAGE The artifact org.hibernate:hibernate-validator:jar:6.0.7.Final has been relocated to org.hibernate.validator:hibernate-validator:jar:6.0.7.Final

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-01 20:53:37.462
!MESSAGE The artifact org.hibernate:hibernate-validator:jar:6.0.7.Final has been relocated to org.hibernate.validator:hibernate-validator:jar:6.0.7.Final

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-01 20:53:37.517
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-01 20:53:37.529
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-01 20:53:37.538
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-01 20:53:50.209
!MESSAGE The artifact org.hibernate:hibernate-validator:jar:6.0.7.Final has been relocated to org.hibernate.validator:hibernate-validator:jar:6.0.7.Final

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-01 20:53:50.576
!MESSAGE The artifact org.hibernate:hibernate-validator:jar:6.0.7.Final has been relocated to org.hibernate.validator:hibernate-validator:jar:6.0.7.Final

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-01 20:53:52.027
!MESSAGE The artifact org.hibernate:hibernate-validator:jar:6.0.7.Final has been relocated to org.hibernate.validator:hibernate-validator:jar:6.0.7.Final

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-01 20:53:52.054
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-01 20:53:52.065
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-01 20:53:52.073
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-01 20:55:10.947
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-01 20:55:10.955
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-01 20:55:10.967
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-01 20:55:41.286
!MESSAGE The artifact org.hibernate:hibernate-validator:jar:6.0.7.Final has been relocated to org.hibernate.validator:hibernate-validator:jar:6.0.7.Final

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-01 20:55:43.921
!MESSAGE The artifact org.hibernate:hibernate-validator:jar:6.0.7.Final has been relocated to org.hibernate.validator:hibernate-validator:jar:6.0.7.Final

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-01 20:55:43.977
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-01 20:55:43.990
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-01 22:10:55.378
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-01 22:10:55.387
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-01 22:27:10.657
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-01 22:27:10.663
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-01 22:27:25.909
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-01 22:27:25.916
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-01 22:28:13.766
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-01 22:28:13.778
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-01 22:30:28.012
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-01 22:30:28.020
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-01 22:30:32.534
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-01 22:30:32.540
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-01 22:30:39.349
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-01 22:30:39.363
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-01 22:31:09.383
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-01 22:31:09.389
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-01 22:32:33.281
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-01 22:32:33.287
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-01 22:32:47.363
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-01 22:32:47.368
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-01 22:33:52.692
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-01 22:33:52.698
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-01 22:34:25.237
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-01 22:34:25.243
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-01 22:34:37.628
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-01 22:34:37.633
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-01 22:34:50.535
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-01 22:34:50.540
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-01 22:35:06.862
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-01 22:35:06.869
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-01 22:36:00.273
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-01 22:36:00.278
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-01 22:37:39.130
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-01 22:37:39.136
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-01 22:37:52.967
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-01 22:37:52.974
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-01 22:38:54.401
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-01 22:38:54.408
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-01 22:44:17.916
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-01 22:44:17.922
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-01 22:45:06.117
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-01 22:45:06.123
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-01 22:47:50.243
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-01 22:47:50.248
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-01 22:48:04.874
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-01 22:48:04.880
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-01 22:48:37.349
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-01 22:48:37.356
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-01 22:49:08.797
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-01 22:49:08.802
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-01 22:49:56.684
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-01 22:49:56.690
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-01 22:49:59.928
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-01 22:49:59.934
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-01 22:50:15.073
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-01 22:50:15.079
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-01 22:52:46.731
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-01 22:52:46.738
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-01 22:53:22.210
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-01 22:53:22.216
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-01 22:54:22.074
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-01 22:54:22.081
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-01 22:59:00.170
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-01 22:59:00.176
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-01 23:01:32.721
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-01 23:01:32.727
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-01 23:01:36.439
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-01 23:01:36.445
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-01 23:06:18.027
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-01 23:06:18.032
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-01 23:06:52.525
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-01 23:06:52.532
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-01 23:06:57.822
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-01 23:06:57.830
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-01 23:07:15.872
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-01 23:07:15.878
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-01 23:08:19.688
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-01 23:08:19.694
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-01 23:10:19.046
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-01 23:10:19.052
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-01 23:11:12.530
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-01 23:11:12.537
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-01 23:11:20.924
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-01 23:11:20.930
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-01 23:12:03.144
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-01 23:12:03.149
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-01 23:15:32.605
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-01 23:15:32.611
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-01 23:16:55.470
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-01 23:16:55.476
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-01 23:16:58.553
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-01 23:16:58.558
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-01 23:18:23.737
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-01 23:18:23.743
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-01 23:21:36.804
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-01 23:21:36.808
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-01 23:26:40.825
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-01 23:26:40.831
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-01 23:26:43.744
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-01 23:26:43.751
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-01 23:27:09.369
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-01 23:27:09.375
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-01 23:27:48.173
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-01 23:27:48.178
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-01 23:28:15.047
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-01 23:28:15.053
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-01 23:28:19.477
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-01 23:28:19.483
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-01 23:35:00.407
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-01 23:35:00.413
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-01 23:36:22.004
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-01 23:36:22.014
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-01 23:36:31.667
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-01 23:36:31.673
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-01 23:37:12.971
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-01 23:37:12.977
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-01 23:37:16.058
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-01 23:37:16.063
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-01 23:38:14.600
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-01 23:38:14.606
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-01 23:40:19.184
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-01 23:40:19.189
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-01 23:41:09.846
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-01 23:41:09.852
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-01 23:43:06.668
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-01 23:43:06.674
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-01 23:43:34.055
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-01 23:43:34.060
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-01 23:45:46.638
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-01 23:45:46.643
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-01 23:45:55.521
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-01 23:45:55.527
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-01 23:46:05.178
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-01 23:46:05.183
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-01 23:46:16.246
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-01 23:46:16.252
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-02 00:01:38.774
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-02 00:01:38.780
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-02 01:22:22.598
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-02 01:22:22.611
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!
!SESSION 2020-05-02 09:57:07.763 -----------------------------------------------
eclipse.buildId=4.12.0.I20190605-1800
java.version=1.8.0_221
java.vendor=Oracle Corporation
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=ko_KR
Framework arguments:  -product org.eclipse.epp.package.jee.product
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.eclipse.epp.package.jee.product

!ENTRY org.eclipse.egit.core 1 0 2020-05-02 09:57:17.432
!MESSAGE Using Apache MINA sshd as ssh client.

!ENTRY org.eclipse.egit.ui 2 0 2020-05-02 09:57:30.162
!MESSAGE Warning: The environment variable HOME is not set. The following directory will be used to store the Git
user global configuration and to define the default location to store repositories: 'C:\Users\YH'. If this is
not correct please set the HOME environment variable and restart Eclipse. Otherwise Git for Windows and
EGit might behave differently since they see different configuration options.
This warning can be switched off on the Team > Git > Confirmations and Warnings preference page.

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-02 09:57:32.102
!MESSAGE The artifact org.hibernate:hibernate-validator:jar:6.0.7.Final has been relocated to org.hibernate.validator:hibernate-validator:jar:6.0.7.Final

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-02 09:57:32.424
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-02 09:57:32.440
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!
!SESSION 2020-05-02 09:58:39.542 -----------------------------------------------
eclipse.buildId=4.12.0.I20190605-1800
java.version=1.8.0_221
java.vendor=Oracle Corporation
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=ko_KR
Framework arguments:  -product org.eclipse.epp.package.jee.product
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.eclipse.epp.package.jee.product

!ENTRY org.eclipse.egit.core 1 0 2020-05-02 09:58:43.380
!MESSAGE Using Apache MINA sshd as ssh client.

!ENTRY org.eclipse.egit.ui 2 0 2020-05-02 09:58:50.760
!MESSAGE Warning: The environment variable HOME is not set. The following directory will be used to store the Git
user global configuration and to define the default location to store repositories: 'C:\Users\YH'. If this is
not correct please set the HOME environment variable and restart Eclipse. Otherwise Git for Windows and
EGit might behave differently since they see different configuration options.
This warning can be switched off on the Team > Git > Confirmations and Warnings preference page.

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-02 09:58:52.262
!MESSAGE The artifact org.hibernate:hibernate-validator:jar:6.0.7.Final has been relocated to org.hibernate.validator:hibernate-validator:jar:6.0.7.Final

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-02 09:58:52.567
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-02 09:58:52.582
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-02 10:03:40.891
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-02 10:03:40.902
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-02 10:03:59.021
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-02 10:03:59.034
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-02 10:05:43.988
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-02 10:05:43.999
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-02 10:07:22.210
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-02 10:07:22.218
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-02 10:19:26.672
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-02 10:19:26.678
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-02 10:19:39.290
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-02 10:19:39.298
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-02 10:25:33.198
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-02 10:25:33.205
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-02 10:26:45.244
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-02 10:26:45.250
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-02 10:28:03.960
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-02 10:28:03.966
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-02 10:28:13.308
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-02 10:28:13.314
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-02 10:30:50.298
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-02 10:30:50.304
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-02 10:31:39.701
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-02 10:31:39.708
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-02 10:31:49.246
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-02 10:31:49.252
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-02 10:34:01.374
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-02 10:34:01.380
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-02 10:34:59.012
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-02 10:34:59.019
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-02 10:36:03.451
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-02 10:36:03.457
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-02 10:36:27.497
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-02 10:36:27.503
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-02 10:36:34.220
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-02 10:36:34.226
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-02 10:40:58.125
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-02 10:40:58.132
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-02 10:46:00.246
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-02 10:46:00.252
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-02 10:46:49.878
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-02 10:46:49.884
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-02 10:48:20.618
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-02 10:48:20.624
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-02 10:50:02.347
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-02 10:50:02.353
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-02 10:57:25.131
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-02 10:57:25.136
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-02 10:57:32.303
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-02 10:57:32.309
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-02 10:57:38.550
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-02 10:57:38.556
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-02 10:57:47.595
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-02 10:57:47.601
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-02 10:57:55.352
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-02 10:57:55.358
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-02 10:58:02.567
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-02 10:58:02.572
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-02 10:59:33.543
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-02 10:59:33.549
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-02 11:01:05.399
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-02 11:01:05.405
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-02 11:01:08.050
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-02 11:01:08.056
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-02 11:04:57.331
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-02 11:04:57.337
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-02 11:06:44.797
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-02 11:06:44.803
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-02 11:06:47.843
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-02 11:06:47.849
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-02 11:10:54.605
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-02 11:10:54.612
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-02 11:11:30.556
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-02 11:11:30.563
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-02 11:12:22.485
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-02 11:12:22.490
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-02 11:12:47.677
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-02 11:12:47.683
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-02 11:13:38.074
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-02 11:13:38.082
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-02 11:14:10.363
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-02 11:14:10.369
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-02 11:14:39.163
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-02 11:14:39.170
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-02 11:15:35.144
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-02 11:15:35.152
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-02 11:15:54.675
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-02 11:15:54.680
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-02 11:20:46.307
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-02 11:20:46.314
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-02 11:25:37.824
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-02 11:25:37.830
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-02 11:25:51.847
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-02 11:25:51.853
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-02 11:29:08.706
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-02 11:29:08.712
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-02 12:53:34.919
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-02 12:53:34.926
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-02 14:04:24.101
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-02 14:04:24.108
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-02 14:11:51.649
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-02 14:11:51.655
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-02 14:12:17.509
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-02 14:12:17.515
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-02 14:13:15.694
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-02 14:13:15.700
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-02 14:13:55.980
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-02 14:13:55.986
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-02 14:14:27.165
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-02 14:14:27.172
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-02 14:18:37.113
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-02 14:18:37.120
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-02 14:18:40.210
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-02 14:18:40.217
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-02 14:19:30.589
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-02 14:19:30.595
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-02 14:20:10.484
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-02 14:20:10.491
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-02 14:20:22.716
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-02 14:20:22.722
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-02 14:20:36.635
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-02 14:20:36.641
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-02 14:21:49.282
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-02 14:21:49.290
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-02 14:23:21.062
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-02 14:23:21.068
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!
!SESSION 2020-05-02 14:32:39.465 -----------------------------------------------
eclipse.buildId=4.12.0.I20190605-1800
java.version=1.8.0_221
java.vendor=Oracle Corporation
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=ko_KR
Framework arguments:  -product org.eclipse.epp.package.jee.product
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.eclipse.epp.package.jee.product

!ENTRY org.eclipse.egit.core 1 0 2020-05-02 14:32:43.206
!MESSAGE Using Apache MINA sshd as ssh client.

!ENTRY org.eclipse.egit.ui 2 0 2020-05-02 14:32:50.552
!MESSAGE Warning: The environment variable HOME is not set. The following directory will be used to store the Git
user global configuration and to define the default location to store repositories: 'C:\Users\YH'. If this is
not correct please set the HOME environment variable and restart Eclipse. Otherwise Git for Windows and
EGit might behave differently since they see different configuration options.
This warning can be switched off on the Team > Git > Confirmations and Warnings preference page.

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-02 14:32:52.013
!MESSAGE The artifact org.hibernate:hibernate-validator:jar:6.0.7.Final has been relocated to org.hibernate.validator:hibernate-validator:jar:6.0.7.Final

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-02 14:32:52.416
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-02 14:32:52.430
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-02 14:34:54.973
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-02 14:34:54.983
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-02 14:37:26.966
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-02 14:37:26.974
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-02 14:37:30.766
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-02 14:37:30.772
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-02 14:40:03.619
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-02 14:40:03.626
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-02 14:43:44.087
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-02 14:43:44.094
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-02 14:44:42.456
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-02 14:44:42.462
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-02 14:45:33.137
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-02 14:45:33.144
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-02 14:45:42.768
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-02 14:45:42.775
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-02 14:56:23.709
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-02 14:56:23.715
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-02 14:56:32.220
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-02 14:56:32.226
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-02 14:58:05.694
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-02 14:58:05.700
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-02 15:07:43.355
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-02 15:07:43.361
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-02 15:37:27.993
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-02 15:37:28.001
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-02 15:38:38.574
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-02 15:38:38.580
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-02 15:38:39.805
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-02 15:38:39.812
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-02 15:38:46.157
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-02 15:38:46.163
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-02 15:40:53.434
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-02 15:40:53.440
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-02 15:42:48.229
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-02 15:42:48.235
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-02 15:44:19.460
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-02 15:44:19.468
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-02 15:44:49.448
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-02 15:44:49.455
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-02 15:44:53.861
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-02 15:44:53.866
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-02 15:48:26.608
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-02 15:48:26.618
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-02 15:50:39.298
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-02 15:50:39.306
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-02 15:51:29.626
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-02 15:51:29.632
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-02 15:52:04.465
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-02 15:52:04.472
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-02 15:53:51.785
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-02 15:53:51.791
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-02 15:54:34.941
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-02 15:54:34.947
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-02 15:55:17.217
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-02 15:55:17.224
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-02 15:56:00.043
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-02 15:56:00.048
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-02 15:57:18.615
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-02 15:57:18.621
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-02 15:57:20.213
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-02 15:57:20.219
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-02 15:57:44.725
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-02 15:57:44.730
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-02 15:58:29.054
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-02 15:58:29.060
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-02 15:58:44.601
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-02 15:58:44.607
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-02 15:59:25.467
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-02 15:59:25.472
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-02 15:59:52.677
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-02 15:59:52.683
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-02 16:00:08.006
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-02 16:00:08.011
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-02 16:01:30.711
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-02 16:01:30.717
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-02 16:01:51.146
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-02 16:01:51.152
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-02 16:04:51.723
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-02 16:04:51.728
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-02 16:05:16.372
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-02 16:05:16.378
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-02 16:05:27.563
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-02 16:05:27.568
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-02 16:05:45.129
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-02 16:05:45.134
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-02 16:06:19.466
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-02 16:06:19.471
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-02 16:06:30.733
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-02 16:06:30.738
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-02 16:07:53.878
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-02 16:07:53.884
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-02 16:08:12.284
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-02 16:08:12.290
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-02 16:08:23.270
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-02 16:08:23.276
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-02 16:08:56.152
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-02 16:08:56.158
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-02 16:09:14.377
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-02 16:09:14.382
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-02 16:09:23.629
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-02 16:09:23.634
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-02 16:09:57.654
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-02 16:09:57.660
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-02 16:11:38.507
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-02 16:11:38.513
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-02 16:17:40.759
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-02 16:17:40.764
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-02 16:17:42.854
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-02 16:17:42.860
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-02 16:19:55.757
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-02 16:19:55.763
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-02 16:35:01.659
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-02 16:35:01.665
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-02 16:35:13.016
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-02 16:35:13.022
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-02 16:35:30.532
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-02 16:35:30.538
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-02 16:36:30.201
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-02 16:36:30.206
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-02 16:38:05.738
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-02 16:38:05.744
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-02 16:40:41.820
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-02 16:40:41.827
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-02 16:40:54.510
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-02 16:40:54.516
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-02 16:41:31.332
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-02 16:41:31.337
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-02 18:18:11.393
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-02 18:18:11.405
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-02 18:25:07.683
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-02 18:25:07.689
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-02 18:26:03.869
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-02 18:26:03.875
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-02 18:26:16.468
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-02 18:26:16.475
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-02 18:26:23.179
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-02 18:26:23.185
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-02 18:26:37.600
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-02 18:26:37.607
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-02 18:27:28.889
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-02 18:27:28.896
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-02 18:27:43.294
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-02 18:27:43.299
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-02 18:28:51.821
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-02 18:28:51.827
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-02 18:32:27.078
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-02 18:32:27.084
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-02 18:36:05.484
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-02 18:36:05.490
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-02 18:36:31.770
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-02 18:36:31.776
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-02 18:38:30.144
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-02 18:38:30.150
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-02 18:39:58.012
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-02 18:39:58.018
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-02 18:40:17.293
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-02 18:40:17.299
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-02 18:44:18.877
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-02 18:44:18.882
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-02 18:45:53.783
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-02 18:45:53.789
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-02 18:48:40.336
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-02 18:48:40.341
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-02 18:48:58.152
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-02 18:48:58.158
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-02 18:49:22.402
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-02 18:49:22.408
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-02 18:59:28.170
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-02 18:59:28.176
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-02 19:00:53.455
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-02 19:00:53.462
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-02 19:01:09.481
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-02 19:01:09.487
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-02 19:01:41.183
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-02 19:01:41.189
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-02 19:01:47.225
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-02 19:01:47.231
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-02 19:01:53.688
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-02 19:01:53.694
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-02 19:01:56.091
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-02 19:01:56.097
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-02 19:02:09.405
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-02 19:02:09.410
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-02 19:02:21.714
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-02 19:02:21.719
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-02 19:04:10.790
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-02 19:04:10.796
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-02 19:04:17.829
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-02 19:04:17.835
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-02 19:04:45.470
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-02 19:04:45.475
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-02 19:05:55.294
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-02 19:05:55.300
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-02 19:06:04.520
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-02 19:06:04.525
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-02 19:06:45.486
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-02 19:06:45.491
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-02 19:07:27.129
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-02 19:07:27.135
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-02 19:08:25.585
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-02 19:08:25.591
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-02 19:08:32.725
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-02 19:08:32.731
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-02 19:08:55.913
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-02 19:08:55.918
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-02 19:09:46.562
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-02 19:09:46.568
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-02 19:10:19.447
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-02 19:10:19.452
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-02 19:14:02.368
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-02 19:14:02.373
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-02 19:14:08.089
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-02 19:14:08.095
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-02 19:19:34.325
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-02 19:19:34.331
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-02 19:29:05.729
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-02 19:29:05.735
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-02 19:29:18.538
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-02 19:29:18.543
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-02 19:31:22.691
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-02 19:31:22.697
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-02 19:36:23.217
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-02 19:36:23.223
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-02 19:36:28.720
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-02 19:36:28.726
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-02 19:36:36.755
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-02 19:36:36.761
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-02 19:39:10.710
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-02 19:39:10.715
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-02 19:42:03.505
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-02 19:42:03.511
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-02 19:43:25.817
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-02 19:43:25.823
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-02 19:46:42.261
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-02 19:46:42.267
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-02 19:47:07.586
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-02 19:47:07.592
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-02 19:50:39.409
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-02 19:50:39.414
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-02 19:51:02.894
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-02 19:51:02.900
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-02 19:51:11.645
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-02 19:51:11.651
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-02 19:51:17.082
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-02 19:51:17.087
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-02 19:51:52.906
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-02 19:51:52.913
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-02 19:52:21.702
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-02 19:52:21.708
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-02 19:55:49.627
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-02 19:55:49.632
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-02 19:55:52.013
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-02 19:55:52.019
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-02 19:56:08.476
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-02 19:56:08.481
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-02 20:17:19.336
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-02 20:17:19.342
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!
!SESSION 2020-05-03 22:40:30.428 -----------------------------------------------
eclipse.buildId=4.12.0.I20190605-1800
java.version=1.8.0_221
java.vendor=Oracle Corporation
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=ko_KR
Framework arguments:  -product org.eclipse.epp.package.jee.product
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.eclipse.epp.package.jee.product

!ENTRY org.eclipse.egit.core 1 0 2020-05-03 22:40:36.746
!MESSAGE Using Apache MINA sshd as ssh client.

!ENTRY org.eclipse.egit.ui 2 0 2020-05-03 22:40:46.399
!MESSAGE Warning: The environment variable HOME is not set. The following directory will be used to store the Git
user global configuration and to define the default location to store repositories: 'C:\Users\YH'. If this is
not correct please set the HOME environment variable and restart Eclipse. Otherwise Git for Windows and
EGit might behave differently since they see different configuration options.
This warning can be switched off on the Team > Git > Confirmations and Warnings preference page.

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-03 22:40:47.692
!MESSAGE The artifact org.hibernate:hibernate-validator:jar:6.0.7.Final has been relocated to org.hibernate.validator:hibernate-validator:jar:6.0.7.Final

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-03 22:40:47.984
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-03 22:40:48.001
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-03 22:49:04.319
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-03 22:49:04.334
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-03 22:49:59.273
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-03 22:49:59.280
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-03 22:52:27.923
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-03 22:52:27.937
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-03 22:54:01.723
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-03 22:54:01.730
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-03 22:55:03.656
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-03 22:55:03.672
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-03 22:59:46.081
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-03 22:59:46.087
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-03 23:03:11.405
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-03 23:03:11.412
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-03 23:06:25.663
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-03 23:06:25.672
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-03 23:09:22.011
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-03 23:09:22.022
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-03 23:14:17.427
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-03 23:14:17.434
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-03 23:14:19.834
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-03 23:14:19.840
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-03 23:14:41.577
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-03 23:14:41.583
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-03 23:15:02.652
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-03 23:15:02.666
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-03 23:16:15.623
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-03 23:16:15.629
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-03 23:16:23.792
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-03 23:16:23.799
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-03 23:18:53.270
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-03 23:18:53.275
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-03 23:19:43.698
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-03 23:19:43.706
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-03 23:41:47.970
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-03 23:41:47.980
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-03 23:42:06.330
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-03 23:42:06.337
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-03 23:46:08.041
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-03 23:46:08.047
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-03 23:48:48.702
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-03 23:48:48.709
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-03 23:50:02.634
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-03 23:50:02.640
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-03 23:53:13.339
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-03 23:53:13.344
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-03 23:54:11.136
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-03 23:54:11.143
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-03 23:54:19.030
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-03 23:54:19.038
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-04 00:30:20.187
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-04 00:30:20.194
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-04 00:30:57.545
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-04 00:30:57.551
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-04 00:32:41.584
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-04 00:32:41.592
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-04 00:36:38.963
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-04 00:36:38.978
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-04 00:37:39.726
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-04 00:37:39.733
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-04 00:38:16.892
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-04 00:38:16.900
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-04 00:39:38.867
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-04 00:39:38.875
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-04 00:41:50.464
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-04 00:41:50.470
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-04 00:41:57.777
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-04 00:41:57.785
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-04 00:43:00.016
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-04 00:43:00.022
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-04 00:43:22.357
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-04 00:43:22.364
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-04 00:44:30.538
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-04 00:44:30.544
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-04 00:46:10.475
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-04 00:46:10.480
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-04 00:47:47.267
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-04 00:47:47.273
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-04 00:49:43.587
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-04 00:49:43.593
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-04 00:51:24.537
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-04 00:51:24.543
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-04 00:52:03.506
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-04 00:52:03.512
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-04 00:53:11.158
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-04 00:53:11.165
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-04 00:53:39.343
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-04 00:53:39.350
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-04 00:53:51.359
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-04 00:53:51.365
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-04 00:55:05.935
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-04 00:55:05.941
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-04 00:57:11.800
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-04 00:57:11.808
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-04 00:57:23.605
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-04 00:57:23.611
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-04 00:57:30.937
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-04 00:57:30.943
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-04 00:58:25.450
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-04 00:58:25.456
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-04 00:58:47.265
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-04 00:58:47.271
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-04 01:00:43.993
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-04 01:00:43.998
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-04 01:01:53.806
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-04 01:01:53.811
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-04 01:03:52.559
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-04 01:03:52.565
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-04 01:04:30.370
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-04 01:04:30.376
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-04 01:04:43.720
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-04 01:04:43.725
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-04 01:04:55.545
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-04 01:04:55.551
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-04 01:07:29.068
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-04 01:07:29.074
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-04 01:11:37.250
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-04 01:11:37.256
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!
!SESSION 2020-05-04 22:50:20.638 -----------------------------------------------
eclipse.buildId=4.12.0.I20190605-1800
java.version=1.8.0_221
java.vendor=Oracle Corporation
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=ko_KR
Framework arguments:  -product org.eclipse.epp.package.jee.product
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.eclipse.epp.package.jee.product

!ENTRY org.eclipse.egit.core 1 0 2020-05-04 22:50:28.553
!MESSAGE Using Apache MINA sshd as ssh client.

!ENTRY org.eclipse.egit.ui 2 0 2020-05-04 22:50:42.036
!MESSAGE Warning: The environment variable HOME is not set. The following directory will be used to store the Git
user global configuration and to define the default location to store repositories: 'C:\Users\YH'. If this is
not correct please set the HOME environment variable and restart Eclipse. Otherwise Git for Windows and
EGit might behave differently since they see different configuration options.
This warning can be switched off on the Team > Git > Confirmations and Warnings preference page.

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-04 22:50:44.697
!MESSAGE The artifact org.hibernate:hibernate-validator:jar:6.0.7.Final has been relocated to org.hibernate.validator:hibernate-validator:jar:6.0.7.Final

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-04 22:50:46.166
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-04 22:50:46.181
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-04 23:08:56.855
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-04 23:08:56.862
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-04 23:09:19.160
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-04 23:09:19.167
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-04 23:14:37.808
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-04 23:14:37.814
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-04 23:54:02.314
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-04 23:54:02.335
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-04 23:54:23.076
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-04 23:54:23.082
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-04 23:54:54.238
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-04 23:54:54.245
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-04 23:56:52.634
!MESSAGE The artifact org.hibernate:hibernate-validator:jar:6.0.7.Final has been relocated to org.hibernate.validator:hibernate-validator:jar:6.0.7.Final

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-04 23:56:52.847
!MESSAGE The artifact org.hibernate:hibernate-validator:jar:6.0.7.Final has been relocated to org.hibernate.validator:hibernate-validator:jar:6.0.7.Final

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-04 23:56:53.251
!MESSAGE The artifact org.hibernate:hibernate-validator:jar:6.0.7.Final has been relocated to org.hibernate.validator:hibernate-validator:jar:6.0.7.Final

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-04 23:56:53.783
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-04 23:56:53.790
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-04 23:56:53.799
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-04 23:56:54.708
!MESSAGE The artifact org.hibernate:hibernate-validator:jar:6.0.7.Final has been relocated to org.hibernate.validator:hibernate-validator:jar:6.0.7.Final

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-04 23:56:55.415
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-04 23:56:55.433
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-04 23:56:58.248
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-04 23:56:58.256
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-04 23:58:41.500
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-04 23:58:41.505
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-04 23:58:44.555
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-04 23:58:44.560
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!
!SESSION 2020-05-05 14:28:41.866 -----------------------------------------------
eclipse.buildId=4.12.0.I20190605-1800
java.version=1.8.0_221
java.vendor=Oracle Corporation
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=ko_KR
Framework arguments:  -product org.eclipse.epp.package.jee.product
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.eclipse.epp.package.jee.product

!ENTRY org.eclipse.egit.core 1 0 2020-05-05 14:28:47.390
!MESSAGE Using Apache MINA sshd as ssh client.

!ENTRY org.eclipse.egit.ui 2 0 2020-05-05 14:29:01.125
!MESSAGE Warning: The environment variable HOME is not set. The following directory will be used to store the Git
user global configuration and to define the default location to store repositories: 'C:\Users\YH'. If this is
not correct please set the HOME environment variable and restart Eclipse. Otherwise Git for Windows and
EGit might behave differently since they see different configuration options.
This warning can be switched off on the Team > Git > Confirmations and Warnings preference page.

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-05 14:29:05.072
!MESSAGE The artifact org.hibernate:hibernate-validator:jar:6.0.7.Final has been relocated to org.hibernate.validator:hibernate-validator:jar:6.0.7.Final

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-05 14:29:07.602
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-05 14:29:07.619
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-05 14:34:57.915
!MESSAGE The artifact org.hibernate:hibernate-validator:jar:6.0.7.Final has been relocated to org.hibernate.validator:hibernate-validator:jar:6.0.7.Final

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-05 14:35:00.395
!MESSAGE The artifact org.hibernate:hibernate-validator:jar:6.0.7.Final has been relocated to org.hibernate.validator:hibernate-validator:jar:6.0.7.Final

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-05 14:35:00.784
!MESSAGE The artifact org.hibernate:hibernate-validator:jar:6.0.7.Final has been relocated to org.hibernate.validator:hibernate-validator:jar:6.0.7.Final

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-05 14:35:01.032
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-05 14:35:01.039
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-05 14:35:01.048
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-05 14:35:02.130
!MESSAGE The artifact org.hibernate:hibernate-validator:jar:6.0.7.Final has been relocated to org.hibernate.validator:hibernate-validator:jar:6.0.7.Final

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-05 14:35:02.778
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-05 14:35:02.797
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-05 14:35:06.100
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-05 14:35:06.106
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-05 14:43:05.462
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-05 14:43:05.468
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-05 14:46:56.631
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-05 14:46:56.637
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-05 14:47:40.082
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-05 14:47:40.088
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-05 14:49:25.825
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-05 14:49:25.831
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-05 14:51:46.424
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-05 14:51:46.430
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-05 14:57:02.479
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-05 14:57:02.486
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-05 14:57:11.444
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-05 14:57:11.452
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-05 14:57:37.553
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-05 14:57:37.573
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-05 14:58:05.256
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-05 14:58:05.264
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-05 14:58:16.905
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-05 14:58:16.912
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-05 14:58:29.493
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-05 14:58:29.500
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-05 14:58:49.875
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-05 14:58:49.882
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-05 14:59:03.332
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-05 14:59:03.339
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-05 14:59:13.794
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-05 14:59:13.801
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-05 15:03:12.052
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-05 15:03:12.058
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-05 15:03:39.430
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-05 15:03:39.437
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-05 15:03:49.207
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-05 15:03:49.214
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-05 15:06:14.087
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-05 15:06:14.094
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-05 15:06:23.796
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-05 15:06:23.802
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-05 15:14:04.532
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-05 15:14:04.538
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-05 15:14:37.611
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-05 15:14:37.619
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-05 15:15:21.083
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-05 15:15:21.091
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-05 15:17:15.000
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-05 15:17:15.005
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-05 15:18:46.781
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-05 15:18:46.804
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-05 15:20:23.069
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-05 15:20:23.076
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-05 15:33:30.699
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-05 15:33:30.706
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-05 15:39:12.711
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-05 15:39:12.717
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-05 15:47:06.356
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-05 15:47:06.362
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-05 15:47:23.376
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-05 15:47:23.382
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-05 15:47:36.381
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-05 15:47:36.388
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-05 15:47:48.275
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-05 15:47:48.282
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-05 15:48:20.138
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-05 15:48:20.144
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-05 15:50:56.494
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-05 15:50:56.499
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-05 15:53:09.585
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-05 15:53:09.592
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-05 15:55:19.170
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-05 15:55:19.176
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-05 15:58:15.251
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-05 15:58:15.257
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-05 15:58:48.510
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-05 15:58:48.516
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-05 16:07:43.322
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-05 16:07:43.328
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-05 16:08:09.933
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-05 16:08:09.939
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-05 16:10:15.469
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-05 16:10:15.475
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-05 16:11:50.750
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-05 16:11:50.755
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-05 16:12:47.412
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-05 16:12:47.418
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-05 16:13:24.565
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-05 16:13:24.572
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-05 16:13:30.194
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-05 16:13:30.200
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-05 16:13:36.781
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-05 16:13:36.787
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-05 17:18:31.307
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-05 17:18:31.313
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-05 17:18:41.018
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-05 17:18:41.025
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-05 17:19:36.792
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-05 17:19:36.798
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-05 17:19:44.942
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-05 17:19:44.948
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-05 17:19:59.818
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-05 17:19:59.823
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-05 17:20:17.171
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-05 17:20:17.177
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-05 17:20:27.574
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-05 17:20:27.580
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-05 17:20:31.717
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-05 17:20:31.723
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-05 17:21:00.617
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-05 17:21:00.623
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!
!SESSION 2020-05-06 09:27:46.446 -----------------------------------------------
eclipse.buildId=4.13.0.I20190916-1045
java.version=1.8.0_231
java.vendor=Oracle Corporation
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=ko_KR
Framework arguments:  -product org.eclipse.epp.package.jee.product
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.eclipse.epp.package.jee.product

!ENTRY org.eclipse.ui 4 4 2020-05-06 09:27:58.898
!MESSAGE Unable to create part
!STACK 1
org.eclipse.ui.PartInitException: Cannot determine URI for '/bulletinProj/src/main/java/com/proj/validation/FieldMatchValidator.java'.
	at org.eclipse.ui.texteditor.AbstractTextEditor.internalInit(AbstractTextEditor.java:3210)
	at org.eclipse.ui.texteditor.AbstractTextEditor.init(AbstractTextEditor.java:3221)
	at org.eclipse.ui.internal.EditorReference.initialize(EditorReference.java:353)
	at org.eclipse.ui.internal.e4.compatibility.CompatibilityPart.create(CompatibilityPart.java:340)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.eclipse.e4.core.internal.di.MethodRequestor.execute(MethodRequestor.java:58)
	at org.eclipse.e4.core.internal.di.InjectorImpl.processAnnotated(InjectorImpl.java:998)
	at org.eclipse.e4.core.internal.di.InjectorImpl.processAnnotated(InjectorImpl.java:963)
	at org.eclipse.e4.core.internal.di.InjectorImpl.internalInject(InjectorImpl.java:139)
	at org.eclipse.e4.core.internal.di.InjectorImpl.internalMake(InjectorImpl.java:408)
	at org.eclipse.e4.core.internal.di.InjectorImpl.make(InjectorImpl.java:331)
	at org.eclipse.e4.core.contexts.ContextInjectionFactory.make(ContextInjectionFactory.java:202)
	at org.eclipse.e4.ui.internal.workbench.ReflectionContributionFactory.createFromBundle(ReflectionContributionFactory.java:91)
	at org.eclipse.e4.ui.internal.workbench.ReflectionContributionFactory.doCreate(ReflectionContributionFactory.java:60)
	at org.eclipse.e4.ui.internal.workbench.ReflectionContributionFactory.create(ReflectionContributionFactory.java:42)
	at org.eclipse.e4.ui.workbench.renderers.swt.ContributedPartRenderer.createWidget(ContributedPartRenderer.java:132)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.createWidget(PartRenderingEngine.java:1002)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:662)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:768)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.access$0(PartRenderingEngine.java:739)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$2.run(PartRenderingEngine.java:733)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.createGui(PartRenderingEngine.java:717)
	at org.eclipse.e4.ui.workbench.renderers.swt.StackRenderer.showTab(StackRenderer.java:1293)
	at org.eclipse.e4.ui.workbench.renderers.swt.LazyStackRenderer.postProcess(LazyStackRenderer.java:105)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:680)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:768)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.access$0(PartRenderingEngine.java:739)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$2.run(PartRenderingEngine.java:733)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.createGui(PartRenderingEngine.java:717)
	at org.eclipse.e4.ui.workbench.renderers.swt.SWTPartRenderer.processContents(SWTPartRenderer.java:73)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:676)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$1.run(PartRenderingEngine.java:547)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.createGui(PartRenderingEngine.java:531)
	at org.eclipse.e4.ui.workbench.renderers.swt.ElementReferenceRenderer.createWidget(ElementReferenceRenderer.java:73)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.createWidget(PartRenderingEngine.java:1002)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:662)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:768)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.access$0(PartRenderingEngine.java:739)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$2.run(PartRenderingEngine.java:733)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.createGui(PartRenderingEngine.java:717)
	at org.eclipse.e4.ui.workbench.renderers.swt.SWTPartRenderer.processContents(SWTPartRenderer.java:73)
	at org.eclipse.e4.ui.workbench.renderers.swt.SashRenderer.processContents(SashRenderer.java:140)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:676)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:768)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.access$0(PartRenderingEngine.java:739)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$2.run(PartRenderingEngine.java:733)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.createGui(PartRenderingEngine.java:717)
	at org.eclipse.e4.ui.workbench.renderers.swt.SWTPartRenderer.processContents(SWTPartRenderer.java:73)
	at org.eclipse.e4.ui.workbench.renderers.swt.SashRenderer.processContents(SashRenderer.java:140)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:676)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:768)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.access$0(PartRenderingEngine.java:739)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$2.run(PartRenderingEngine.java:733)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.createGui(PartRenderingEngine.java:717)
	at org.eclipse.e4.ui.workbench.renderers.swt.SWTPartRenderer.processContents(SWTPartRenderer.java:73)
	at org.eclipse.e4.ui.workbench.renderers.swt.SashRenderer.processContents(SashRenderer.java:140)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:676)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:768)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.access$0(PartRenderingEngine.java:739)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$2.run(PartRenderingEngine.java:733)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.createGui(PartRenderingEngine.java:717)
	at org.eclipse.e4.ui.workbench.renderers.swt.SWTPartRenderer.processContents(SWTPartRenderer.java:73)
	at org.eclipse.e4.ui.workbench.renderers.swt.PerspectiveRenderer.processContents(PerspectiveRenderer.java:51)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:676)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:768)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.access$0(PartRenderingEngine.java:739)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$2.run(PartRenderingEngine.java:733)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.createGui(PartRenderingEngine.java:717)
	at org.eclipse.e4.ui.workbench.renderers.swt.PerspectiveStackRenderer.showTab(PerspectiveStackRenderer.java:82)
	at org.eclipse.e4.ui.workbench.renderers.swt.LazyStackRenderer.postProcess(LazyStackRenderer.java:105)
	at org.eclipse.e4.ui.workbench.renderers.swt.PerspectiveStackRenderer.postProcess(PerspectiveStackRenderer.java:64)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:680)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:768)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.access$0(PartRenderingEngine.java:739)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$2.run(PartRenderingEngine.java:733)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.createGui(PartRenderingEngine.java:717)
	at org.eclipse.e4.ui.workbench.renderers.swt.SWTPartRenderer.processContents(SWTPartRenderer.java:73)
	at org.eclipse.e4.ui.workbench.renderers.swt.SashRenderer.processContents(SashRenderer.java:140)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:676)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:768)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.access$0(PartRenderingEngine.java:739)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$2.run(PartRenderingEngine.java:733)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.createGui(PartRenderingEngine.java:717)
	at org.eclipse.e4.ui.workbench.renderers.swt.SWTPartRenderer.processContents(SWTPartRenderer.java:73)
	at org.eclipse.e4.ui.workbench.renderers.swt.WBWRenderer.processContents(WBWRenderer.java:665)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:676)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:768)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.access$0(PartRenderingEngine.java:739)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$2.run(PartRenderingEngine.java:733)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.createGui(PartRenderingEngine.java:717)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1086)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1049)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:633)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:557)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:150)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:150)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:137)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:107)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:400)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:660)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:597)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1468)
Caused by: org.eclipse.core.runtime.CoreException: Cannot determine URI for '/bulletinProj/src/main/java/com/proj/validation/FieldMatchValidator.java'.
	at org.eclipse.core.internal.filebuffers.ResourceFileBuffer.create(ResourceFileBuffer.java:239)
	at org.eclipse.core.internal.filebuffers.TextFileBufferManager.connect(TextFileBufferManager.java:115)
	at org.eclipse.ui.editors.text.TextFileDocumentProvider.createFileInfo(TextFileDocumentProvider.java:563)
	at org.eclipse.jdt.internal.ui.javaeditor.CompilationUnitDocumentProvider.createFileInfo(CompilationUnitDocumentProvider.java:1013)
	at org.eclipse.ui.editors.text.TextFileDocumentProvider.connect(TextFileDocumentProvider.java:481)
	at org.eclipse.jdt.internal.ui.javaeditor.CompilationUnitDocumentProvider.connect(CompilationUnitDocumentProvider.java:1277)
	at org.eclipse.ui.texteditor.AbstractTextEditor.doSetInput(AbstractTextEditor.java:4212)
	at org.eclipse.ui.texteditor.StatusTextEditor.doSetInput(StatusTextEditor.java:260)
	at org.eclipse.ui.texteditor.AbstractDecoratedTextEditor.doSetInput(AbstractDecoratedTextEditor.java:1478)
	at org.eclipse.jdt.internal.ui.javaeditor.JavaEditor.internalDoSetInput(JavaEditor.java:2573)
	at org.eclipse.jdt.internal.ui.javaeditor.JavaEditor.doSetInput(JavaEditor.java:2546)
	at org.eclipse.jdt.internal.ui.javaeditor.CompilationUnitEditor.doSetInput(CompilationUnitEditor.java:1423)
	at org.eclipse.ui.texteditor.AbstractTextEditor.lambda$1(AbstractTextEditor.java:3179)
	at org.eclipse.ui.internal.WorkbenchWindow.run(WorkbenchWindow.java:2313)
	at org.eclipse.ui.texteditor.AbstractTextEditor.internalInit(AbstractTextEditor.java:3196)
	... 124 more
!SUBENTRY 1 org.eclipse.core.filebuffers 4 0 2020-05-06 09:27:58.901
!MESSAGE Cannot determine URI for '/bulletinProj/src/main/java/com/proj/validation/FieldMatchValidator.java'.
!STACK 1
org.eclipse.core.runtime.CoreException: Cannot determine URI for '/bulletinProj/src/main/java/com/proj/validation/FieldMatchValidator.java'.
	at org.eclipse.core.internal.filebuffers.ResourceFileBuffer.create(ResourceFileBuffer.java:239)
	at org.eclipse.core.internal.filebuffers.TextFileBufferManager.connect(TextFileBufferManager.java:115)
	at org.eclipse.ui.editors.text.TextFileDocumentProvider.createFileInfo(TextFileDocumentProvider.java:563)
	at org.eclipse.jdt.internal.ui.javaeditor.CompilationUnitDocumentProvider.createFileInfo(CompilationUnitDocumentProvider.java:1013)
	at org.eclipse.ui.editors.text.TextFileDocumentProvider.connect(TextFileDocumentProvider.java:481)
	at org.eclipse.jdt.internal.ui.javaeditor.CompilationUnitDocumentProvider.connect(CompilationUnitDocumentProvider.java:1277)
	at org.eclipse.ui.texteditor.AbstractTextEditor.doSetInput(AbstractTextEditor.java:4212)
	at org.eclipse.ui.texteditor.StatusTextEditor.doSetInput(StatusTextEditor.java:260)
	at org.eclipse.ui.texteditor.AbstractDecoratedTextEditor.doSetInput(AbstractDecoratedTextEditor.java:1478)
	at org.eclipse.jdt.internal.ui.javaeditor.JavaEditor.internalDoSetInput(JavaEditor.java:2573)
	at org.eclipse.jdt.internal.ui.javaeditor.JavaEditor.doSetInput(JavaEditor.java:2546)
	at org.eclipse.jdt.internal.ui.javaeditor.CompilationUnitEditor.doSetInput(CompilationUnitEditor.java:1423)
	at org.eclipse.ui.texteditor.AbstractTextEditor.lambda$1(AbstractTextEditor.java:3179)
	at org.eclipse.ui.internal.WorkbenchWindow.run(WorkbenchWindow.java:2313)
	at org.eclipse.ui.texteditor.AbstractTextEditor.internalInit(AbstractTextEditor.java:3196)
	at org.eclipse.ui.texteditor.AbstractTextEditor.init(AbstractTextEditor.java:3221)
	at org.eclipse.ui.internal.EditorReference.initialize(EditorReference.java:353)
	at org.eclipse.ui.internal.e4.compatibility.CompatibilityPart.create(CompatibilityPart.java:340)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.eclipse.e4.core.internal.di.MethodRequestor.execute(MethodRequestor.java:58)
	at org.eclipse.e4.core.internal.di.InjectorImpl.processAnnotated(InjectorImpl.java:998)
	at org.eclipse.e4.core.internal.di.InjectorImpl.processAnnotated(InjectorImpl.java:963)
	at org.eclipse.e4.core.internal.di.InjectorImpl.internalInject(InjectorImpl.java:139)
	at org.eclipse.e4.core.internal.di.InjectorImpl.internalMake(InjectorImpl.java:408)
	at org.eclipse.e4.core.internal.di.InjectorImpl.make(InjectorImpl.java:331)
	at org.eclipse.e4.core.contexts.ContextInjectionFactory.make(ContextInjectionFactory.java:202)
	at org.eclipse.e4.ui.internal.workbench.ReflectionContributionFactory.createFromBundle(ReflectionContributionFactory.java:91)
	at org.eclipse.e4.ui.internal.workbench.ReflectionContributionFactory.doCreate(ReflectionContributionFactory.java:60)
	at org.eclipse.e4.ui.internal.workbench.ReflectionContributionFactory.create(ReflectionContributionFactory.java:42)
	at org.eclipse.e4.ui.workbench.renderers.swt.ContributedPartRenderer.createWidget(ContributedPartRenderer.java:132)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.createWidget(PartRenderingEngine.java:1002)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:662)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:768)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.access$0(PartRenderingEngine.java:739)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$2.run(PartRenderingEngine.java:733)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.createGui(PartRenderingEngine.java:717)
	at org.eclipse.e4.ui.workbench.renderers.swt.StackRenderer.showTab(StackRenderer.java:1293)
	at org.eclipse.e4.ui.workbench.renderers.swt.LazyStackRenderer.postProcess(LazyStackRenderer.java:105)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:680)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:768)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.access$0(PartRenderingEngine.java:739)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$2.run(PartRenderingEngine.java:733)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.createGui(PartRenderingEngine.java:717)
	at org.eclipse.e4.ui.workbench.renderers.swt.SWTPartRenderer.processContents(SWTPartRenderer.java:73)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:676)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$1.run(PartRenderingEngine.java:547)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.createGui(PartRenderingEngine.java:531)
	at org.eclipse.e4.ui.workbench.renderers.swt.ElementReferenceRenderer.createWidget(ElementReferenceRenderer.java:73)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.createWidget(PartRenderingEngine.java:1002)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:662)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:768)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.access$0(PartRenderingEngine.java:739)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$2.run(PartRenderingEngine.java:733)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.createGui(PartRenderingEngine.java:717)
	at org.eclipse.e4.ui.workbench.renderers.swt.SWTPartRenderer.processContents(SWTPartRenderer.java:73)
	at org.eclipse.e4.ui.workbench.renderers.swt.SashRenderer.processContents(SashRenderer.java:140)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:676)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:768)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.access$0(PartRenderingEngine.java:739)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$2.run(PartRenderingEngine.java:733)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.createGui(PartRenderingEngine.java:717)
	at org.eclipse.e4.ui.workbench.renderers.swt.SWTPartRenderer.processContents(SWTPartRenderer.java:73)
	at org.eclipse.e4.ui.workbench.renderers.swt.SashRenderer.processContents(SashRenderer.java:140)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:676)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:768)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.access$0(PartRenderingEngine.java:739)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$2.run(PartRenderingEngine.java:733)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.createGui(PartRenderingEngine.java:717)
	at org.eclipse.e4.ui.workbench.renderers.swt.SWTPartRenderer.processContents(SWTPartRenderer.java:73)
	at org.eclipse.e4.ui.workbench.renderers.swt.SashRenderer.processContents(SashRenderer.java:140)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:676)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:768)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.access$0(PartRenderingEngine.java:739)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$2.run(PartRenderingEngine.java:733)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.createGui(PartRenderingEngine.java:717)
	at org.eclipse.e4.ui.workbench.renderers.swt.SWTPartRenderer.processContents(SWTPartRenderer.java:73)
	at org.eclipse.e4.ui.workbench.renderers.swt.PerspectiveRenderer.processContents(PerspectiveRenderer.java:51)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:676)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:768)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.access$0(PartRenderingEngine.java:739)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$2.run(PartRenderingEngine.java:733)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.createGui(PartRenderingEngine.java:717)
	at org.eclipse.e4.ui.workbench.renderers.swt.PerspectiveStackRenderer.showTab(PerspectiveStackRenderer.java:82)
	at org.eclipse.e4.ui.workbench.renderers.swt.LazyStackRenderer.postProcess(LazyStackRenderer.java:105)
	at org.eclipse.e4.ui.workbench.renderers.swt.PerspectiveStackRenderer.postProcess(PerspectiveStackRenderer.java:64)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:680)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:768)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.access$0(PartRenderingEngine.java:739)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$2.run(PartRenderingEngine.java:733)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.createGui(PartRenderingEngine.java:717)
	at org.eclipse.e4.ui.workbench.renderers.swt.SWTPartRenderer.processContents(SWTPartRenderer.java:73)
	at org.eclipse.e4.ui.workbench.renderers.swt.SashRenderer.processContents(SashRenderer.java:140)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:676)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:768)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.access$0(PartRenderingEngine.java:739)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$2.run(PartRenderingEngine.java:733)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.createGui(PartRenderingEngine.java:717)
	at org.eclipse.e4.ui.workbench.renderers.swt.SWTPartRenderer.processContents(SWTPartRenderer.java:73)
	at org.eclipse.e4.ui.workbench.renderers.swt.WBWRenderer.processContents(WBWRenderer.java:665)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:676)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:768)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.access$0(PartRenderingEngine.java:739)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$2.run(PartRenderingEngine.java:733)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.createGui(PartRenderingEngine.java:717)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1086)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1049)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:633)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:557)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:150)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:150)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:137)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:107)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:400)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:660)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:597)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1468)
!SUBENTRY 2 org.eclipse.core.filebuffers 4 0 2020-05-06 09:27:58.901
!MESSAGE Cannot determine URI for '/bulletinProj/src/main/java/com/proj/validation/FieldMatchValidator.java'.

!ENTRY org.eclipse.egit.ui 2 0 2020-05-06 09:27:59.648
!MESSAGE Warning: The environment variable HOME is not set. The following directory will be used to store the Git
user global configuration and to define the default location to store repositories: 'C:\Users\YH'. If this is
not correct please set the HOME environment variable and restart Eclipse. Otherwise Git for Windows and
EGit might behave differently since they see different configuration options.
This warning can be switched off on the Team > Git > Confirmations and Warnings preference page.

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-06 09:28:10.696
!MESSAGE The artifact org.hibernate:hibernate-validator:jar:6.0.7.Final has been relocated to org.hibernate.validator:hibernate-validator:jar:6.0.7.Final

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-06 09:28:11.036
!MESSAGE The artifact org.hibernate:hibernate-validator:jar:6.0.7.Final has been relocated to org.hibernate.validator:hibernate-validator:jar:6.0.7.Final

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-06 09:28:14.940
!MESSAGE The artifact org.hibernate:hibernate-validator:jar:6.0.7.Final has been relocated to org.hibernate.validator:hibernate-validator:jar:6.0.7.Final

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-06 09:28:15.012
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-06 09:28:15.040
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 4 0 2020-05-06 09:33:54.476
!MESSAGE Not closed bracket?
!STACK 0
org.eclipse.jgit.errors.InvalidPatternException: Not closed bracket?
	at org.eclipse.jgit.ignore.internal.Strings.convertGlob(Strings.java:444)
	at org.eclipse.jgit.ignore.internal.WildCardMatcher.<init>(WildCardMatcher.java:64)
	at org.eclipse.jgit.ignore.internal.PathMatcher.createNameMatcher0(PathMatcher.java:178)
	at org.eclipse.jgit.ignore.internal.PathMatcher.createMatchers(PathMatcher.java:99)
	at org.eclipse.jgit.ignore.internal.PathMatcher.<init>(PathMatcher.java:84)
	at org.eclipse.jgit.ignore.internal.PathMatcher.createPathMatcher(PathMatcher.java:135)
	at org.eclipse.jgit.ignore.FastIgnoreRule.<init>(FastIgnoreRule.java:129)
	at org.eclipse.jgit.ignore.IgnoreNode.parse(IgnoreNode.java:115)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator$PerDirectoryIgnoreNode.load(WorkingTreeIterator.java:1346)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator$RootIgnoreNode.load(WorkingTreeIterator.java:1365)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.getIgnoreNode(WorkingTreeIterator.java:771)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isDirectoryIgnored(WorkingTreeIterator.java:1611)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isDirectoryIgnored(WorkingTreeIterator.java:1589)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isEntryIgnored(WorkingTreeIterator.java:753)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isEntryIgnored(WorkingTreeIterator.java:713)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isEntryIgnored(WorkingTreeIterator.java:700)
	at org.eclipse.jgit.treewalk.filter.IndexDiffFilter.include(IndexDiffFilter.java:170)
	at org.eclipse.jgit.treewalk.filter.TreeFilter.matchFilter(TreeFilter.java:228)
	at org.eclipse.jgit.treewalk.filter.AndTreeFilter$List.matchFilter(AndTreeFilter.java:190)
	at org.eclipse.jgit.treewalk.TreeWalk.next(TreeWalk.java:853)
	at org.eclipse.jgit.lib.IndexDiff.diff(IndexDiff.java:446)
	at org.eclipse.egit.core.internal.indexdiff.IndexDiffCacheEntry.calcIndexDiffDataFull(IndexDiffCacheEntry.java:675)
	at org.eclipse.egit.core.internal.indexdiff.IndexDiffCacheEntry.access$8(IndexDiffCacheEntry.java:663)
	at org.eclipse.egit.core.internal.indexdiff.IndexDiffCacheEntry$4.run(IndexDiffCacheEntry.java:415)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.m2e.logback.appender 4 0 2020-05-06 09:33:54.477
!MESSAGE Not closed bracket?
!STACK 0
org.eclipse.jgit.errors.InvalidPatternException: Not closed bracket?
	at org.eclipse.jgit.ignore.internal.Strings.convertGlob(Strings.java:444)
	at org.eclipse.jgit.ignore.internal.WildCardMatcher.<init>(WildCardMatcher.java:64)
	at org.eclipse.jgit.ignore.internal.PathMatcher.createNameMatcher0(PathMatcher.java:178)
	at org.eclipse.jgit.ignore.internal.PathMatcher.createMatchers(PathMatcher.java:99)
	at org.eclipse.jgit.ignore.internal.PathMatcher.<init>(PathMatcher.java:84)
	at org.eclipse.jgit.ignore.internal.PathMatcher.createPathMatcher(PathMatcher.java:135)
	at org.eclipse.jgit.ignore.FastIgnoreRule.<init>(FastIgnoreRule.java:129)
	at org.eclipse.jgit.ignore.IgnoreNode.parse(IgnoreNode.java:115)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator$PerDirectoryIgnoreNode.load(WorkingTreeIterator.java:1346)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator$RootIgnoreNode.load(WorkingTreeIterator.java:1365)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.getIgnoreNode(WorkingTreeIterator.java:771)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isDirectoryIgnored(WorkingTreeIterator.java:1611)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isDirectoryIgnored(WorkingTreeIterator.java:1589)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isEntryIgnored(WorkingTreeIterator.java:753)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isEntryIgnored(WorkingTreeIterator.java:713)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isEntryIgnored(WorkingTreeIterator.java:700)
	at org.eclipse.egit.ui.Activator$RepositoryChangeScanner.lambda$0(Activator.java:970)
	at org.eclipse.jgit.events.IndexChangedEvent.dispatch(IndexChangedEvent.java:81)
	at org.eclipse.jgit.events.IndexChangedEvent.dispatch(IndexChangedEvent.java:1)
	at org.eclipse.jgit.events.ListenerList.dispatch(ListenerList.java:133)
	at org.eclipse.jgit.lib.Repository.fireEvent(Repository.java:197)
	at org.eclipse.jgit.internal.storage.file.FileRepository.notifyIndexChanged(FileRepository.java:528)
	at org.eclipse.jgit.internal.storage.file.FileRepository.detectIndexChanges(FileRepository.java:519)
	at org.eclipse.jgit.internal.storage.file.FileRepository.scanForRepoChanges(FileRepository.java:500)
	at org.eclipse.egit.ui.Activator$RepositoryChangeScanner.run(Activator.java:1059)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.m2e.logback.appender 4 0 2020-05-06 09:33:54.479
!MESSAGE Not closed bracket?
!STACK 0
org.eclipse.jgit.errors.InvalidPatternException: Not closed bracket?
	at org.eclipse.jgit.ignore.internal.Strings.convertGlob(Strings.java:444)
	at org.eclipse.jgit.ignore.internal.WildCardMatcher.<init>(WildCardMatcher.java:64)
	at org.eclipse.jgit.ignore.internal.PathMatcher.createNameMatcher0(PathMatcher.java:178)
	at org.eclipse.jgit.ignore.internal.PathMatcher.createMatchers(PathMatcher.java:99)
	at org.eclipse.jgit.ignore.internal.PathMatcher.<init>(PathMatcher.java:84)
	at org.eclipse.jgit.ignore.internal.PathMatcher.createPathMatcher(PathMatcher.java:135)
	at org.eclipse.jgit.ignore.FastIgnoreRule.<init>(FastIgnoreRule.java:129)
	at org.eclipse.jgit.ignore.IgnoreNode.parse(IgnoreNode.java:115)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator$PerDirectoryIgnoreNode.load(WorkingTreeIterator.java:1346)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator$RootIgnoreNode.load(WorkingTreeIterator.java:1365)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.getIgnoreNode(WorkingTreeIterator.java:771)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isDirectoryIgnored(WorkingTreeIterator.java:1611)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isDirectoryIgnored(WorkingTreeIterator.java:1589)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isEntryIgnored(WorkingTreeIterator.java:753)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isEntryIgnored(WorkingTreeIterator.java:713)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isEntryIgnored(WorkingTreeIterator.java:700)
	at org.eclipse.egit.ui.Activator$RepositoryChangeScanner.lambda$0(Activator.java:970)
	at org.eclipse.jgit.events.IndexChangedEvent.dispatch(IndexChangedEvent.java:81)
	at org.eclipse.jgit.events.IndexChangedEvent.dispatch(IndexChangedEvent.java:1)
	at org.eclipse.jgit.events.ListenerList.dispatch(ListenerList.java:133)
	at org.eclipse.jgit.lib.Repository.fireEvent(Repository.java:197)
	at org.eclipse.jgit.internal.storage.file.FileRepository.notifyIndexChanged(FileRepository.java:528)
	at org.eclipse.jgit.internal.storage.file.FileRepository.detectIndexChanges(FileRepository.java:519)
	at org.eclipse.jgit.internal.storage.file.FileRepository.scanForRepoChanges(FileRepository.java:500)
	at org.eclipse.egit.ui.Activator$RepositoryChangeScanner.run(Activator.java:1059)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.m2e.logback.appender 4 0 2020-05-06 09:33:54.800
!MESSAGE Not closed bracket?
!STACK 0
org.eclipse.jgit.errors.InvalidPatternException: Not closed bracket?
	at org.eclipse.jgit.ignore.internal.Strings.convertGlob(Strings.java:444)
	at org.eclipse.jgit.ignore.internal.WildCardMatcher.<init>(WildCardMatcher.java:64)
	at org.eclipse.jgit.ignore.internal.PathMatcher.createNameMatcher0(PathMatcher.java:178)
	at org.eclipse.jgit.ignore.internal.PathMatcher.createMatchers(PathMatcher.java:99)
	at org.eclipse.jgit.ignore.internal.PathMatcher.<init>(PathMatcher.java:84)
	at org.eclipse.jgit.ignore.internal.PathMatcher.createPathMatcher(PathMatcher.java:135)
	at org.eclipse.jgit.ignore.FastIgnoreRule.<init>(FastIgnoreRule.java:129)
	at org.eclipse.jgit.ignore.IgnoreNode.parse(IgnoreNode.java:115)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator$PerDirectoryIgnoreNode.load(WorkingTreeIterator.java:1346)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator$RootIgnoreNode.load(WorkingTreeIterator.java:1365)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.getIgnoreNode(WorkingTreeIterator.java:771)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isDirectoryIgnored(WorkingTreeIterator.java:1611)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isDirectoryIgnored(WorkingTreeIterator.java:1589)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isEntryIgnored(WorkingTreeIterator.java:753)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isEntryIgnored(WorkingTreeIterator.java:713)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isEntryIgnored(WorkingTreeIterator.java:700)
	at org.eclipse.jgit.treewalk.filter.IndexDiffFilter.include(IndexDiffFilter.java:170)
	at org.eclipse.jgit.treewalk.filter.TreeFilter.matchFilter(TreeFilter.java:228)
	at org.eclipse.jgit.treewalk.filter.AndTreeFilter$List.matchFilter(AndTreeFilter.java:190)
	at org.eclipse.jgit.treewalk.TreeWalk.next(TreeWalk.java:853)
	at org.eclipse.jgit.lib.IndexDiff.diff(IndexDiff.java:446)
	at org.eclipse.egit.core.internal.indexdiff.IndexDiffCacheEntry.calcIndexDiffDataIncremental(IndexDiffCacheEntry.java:625)
	at org.eclipse.egit.core.internal.indexdiff.IndexDiffCacheEntry.access$13(IndexDiffCacheEntry.java:604)
	at org.eclipse.egit.core.internal.indexdiff.IndexDiffCacheEntry$5.updateIndexDiff(IndexDiffCacheEntry.java:550)
	at org.eclipse.egit.core.internal.indexdiff.IndexDiffUpdateJob.run(IndexDiffUpdateJob.java:77)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.equinox.p2.transport.ecf 2 0 2020-05-06 09:35:05.151
!MESSAGE Connection to http://jope.ow2.org/update/jope/p2.index failed on jope.ow2.org. Retry attempt 0 started
!STACK 0
java.net.UnknownHostException: jope.ow2.org
	at java.net.Inet6AddressImpl.lookupAllHostAddr(Native Method)
	at java.net.InetAddress$2.lookupAllHostAddr(Unknown Source)
	at java.net.InetAddress.getAddressesFromNameService(Unknown Source)
	at java.net.InetAddress.getAllByName0(Unknown Source)
	at java.net.InetAddress.getAllByName(Unknown Source)
	at java.net.InetAddress.getAllByName(Unknown Source)
	at org.apache.http.impl.conn.SystemDefaultDnsResolver.resolve(SystemDefaultDnsResolver.java:45)
	at org.apache.http.impl.conn.DefaultHttpClientConnectionOperator.connect(DefaultHttpClientConnectionOperator.java:112)
	at org.apache.http.impl.conn.PoolingHttpClientConnectionManager.connect(PoolingHttpClientConnectionManager.java:373)
	at org.apache.http.impl.execchain.MainClientExec.establishRoute(MainClientExec.java:394)
	at org.apache.http.impl.execchain.MainClientExec.execute(MainClientExec.java:237)
	at org.apache.http.impl.execchain.ProtocolExec.execute(ProtocolExec.java:185)
	at org.apache.http.impl.execchain.RetryExec.execute(RetryExec.java:89)
	at org.apache.http.impl.execchain.RedirectExec.execute(RedirectExec.java:110)
	at org.apache.http.impl.client.InternalHttpClient.doExecute(InternalHttpClient.java:185)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:83)
	at org.eclipse.ecf.provider.filetransfer.httpclient45.HttpClientRetrieveFileTransfer.performConnect(HttpClientRetrieveFileTransfer.java:1000)
	at org.eclipse.ecf.provider.filetransfer.httpclient45.HttpClientRetrieveFileTransfer.access$0(HttpClientRetrieveFileTransfer.java:992)
	at org.eclipse.ecf.provider.filetransfer.httpclient45.HttpClientRetrieveFileTransfer$1.performFileTransfer(HttpClientRetrieveFileTransfer.java:988)
	at org.eclipse.ecf.filetransfer.FileTransferJob.run(FileTransferJob.java:74)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.equinox.p2.transport.ecf 4 1006 2020-05-06 09:35:05.361
!MESSAGE Unknown Host: http://jope.ow2.org/update/jope/content.xml
!STACK 0
java.net.UnknownHostException: jope.ow2.org
	at java.net.InetAddress.getAllByName0(Unknown Source)
	at java.net.InetAddress.getAllByName(Unknown Source)
	at java.net.InetAddress.getAllByName(Unknown Source)
	at org.apache.http.impl.conn.SystemDefaultDnsResolver.resolve(SystemDefaultDnsResolver.java:45)
	at org.apache.http.impl.conn.DefaultHttpClientConnectionOperator.connect(DefaultHttpClientConnectionOperator.java:112)
	at org.apache.http.impl.conn.PoolingHttpClientConnectionManager.connect(PoolingHttpClientConnectionManager.java:373)
	at org.apache.http.impl.execchain.MainClientExec.establishRoute(MainClientExec.java:394)
	at org.apache.http.impl.execchain.MainClientExec.execute(MainClientExec.java:237)
	at org.apache.http.impl.execchain.ProtocolExec.execute(ProtocolExec.java:185)
	at org.apache.http.impl.execchain.RetryExec.execute(RetryExec.java:89)
	at org.apache.http.impl.execchain.RedirectExec.execute(RedirectExec.java:110)
	at org.apache.http.impl.client.InternalHttpClient.doExecute(InternalHttpClient.java:185)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:83)
	at org.eclipse.ecf.provider.filetransfer.httpclient45.HttpClientFileSystemBrowser.runRequest(HttpClientFileSystemBrowser.java:246)
	at org.eclipse.ecf.provider.filetransfer.browse.AbstractFileSystemBrowser$DirectoryJob.run(AbstractFileSystemBrowser.java:69)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.equinox.p2.transport.ecf 2 0 2020-05-06 09:35:08.950
!MESSAGE Connection to http://jope.ow2.org/update/jope/p2.index failed on jope.ow2.org. Retry attempt 0 started
!STACK 0
java.net.UnknownHostException: jope.ow2.org
	at java.net.InetAddress.getAllByName0(Unknown Source)
	at java.net.InetAddress.getAllByName(Unknown Source)
	at java.net.InetAddress.getAllByName(Unknown Source)
	at org.apache.http.impl.conn.SystemDefaultDnsResolver.resolve(SystemDefaultDnsResolver.java:45)
	at org.apache.http.impl.conn.DefaultHttpClientConnectionOperator.connect(DefaultHttpClientConnectionOperator.java:112)
	at org.apache.http.impl.conn.PoolingHttpClientConnectionManager.connect(PoolingHttpClientConnectionManager.java:373)
	at org.apache.http.impl.execchain.MainClientExec.establishRoute(MainClientExec.java:394)
	at org.apache.http.impl.execchain.MainClientExec.execute(MainClientExec.java:237)
	at org.apache.http.impl.execchain.ProtocolExec.execute(ProtocolExec.java:185)
	at org.apache.http.impl.execchain.RetryExec.execute(RetryExec.java:89)
	at org.apache.http.impl.execchain.RedirectExec.execute(RedirectExec.java:110)
	at org.apache.http.impl.client.InternalHttpClient.doExecute(InternalHttpClient.java:185)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:83)
	at org.eclipse.ecf.provider.filetransfer.httpclient45.HttpClientRetrieveFileTransfer.performConnect(HttpClientRetrieveFileTransfer.java:1000)
	at org.eclipse.ecf.provider.filetransfer.httpclient45.HttpClientRetrieveFileTransfer.access$0(HttpClientRetrieveFileTransfer.java:992)
	at org.eclipse.ecf.provider.filetransfer.httpclient45.HttpClientRetrieveFileTransfer$1.performFileTransfer(HttpClientRetrieveFileTransfer.java:988)
	at org.eclipse.ecf.filetransfer.FileTransferJob.run(FileTransferJob.java:74)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.m2e.logback.appender 4 0 2020-05-06 09:44:28.707
!MESSAGE Not closed bracket?
!STACK 0
org.eclipse.jgit.errors.InvalidPatternException: Not closed bracket?
	at org.eclipse.jgit.ignore.internal.Strings.convertGlob(Strings.java:444)
	at org.eclipse.jgit.ignore.internal.WildCardMatcher.<init>(WildCardMatcher.java:64)
	at org.eclipse.jgit.ignore.internal.PathMatcher.createNameMatcher0(PathMatcher.java:178)
	at org.eclipse.jgit.ignore.internal.PathMatcher.createMatchers(PathMatcher.java:99)
	at org.eclipse.jgit.ignore.internal.PathMatcher.<init>(PathMatcher.java:84)
	at org.eclipse.jgit.ignore.internal.PathMatcher.createPathMatcher(PathMatcher.java:135)
	at org.eclipse.jgit.ignore.FastIgnoreRule.<init>(FastIgnoreRule.java:129)
	at org.eclipse.jgit.ignore.IgnoreNode.parse(IgnoreNode.java:115)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator$PerDirectoryIgnoreNode.load(WorkingTreeIterator.java:1346)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator$RootIgnoreNode.load(WorkingTreeIterator.java:1365)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.getIgnoreNode(WorkingTreeIterator.java:771)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isDirectoryIgnored(WorkingTreeIterator.java:1611)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isDirectoryIgnored(WorkingTreeIterator.java:1589)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isEntryIgnored(WorkingTreeIterator.java:753)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isEntryIgnored(WorkingTreeIterator.java:713)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isEntryIgnored(WorkingTreeIterator.java:700)
	at org.eclipse.jgit.treewalk.filter.IndexDiffFilter.include(IndexDiffFilter.java:170)
	at org.eclipse.jgit.treewalk.filter.TreeFilter.matchFilter(TreeFilter.java:228)
	at org.eclipse.jgit.treewalk.filter.AndTreeFilter$List.matchFilter(AndTreeFilter.java:190)
	at org.eclipse.jgit.treewalk.TreeWalk.next(TreeWalk.java:853)
	at org.eclipse.jgit.lib.IndexDiff.diff(IndexDiff.java:446)
	at org.eclipse.egit.core.internal.indexdiff.IndexDiffCacheEntry.calcIndexDiffDataFull(IndexDiffCacheEntry.java:675)
	at org.eclipse.egit.core.internal.indexdiff.IndexDiffCacheEntry.access$8(IndexDiffCacheEntry.java:663)
	at org.eclipse.egit.core.internal.indexdiff.IndexDiffCacheEntry$4.run(IndexDiffCacheEntry.java:415)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.m2e.logback.appender 4 0 2020-05-06 09:57:14.923
!MESSAGE Not closed bracket?
!STACK 0
org.eclipse.jgit.errors.InvalidPatternException: Not closed bracket?
	at org.eclipse.jgit.ignore.internal.Strings.convertGlob(Strings.java:444)
	at org.eclipse.jgit.ignore.internal.WildCardMatcher.<init>(WildCardMatcher.java:64)
	at org.eclipse.jgit.ignore.internal.PathMatcher.createNameMatcher0(PathMatcher.java:178)
	at org.eclipse.jgit.ignore.internal.PathMatcher.createMatchers(PathMatcher.java:99)
	at org.eclipse.jgit.ignore.internal.PathMatcher.<init>(PathMatcher.java:84)
	at org.eclipse.jgit.ignore.internal.PathMatcher.createPathMatcher(PathMatcher.java:135)
	at org.eclipse.jgit.ignore.FastIgnoreRule.<init>(FastIgnoreRule.java:129)
	at org.eclipse.jgit.ignore.IgnoreNode.parse(IgnoreNode.java:115)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator$PerDirectoryIgnoreNode.load(WorkingTreeIterator.java:1346)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator$RootIgnoreNode.load(WorkingTreeIterator.java:1365)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.getIgnoreNode(WorkingTreeIterator.java:771)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isDirectoryIgnored(WorkingTreeIterator.java:1611)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isDirectoryIgnored(WorkingTreeIterator.java:1589)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isEntryIgnored(WorkingTreeIterator.java:753)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isEntryIgnored(WorkingTreeIterator.java:713)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isEntryIgnored(WorkingTreeIterator.java:700)
	at org.eclipse.jgit.treewalk.filter.IndexDiffFilter.include(IndexDiffFilter.java:170)
	at org.eclipse.jgit.treewalk.filter.TreeFilter.matchFilter(TreeFilter.java:228)
	at org.eclipse.jgit.treewalk.filter.AndTreeFilter$List.matchFilter(AndTreeFilter.java:190)
	at org.eclipse.jgit.treewalk.TreeWalk.next(TreeWalk.java:853)
	at org.eclipse.jgit.lib.IndexDiff.diff(IndexDiff.java:446)
	at org.eclipse.egit.core.internal.indexdiff.IndexDiffCacheEntry.calcIndexDiffDataIncremental(IndexDiffCacheEntry.java:625)
	at org.eclipse.egit.core.internal.indexdiff.IndexDiffCacheEntry.access$13(IndexDiffCacheEntry.java:604)
	at org.eclipse.egit.core.internal.indexdiff.IndexDiffCacheEntry$5.updateIndexDiff(IndexDiffCacheEntry.java:550)
	at org.eclipse.egit.core.internal.indexdiff.IndexDiffUpdateJob.run(IndexDiffUpdateJob.java:77)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-06 09:57:15.105
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-06 09:57:15.117
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 4 0 2020-05-06 09:57:15.126
!MESSAGE Not closed bracket?
!STACK 0
org.eclipse.jgit.errors.InvalidPatternException: Not closed bracket?
	at org.eclipse.jgit.ignore.internal.Strings.convertGlob(Strings.java:444)
	at org.eclipse.jgit.ignore.internal.WildCardMatcher.<init>(WildCardMatcher.java:64)
	at org.eclipse.jgit.ignore.internal.PathMatcher.createNameMatcher0(PathMatcher.java:178)
	at org.eclipse.jgit.ignore.internal.PathMatcher.createMatchers(PathMatcher.java:99)
	at org.eclipse.jgit.ignore.internal.PathMatcher.<init>(PathMatcher.java:84)
	at org.eclipse.jgit.ignore.internal.PathMatcher.createPathMatcher(PathMatcher.java:135)
	at org.eclipse.jgit.ignore.FastIgnoreRule.<init>(FastIgnoreRule.java:129)
	at org.eclipse.jgit.ignore.IgnoreNode.parse(IgnoreNode.java:115)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator$PerDirectoryIgnoreNode.load(WorkingTreeIterator.java:1346)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator$RootIgnoreNode.load(WorkingTreeIterator.java:1365)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.getIgnoreNode(WorkingTreeIterator.java:771)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isDirectoryIgnored(WorkingTreeIterator.java:1611)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isDirectoryIgnored(WorkingTreeIterator.java:1589)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isEntryIgnored(WorkingTreeIterator.java:753)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isEntryIgnored(WorkingTreeIterator.java:713)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isEntryIgnored(WorkingTreeIterator.java:700)
	at org.eclipse.jgit.treewalk.FileTreeIterator.createSubtreeIterator(FileTreeIterator.java:215)
	at org.eclipse.jgit.treewalk.AbstractTreeIterator.createSubtreeIterator(AbstractTreeIterator.java:594)
	at org.eclipse.jgit.treewalk.TreeWalk.enterSubtree(TreeWalk.java:1303)
	at org.eclipse.egit.core.RepositoryUtil.canBeAutoIgnored(RepositoryUtil.java:773)
	at org.eclipse.egit.core.Activator$IgnoreDerivedResources$1.visit(Activator.java:835)
	at org.eclipse.core.internal.events.ResourceDelta.accept(ResourceDelta.java:67)
	at org.eclipse.core.internal.events.ResourceDelta.accept(ResourceDelta.java:77)
	at org.eclipse.core.internal.events.ResourceDelta.accept(ResourceDelta.java:77)
	at org.eclipse.core.internal.events.ResourceDelta.accept(ResourceDelta.java:51)
	at org.eclipse.egit.core.Activator$IgnoreDerivedResources.resourceChanged(Activator.java:811)
	at org.eclipse.core.internal.events.NotificationManager$1.run(NotificationManager.java:305)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.core.internal.events.NotificationManager.notify(NotificationManager.java:295)
	at org.eclipse.core.internal.events.NotificationManager.broadcastChanges(NotificationManager.java:158)
	at org.eclipse.core.internal.resources.Workspace.broadcastPostChange(Workspace.java:379)
	at org.eclipse.core.internal.resources.Workspace.endOperation(Workspace.java:1502)
	at org.eclipse.core.internal.events.AutoBuildJob.doBuild(AutoBuildJob.java:169)
	at org.eclipse.core.internal.events.AutoBuildJob.run(AutoBuildJob.java:244)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.m2e.logback.appender 4 0 2020-05-06 09:57:15.227
!MESSAGE Not closed bracket?
!STACK 0
org.eclipse.jgit.errors.InvalidPatternException: Not closed bracket?
	at org.eclipse.jgit.ignore.internal.Strings.convertGlob(Strings.java:444)
	at org.eclipse.jgit.ignore.internal.WildCardMatcher.<init>(WildCardMatcher.java:64)
	at org.eclipse.jgit.ignore.internal.PathMatcher.createNameMatcher0(PathMatcher.java:178)
	at org.eclipse.jgit.ignore.internal.PathMatcher.createMatchers(PathMatcher.java:99)
	at org.eclipse.jgit.ignore.internal.PathMatcher.<init>(PathMatcher.java:84)
	at org.eclipse.jgit.ignore.internal.PathMatcher.createPathMatcher(PathMatcher.java:135)
	at org.eclipse.jgit.ignore.FastIgnoreRule.<init>(FastIgnoreRule.java:129)
	at org.eclipse.jgit.ignore.IgnoreNode.parse(IgnoreNode.java:115)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator$PerDirectoryIgnoreNode.load(WorkingTreeIterator.java:1346)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator$RootIgnoreNode.load(WorkingTreeIterator.java:1365)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.getIgnoreNode(WorkingTreeIterator.java:771)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isDirectoryIgnored(WorkingTreeIterator.java:1611)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isDirectoryIgnored(WorkingTreeIterator.java:1589)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isEntryIgnored(WorkingTreeIterator.java:753)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isEntryIgnored(WorkingTreeIterator.java:713)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isEntryIgnored(WorkingTreeIterator.java:700)
	at org.eclipse.jgit.treewalk.filter.IndexDiffFilter.include(IndexDiffFilter.java:170)
	at org.eclipse.jgit.treewalk.filter.TreeFilter.matchFilter(TreeFilter.java:228)
	at org.eclipse.jgit.treewalk.filter.AndTreeFilter$List.matchFilter(AndTreeFilter.java:190)
	at org.eclipse.jgit.treewalk.TreeWalk.next(TreeWalk.java:853)
	at org.eclipse.jgit.lib.IndexDiff.diff(IndexDiff.java:446)
	at org.eclipse.egit.core.internal.indexdiff.IndexDiffCacheEntry.calcIndexDiffDataIncremental(IndexDiffCacheEntry.java:625)
	at org.eclipse.egit.core.internal.indexdiff.IndexDiffCacheEntry.access$13(IndexDiffCacheEntry.java:604)
	at org.eclipse.egit.core.internal.indexdiff.IndexDiffCacheEntry$5.updateIndexDiff(IndexDiffCacheEntry.java:550)
	at org.eclipse.egit.core.internal.indexdiff.IndexDiffUpdateJob.run(IndexDiffUpdateJob.java:77)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.m2e.logback.appender 4 0 2020-05-06 09:57:38.484
!MESSAGE Not closed bracket?
!STACK 0
org.eclipse.jgit.errors.InvalidPatternException: Not closed bracket?
	at org.eclipse.jgit.ignore.internal.Strings.convertGlob(Strings.java:444)
	at org.eclipse.jgit.ignore.internal.WildCardMatcher.<init>(WildCardMatcher.java:64)
	at org.eclipse.jgit.ignore.internal.PathMatcher.createNameMatcher0(PathMatcher.java:178)
	at org.eclipse.jgit.ignore.internal.PathMatcher.createMatchers(PathMatcher.java:99)
	at org.eclipse.jgit.ignore.internal.PathMatcher.<init>(PathMatcher.java:84)
	at org.eclipse.jgit.ignore.internal.PathMatcher.createPathMatcher(PathMatcher.java:135)
	at org.eclipse.jgit.ignore.FastIgnoreRule.<init>(FastIgnoreRule.java:129)
	at org.eclipse.jgit.ignore.IgnoreNode.parse(IgnoreNode.java:115)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator$PerDirectoryIgnoreNode.load(WorkingTreeIterator.java:1346)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator$RootIgnoreNode.load(WorkingTreeIterator.java:1365)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.getIgnoreNode(WorkingTreeIterator.java:771)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isDirectoryIgnored(WorkingTreeIterator.java:1611)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isDirectoryIgnored(WorkingTreeIterator.java:1589)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isEntryIgnored(WorkingTreeIterator.java:753)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isEntryIgnored(WorkingTreeIterator.java:713)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isEntryIgnored(WorkingTreeIterator.java:700)
	at org.eclipse.jgit.treewalk.filter.IndexDiffFilter.include(IndexDiffFilter.java:170)
	at org.eclipse.jgit.treewalk.filter.TreeFilter.matchFilter(TreeFilter.java:228)
	at org.eclipse.jgit.treewalk.filter.AndTreeFilter$List.matchFilter(AndTreeFilter.java:190)
	at org.eclipse.jgit.treewalk.TreeWalk.next(TreeWalk.java:853)
	at org.eclipse.jgit.lib.IndexDiff.diff(IndexDiff.java:446)
	at org.eclipse.egit.core.internal.indexdiff.IndexDiffCacheEntry.calcIndexDiffDataIncremental(IndexDiffCacheEntry.java:625)
	at org.eclipse.egit.core.internal.indexdiff.IndexDiffCacheEntry.access$13(IndexDiffCacheEntry.java:604)
	at org.eclipse.egit.core.internal.indexdiff.IndexDiffCacheEntry$5.updateIndexDiff(IndexDiffCacheEntry.java:550)
	at org.eclipse.egit.core.internal.indexdiff.IndexDiffUpdateJob.run(IndexDiffUpdateJob.java:77)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-06 09:57:38.662
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-06 09:57:38.664
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 4 0 2020-05-06 09:57:38.668
!MESSAGE Not closed bracket?
!STACK 0
org.eclipse.jgit.errors.InvalidPatternException: Not closed bracket?
	at org.eclipse.jgit.ignore.internal.Strings.convertGlob(Strings.java:444)
	at org.eclipse.jgit.ignore.internal.WildCardMatcher.<init>(WildCardMatcher.java:64)
	at org.eclipse.jgit.ignore.internal.PathMatcher.createNameMatcher0(PathMatcher.java:178)
	at org.eclipse.jgit.ignore.internal.PathMatcher.createMatchers(PathMatcher.java:99)
	at org.eclipse.jgit.ignore.internal.PathMatcher.<init>(PathMatcher.java:84)
	at org.eclipse.jgit.ignore.internal.PathMatcher.createPathMatcher(PathMatcher.java:135)
	at org.eclipse.jgit.ignore.FastIgnoreRule.<init>(FastIgnoreRule.java:129)
	at org.eclipse.jgit.ignore.IgnoreNode.parse(IgnoreNode.java:115)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator$PerDirectoryIgnoreNode.load(WorkingTreeIterator.java:1346)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator$RootIgnoreNode.load(WorkingTreeIterator.java:1365)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.getIgnoreNode(WorkingTreeIterator.java:771)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isDirectoryIgnored(WorkingTreeIterator.java:1611)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isDirectoryIgnored(WorkingTreeIterator.java:1589)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isEntryIgnored(WorkingTreeIterator.java:753)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isEntryIgnored(WorkingTreeIterator.java:713)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isEntryIgnored(WorkingTreeIterator.java:700)
	at org.eclipse.jgit.treewalk.FileTreeIterator.createSubtreeIterator(FileTreeIterator.java:215)
	at org.eclipse.jgit.treewalk.AbstractTreeIterator.createSubtreeIterator(AbstractTreeIterator.java:594)
	at org.eclipse.jgit.treewalk.TreeWalk.enterSubtree(TreeWalk.java:1303)
	at org.eclipse.egit.core.RepositoryUtil.canBeAutoIgnored(RepositoryUtil.java:773)
	at org.eclipse.egit.core.Activator$IgnoreDerivedResources$1.visit(Activator.java:835)
	at org.eclipse.core.internal.events.ResourceDelta.accept(ResourceDelta.java:67)
	at org.eclipse.core.internal.events.ResourceDelta.accept(ResourceDelta.java:77)
	at org.eclipse.core.internal.events.ResourceDelta.accept(ResourceDelta.java:77)
	at org.eclipse.core.internal.events.ResourceDelta.accept(ResourceDelta.java:51)
	at org.eclipse.egit.core.Activator$IgnoreDerivedResources.resourceChanged(Activator.java:811)
	at org.eclipse.core.internal.events.NotificationManager$1.run(NotificationManager.java:305)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.core.internal.events.NotificationManager.notify(NotificationManager.java:295)
	at org.eclipse.core.internal.events.NotificationManager.broadcastChanges(NotificationManager.java:158)
	at org.eclipse.core.internal.resources.Workspace.broadcastPostChange(Workspace.java:379)
	at org.eclipse.core.internal.resources.Workspace.endOperation(Workspace.java:1502)
	at org.eclipse.core.internal.events.AutoBuildJob.doBuild(AutoBuildJob.java:169)
	at org.eclipse.core.internal.events.AutoBuildJob.run(AutoBuildJob.java:244)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.m2e.logback.appender 4 0 2020-05-06 09:57:38.784
!MESSAGE Not closed bracket?
!STACK 0
org.eclipse.jgit.errors.InvalidPatternException: Not closed bracket?
	at org.eclipse.jgit.ignore.internal.Strings.convertGlob(Strings.java:444)
	at org.eclipse.jgit.ignore.internal.WildCardMatcher.<init>(WildCardMatcher.java:64)
	at org.eclipse.jgit.ignore.internal.PathMatcher.createNameMatcher0(PathMatcher.java:178)
	at org.eclipse.jgit.ignore.internal.PathMatcher.createMatchers(PathMatcher.java:99)
	at org.eclipse.jgit.ignore.internal.PathMatcher.<init>(PathMatcher.java:84)
	at org.eclipse.jgit.ignore.internal.PathMatcher.createPathMatcher(PathMatcher.java:135)
	at org.eclipse.jgit.ignore.FastIgnoreRule.<init>(FastIgnoreRule.java:129)
	at org.eclipse.jgit.ignore.IgnoreNode.parse(IgnoreNode.java:115)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator$PerDirectoryIgnoreNode.load(WorkingTreeIterator.java:1346)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator$RootIgnoreNode.load(WorkingTreeIterator.java:1365)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.getIgnoreNode(WorkingTreeIterator.java:771)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isDirectoryIgnored(WorkingTreeIterator.java:1611)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isDirectoryIgnored(WorkingTreeIterator.java:1589)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isEntryIgnored(WorkingTreeIterator.java:753)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isEntryIgnored(WorkingTreeIterator.java:713)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isEntryIgnored(WorkingTreeIterator.java:700)
	at org.eclipse.jgit.treewalk.filter.IndexDiffFilter.include(IndexDiffFilter.java:170)
	at org.eclipse.jgit.treewalk.filter.TreeFilter.matchFilter(TreeFilter.java:228)
	at org.eclipse.jgit.treewalk.filter.AndTreeFilter$List.matchFilter(AndTreeFilter.java:190)
	at org.eclipse.jgit.treewalk.TreeWalk.next(TreeWalk.java:853)
	at org.eclipse.jgit.lib.IndexDiff.diff(IndexDiff.java:446)
	at org.eclipse.egit.core.internal.indexdiff.IndexDiffCacheEntry.calcIndexDiffDataIncremental(IndexDiffCacheEntry.java:625)
	at org.eclipse.egit.core.internal.indexdiff.IndexDiffCacheEntry.access$13(IndexDiffCacheEntry.java:604)
	at org.eclipse.egit.core.internal.indexdiff.IndexDiffCacheEntry$5.updateIndexDiff(IndexDiffCacheEntry.java:550)
	at org.eclipse.egit.core.internal.indexdiff.IndexDiffUpdateJob.run(IndexDiffUpdateJob.java:77)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.m2e.logback.appender 4 0 2020-05-06 09:58:57.350
!MESSAGE Not closed bracket?
!STACK 0
org.eclipse.jgit.errors.InvalidPatternException: Not closed bracket?
	at org.eclipse.jgit.ignore.internal.Strings.convertGlob(Strings.java:444)
	at org.eclipse.jgit.ignore.internal.WildCardMatcher.<init>(WildCardMatcher.java:64)
	at org.eclipse.jgit.ignore.internal.PathMatcher.createNameMatcher0(PathMatcher.java:178)
	at org.eclipse.jgit.ignore.internal.PathMatcher.createMatchers(PathMatcher.java:99)
	at org.eclipse.jgit.ignore.internal.PathMatcher.<init>(PathMatcher.java:84)
	at org.eclipse.jgit.ignore.internal.PathMatcher.createPathMatcher(PathMatcher.java:135)
	at org.eclipse.jgit.ignore.FastIgnoreRule.<init>(FastIgnoreRule.java:129)
	at org.eclipse.jgit.ignore.IgnoreNode.parse(IgnoreNode.java:115)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator$PerDirectoryIgnoreNode.load(WorkingTreeIterator.java:1346)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator$RootIgnoreNode.load(WorkingTreeIterator.java:1365)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.getIgnoreNode(WorkingTreeIterator.java:771)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isDirectoryIgnored(WorkingTreeIterator.java:1611)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isDirectoryIgnored(WorkingTreeIterator.java:1589)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isEntryIgnored(WorkingTreeIterator.java:753)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isEntryIgnored(WorkingTreeIterator.java:713)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isEntryIgnored(WorkingTreeIterator.java:700)
	at org.eclipse.jgit.treewalk.filter.IndexDiffFilter.include(IndexDiffFilter.java:170)
	at org.eclipse.jgit.treewalk.filter.TreeFilter.matchFilter(TreeFilter.java:228)
	at org.eclipse.jgit.treewalk.filter.AndTreeFilter$List.matchFilter(AndTreeFilter.java:190)
	at org.eclipse.jgit.treewalk.TreeWalk.next(TreeWalk.java:853)
	at org.eclipse.jgit.lib.IndexDiff.diff(IndexDiff.java:446)
	at org.eclipse.egit.core.internal.indexdiff.IndexDiffCacheEntry.calcIndexDiffDataIncremental(IndexDiffCacheEntry.java:625)
	at org.eclipse.egit.core.internal.indexdiff.IndexDiffCacheEntry.access$13(IndexDiffCacheEntry.java:604)
	at org.eclipse.egit.core.internal.indexdiff.IndexDiffCacheEntry$5.updateIndexDiff(IndexDiffCacheEntry.java:550)
	at org.eclipse.egit.core.internal.indexdiff.IndexDiffUpdateJob.run(IndexDiffUpdateJob.java:77)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-06 09:58:57.544
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-06 09:58:57.547
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 4 0 2020-05-06 09:58:57.551
!MESSAGE Not closed bracket?
!STACK 0
org.eclipse.jgit.errors.InvalidPatternException: Not closed bracket?
	at org.eclipse.jgit.ignore.internal.Strings.convertGlob(Strings.java:444)
	at org.eclipse.jgit.ignore.internal.WildCardMatcher.<init>(WildCardMatcher.java:64)
	at org.eclipse.jgit.ignore.internal.PathMatcher.createNameMatcher0(PathMatcher.java:178)
	at org.eclipse.jgit.ignore.internal.PathMatcher.createMatchers(PathMatcher.java:99)
	at org.eclipse.jgit.ignore.internal.PathMatcher.<init>(PathMatcher.java:84)
	at org.eclipse.jgit.ignore.internal.PathMatcher.createPathMatcher(PathMatcher.java:135)
	at org.eclipse.jgit.ignore.FastIgnoreRule.<init>(FastIgnoreRule.java:129)
	at org.eclipse.jgit.ignore.IgnoreNode.parse(IgnoreNode.java:115)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator$PerDirectoryIgnoreNode.load(WorkingTreeIterator.java:1346)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator$RootIgnoreNode.load(WorkingTreeIterator.java:1365)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.getIgnoreNode(WorkingTreeIterator.java:771)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isDirectoryIgnored(WorkingTreeIterator.java:1611)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isDirectoryIgnored(WorkingTreeIterator.java:1589)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isEntryIgnored(WorkingTreeIterator.java:753)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isEntryIgnored(WorkingTreeIterator.java:713)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isEntryIgnored(WorkingTreeIterator.java:700)
	at org.eclipse.jgit.treewalk.FileTreeIterator.createSubtreeIterator(FileTreeIterator.java:215)
	at org.eclipse.jgit.treewalk.AbstractTreeIterator.createSubtreeIterator(AbstractTreeIterator.java:594)
	at org.eclipse.jgit.treewalk.TreeWalk.enterSubtree(TreeWalk.java:1303)
	at org.eclipse.egit.core.RepositoryUtil.canBeAutoIgnored(RepositoryUtil.java:773)
	at org.eclipse.egit.core.Activator$IgnoreDerivedResources$1.visit(Activator.java:835)
	at org.eclipse.core.internal.events.ResourceDelta.accept(ResourceDelta.java:67)
	at org.eclipse.core.internal.events.ResourceDelta.accept(ResourceDelta.java:77)
	at org.eclipse.core.internal.events.ResourceDelta.accept(ResourceDelta.java:77)
	at org.eclipse.core.internal.events.ResourceDelta.accept(ResourceDelta.java:51)
	at org.eclipse.egit.core.Activator$IgnoreDerivedResources.resourceChanged(Activator.java:811)
	at org.eclipse.core.internal.events.NotificationManager$1.run(NotificationManager.java:305)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.core.internal.events.NotificationManager.notify(NotificationManager.java:295)
	at org.eclipse.core.internal.events.NotificationManager.broadcastChanges(NotificationManager.java:158)
	at org.eclipse.core.internal.resources.Workspace.broadcastPostChange(Workspace.java:379)
	at org.eclipse.core.internal.resources.Workspace.endOperation(Workspace.java:1502)
	at org.eclipse.core.internal.events.AutoBuildJob.doBuild(AutoBuildJob.java:169)
	at org.eclipse.core.internal.events.AutoBuildJob.run(AutoBuildJob.java:244)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.m2e.logback.appender 4 0 2020-05-06 09:58:57.658
!MESSAGE Not closed bracket?
!STACK 0
org.eclipse.jgit.errors.InvalidPatternException: Not closed bracket?
	at org.eclipse.jgit.ignore.internal.Strings.convertGlob(Strings.java:444)
	at org.eclipse.jgit.ignore.internal.WildCardMatcher.<init>(WildCardMatcher.java:64)
	at org.eclipse.jgit.ignore.internal.PathMatcher.createNameMatcher0(PathMatcher.java:178)
	at org.eclipse.jgit.ignore.internal.PathMatcher.createMatchers(PathMatcher.java:99)
	at org.eclipse.jgit.ignore.internal.PathMatcher.<init>(PathMatcher.java:84)
	at org.eclipse.jgit.ignore.internal.PathMatcher.createPathMatcher(PathMatcher.java:135)
	at org.eclipse.jgit.ignore.FastIgnoreRule.<init>(FastIgnoreRule.java:129)
	at org.eclipse.jgit.ignore.IgnoreNode.parse(IgnoreNode.java:115)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator$PerDirectoryIgnoreNode.load(WorkingTreeIterator.java:1346)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator$RootIgnoreNode.load(WorkingTreeIterator.java:1365)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.getIgnoreNode(WorkingTreeIterator.java:771)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isDirectoryIgnored(WorkingTreeIterator.java:1611)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isDirectoryIgnored(WorkingTreeIterator.java:1589)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isEntryIgnored(WorkingTreeIterator.java:753)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isEntryIgnored(WorkingTreeIterator.java:713)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isEntryIgnored(WorkingTreeIterator.java:700)
	at org.eclipse.jgit.treewalk.filter.IndexDiffFilter.include(IndexDiffFilter.java:170)
	at org.eclipse.jgit.treewalk.filter.TreeFilter.matchFilter(TreeFilter.java:228)
	at org.eclipse.jgit.treewalk.filter.AndTreeFilter$List.matchFilter(AndTreeFilter.java:190)
	at org.eclipse.jgit.treewalk.TreeWalk.next(TreeWalk.java:853)
	at org.eclipse.jgit.lib.IndexDiff.diff(IndexDiff.java:446)
	at org.eclipse.egit.core.internal.indexdiff.IndexDiffCacheEntry.calcIndexDiffDataIncremental(IndexDiffCacheEntry.java:625)
	at org.eclipse.egit.core.internal.indexdiff.IndexDiffCacheEntry.access$13(IndexDiffCacheEntry.java:604)
	at org.eclipse.egit.core.internal.indexdiff.IndexDiffCacheEntry$5.updateIndexDiff(IndexDiffCacheEntry.java:550)
	at org.eclipse.egit.core.internal.indexdiff.IndexDiffUpdateJob.run(IndexDiffUpdateJob.java:77)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.m2e.logback.appender 4 0 2020-05-06 09:59:17.506
!MESSAGE Not closed bracket?
!STACK 0
org.eclipse.jgit.errors.InvalidPatternException: Not closed bracket?
	at org.eclipse.jgit.ignore.internal.Strings.convertGlob(Strings.java:444)
	at org.eclipse.jgit.ignore.internal.WildCardMatcher.<init>(WildCardMatcher.java:64)
	at org.eclipse.jgit.ignore.internal.PathMatcher.createNameMatcher0(PathMatcher.java:178)
	at org.eclipse.jgit.ignore.internal.PathMatcher.createMatchers(PathMatcher.java:99)
	at org.eclipse.jgit.ignore.internal.PathMatcher.<init>(PathMatcher.java:84)
	at org.eclipse.jgit.ignore.internal.PathMatcher.createPathMatcher(PathMatcher.java:135)
	at org.eclipse.jgit.ignore.FastIgnoreRule.<init>(FastIgnoreRule.java:129)
	at org.eclipse.jgit.ignore.IgnoreNode.parse(IgnoreNode.java:115)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator$PerDirectoryIgnoreNode.load(WorkingTreeIterator.java:1346)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator$RootIgnoreNode.load(WorkingTreeIterator.java:1365)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.getIgnoreNode(WorkingTreeIterator.java:771)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isDirectoryIgnored(WorkingTreeIterator.java:1611)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isDirectoryIgnored(WorkingTreeIterator.java:1589)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isEntryIgnored(WorkingTreeIterator.java:753)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isEntryIgnored(WorkingTreeIterator.java:713)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isEntryIgnored(WorkingTreeIterator.java:700)
	at org.eclipse.jgit.treewalk.filter.IndexDiffFilter.include(IndexDiffFilter.java:170)
	at org.eclipse.jgit.treewalk.filter.TreeFilter.matchFilter(TreeFilter.java:228)
	at org.eclipse.jgit.treewalk.filter.AndTreeFilter$List.matchFilter(AndTreeFilter.java:190)
	at org.eclipse.jgit.treewalk.TreeWalk.next(TreeWalk.java:853)
	at org.eclipse.jgit.lib.IndexDiff.diff(IndexDiff.java:446)
	at org.eclipse.egit.core.internal.indexdiff.IndexDiffCacheEntry.calcIndexDiffDataIncremental(IndexDiffCacheEntry.java:625)
	at org.eclipse.egit.core.internal.indexdiff.IndexDiffCacheEntry.access$13(IndexDiffCacheEntry.java:604)
	at org.eclipse.egit.core.internal.indexdiff.IndexDiffCacheEntry$5.updateIndexDiff(IndexDiffCacheEntry.java:550)
	at org.eclipse.egit.core.internal.indexdiff.IndexDiffUpdateJob.run(IndexDiffUpdateJob.java:77)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-06 09:59:17.614
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-06 09:59:17.617
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 4 0 2020-05-06 10:01:24.010
!MESSAGE Not closed bracket?
!STACK 0
org.eclipse.jgit.errors.InvalidPatternException: Not closed bracket?
	at org.eclipse.jgit.ignore.internal.Strings.convertGlob(Strings.java:444)
	at org.eclipse.jgit.ignore.internal.WildCardMatcher.<init>(WildCardMatcher.java:64)
	at org.eclipse.jgit.ignore.internal.PathMatcher.createNameMatcher0(PathMatcher.java:178)
	at org.eclipse.jgit.ignore.internal.PathMatcher.createMatchers(PathMatcher.java:99)
	at org.eclipse.jgit.ignore.internal.PathMatcher.<init>(PathMatcher.java:84)
	at org.eclipse.jgit.ignore.internal.PathMatcher.createPathMatcher(PathMatcher.java:135)
	at org.eclipse.jgit.ignore.FastIgnoreRule.<init>(FastIgnoreRule.java:129)
	at org.eclipse.jgit.ignore.IgnoreNode.parse(IgnoreNode.java:115)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator$PerDirectoryIgnoreNode.load(WorkingTreeIterator.java:1346)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator$RootIgnoreNode.load(WorkingTreeIterator.java:1365)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.getIgnoreNode(WorkingTreeIterator.java:771)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isDirectoryIgnored(WorkingTreeIterator.java:1611)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isDirectoryIgnored(WorkingTreeIterator.java:1589)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isEntryIgnored(WorkingTreeIterator.java:753)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isEntryIgnored(WorkingTreeIterator.java:713)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isEntryIgnored(WorkingTreeIterator.java:700)
	at org.eclipse.jgit.treewalk.filter.IndexDiffFilter.include(IndexDiffFilter.java:170)
	at org.eclipse.jgit.treewalk.filter.TreeFilter.matchFilter(TreeFilter.java:228)
	at org.eclipse.jgit.treewalk.filter.AndTreeFilter$List.matchFilter(AndTreeFilter.java:190)
	at org.eclipse.jgit.treewalk.TreeWalk.next(TreeWalk.java:853)
	at org.eclipse.jgit.lib.IndexDiff.diff(IndexDiff.java:446)
	at org.eclipse.egit.core.internal.indexdiff.IndexDiffCacheEntry.calcIndexDiffDataIncremental(IndexDiffCacheEntry.java:625)
	at org.eclipse.egit.core.internal.indexdiff.IndexDiffCacheEntry.access$13(IndexDiffCacheEntry.java:604)
	at org.eclipse.egit.core.internal.indexdiff.IndexDiffCacheEntry$5.updateIndexDiff(IndexDiffCacheEntry.java:550)
	at org.eclipse.egit.core.internal.indexdiff.IndexDiffUpdateJob.run(IndexDiffUpdateJob.java:77)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-06 10:01:24.135
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-06 10:01:24.137
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 4 0 2020-05-06 10:01:24.140
!MESSAGE Not closed bracket?
!STACK 0
org.eclipse.jgit.errors.InvalidPatternException: Not closed bracket?
	at org.eclipse.jgit.ignore.internal.Strings.convertGlob(Strings.java:444)
	at org.eclipse.jgit.ignore.internal.WildCardMatcher.<init>(WildCardMatcher.java:64)
	at org.eclipse.jgit.ignore.internal.PathMatcher.createNameMatcher0(PathMatcher.java:178)
	at org.eclipse.jgit.ignore.internal.PathMatcher.createMatchers(PathMatcher.java:99)
	at org.eclipse.jgit.ignore.internal.PathMatcher.<init>(PathMatcher.java:84)
	at org.eclipse.jgit.ignore.internal.PathMatcher.createPathMatcher(PathMatcher.java:135)
	at org.eclipse.jgit.ignore.FastIgnoreRule.<init>(FastIgnoreRule.java:129)
	at org.eclipse.jgit.ignore.IgnoreNode.parse(IgnoreNode.java:115)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator$PerDirectoryIgnoreNode.load(WorkingTreeIterator.java:1346)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator$RootIgnoreNode.load(WorkingTreeIterator.java:1365)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.getIgnoreNode(WorkingTreeIterator.java:771)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isDirectoryIgnored(WorkingTreeIterator.java:1611)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isDirectoryIgnored(WorkingTreeIterator.java:1589)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isEntryIgnored(WorkingTreeIterator.java:753)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isEntryIgnored(WorkingTreeIterator.java:713)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isEntryIgnored(WorkingTreeIterator.java:700)
	at org.eclipse.jgit.treewalk.FileTreeIterator.createSubtreeIterator(FileTreeIterator.java:215)
	at org.eclipse.jgit.treewalk.AbstractTreeIterator.createSubtreeIterator(AbstractTreeIterator.java:594)
	at org.eclipse.jgit.treewalk.TreeWalk.enterSubtree(TreeWalk.java:1303)
	at org.eclipse.egit.core.RepositoryUtil.canBeAutoIgnored(RepositoryUtil.java:773)
	at org.eclipse.egit.core.Activator$IgnoreDerivedResources$1.visit(Activator.java:835)
	at org.eclipse.core.internal.events.ResourceDelta.accept(ResourceDelta.java:67)
	at org.eclipse.core.internal.events.ResourceDelta.accept(ResourceDelta.java:77)
	at org.eclipse.core.internal.events.ResourceDelta.accept(ResourceDelta.java:77)
	at org.eclipse.core.internal.events.ResourceDelta.accept(ResourceDelta.java:51)
	at org.eclipse.egit.core.Activator$IgnoreDerivedResources.resourceChanged(Activator.java:811)
	at org.eclipse.core.internal.events.NotificationManager$1.run(NotificationManager.java:305)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.core.internal.events.NotificationManager.notify(NotificationManager.java:295)
	at org.eclipse.core.internal.events.NotificationManager.broadcastChanges(NotificationManager.java:158)
	at org.eclipse.core.internal.resources.Workspace.broadcastPostChange(Workspace.java:379)
	at org.eclipse.core.internal.resources.Workspace.endOperation(Workspace.java:1502)
	at org.eclipse.core.internal.events.AutoBuildJob.doBuild(AutoBuildJob.java:169)
	at org.eclipse.core.internal.events.AutoBuildJob.run(AutoBuildJob.java:244)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.m2e.logback.appender 4 0 2020-05-06 10:01:24.260
!MESSAGE Not closed bracket?
!STACK 0
org.eclipse.jgit.errors.InvalidPatternException: Not closed bracket?
	at org.eclipse.jgit.ignore.internal.Strings.convertGlob(Strings.java:444)
	at org.eclipse.jgit.ignore.internal.WildCardMatcher.<init>(WildCardMatcher.java:64)
	at org.eclipse.jgit.ignore.internal.PathMatcher.createNameMatcher0(PathMatcher.java:178)
	at org.eclipse.jgit.ignore.internal.PathMatcher.createMatchers(PathMatcher.java:99)
	at org.eclipse.jgit.ignore.internal.PathMatcher.<init>(PathMatcher.java:84)
	at org.eclipse.jgit.ignore.internal.PathMatcher.createPathMatcher(PathMatcher.java:135)
	at org.eclipse.jgit.ignore.FastIgnoreRule.<init>(FastIgnoreRule.java:129)
	at org.eclipse.jgit.ignore.IgnoreNode.parse(IgnoreNode.java:115)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator$PerDirectoryIgnoreNode.load(WorkingTreeIterator.java:1346)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator$RootIgnoreNode.load(WorkingTreeIterator.java:1365)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.getIgnoreNode(WorkingTreeIterator.java:771)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isDirectoryIgnored(WorkingTreeIterator.java:1611)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isDirectoryIgnored(WorkingTreeIterator.java:1589)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isEntryIgnored(WorkingTreeIterator.java:753)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isEntryIgnored(WorkingTreeIterator.java:713)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isEntryIgnored(WorkingTreeIterator.java:700)
	at org.eclipse.jgit.treewalk.filter.IndexDiffFilter.include(IndexDiffFilter.java:170)
	at org.eclipse.jgit.treewalk.filter.TreeFilter.matchFilter(TreeFilter.java:228)
	at org.eclipse.jgit.treewalk.filter.AndTreeFilter$List.matchFilter(AndTreeFilter.java:190)
	at org.eclipse.jgit.treewalk.TreeWalk.next(TreeWalk.java:853)
	at org.eclipse.jgit.lib.IndexDiff.diff(IndexDiff.java:446)
	at org.eclipse.egit.core.internal.indexdiff.IndexDiffCacheEntry.calcIndexDiffDataIncremental(IndexDiffCacheEntry.java:625)
	at org.eclipse.egit.core.internal.indexdiff.IndexDiffCacheEntry.access$13(IndexDiffCacheEntry.java:604)
	at org.eclipse.egit.core.internal.indexdiff.IndexDiffCacheEntry$5.updateIndexDiff(IndexDiffCacheEntry.java:550)
	at org.eclipse.egit.core.internal.indexdiff.IndexDiffUpdateJob.run(IndexDiffUpdateJob.java:77)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.m2e.logback.appender 4 0 2020-05-06 10:02:46.808
!MESSAGE Not closed bracket?
!STACK 0
org.eclipse.jgit.errors.InvalidPatternException: Not closed bracket?
	at org.eclipse.jgit.ignore.internal.Strings.convertGlob(Strings.java:444)
	at org.eclipse.jgit.ignore.internal.WildCardMatcher.<init>(WildCardMatcher.java:64)
	at org.eclipse.jgit.ignore.internal.PathMatcher.createNameMatcher0(PathMatcher.java:178)
	at org.eclipse.jgit.ignore.internal.PathMatcher.createMatchers(PathMatcher.java:99)
	at org.eclipse.jgit.ignore.internal.PathMatcher.<init>(PathMatcher.java:84)
	at org.eclipse.jgit.ignore.internal.PathMatcher.createPathMatcher(PathMatcher.java:135)
	at org.eclipse.jgit.ignore.FastIgnoreRule.<init>(FastIgnoreRule.java:129)
	at org.eclipse.jgit.ignore.IgnoreNode.parse(IgnoreNode.java:115)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator$PerDirectoryIgnoreNode.load(WorkingTreeIterator.java:1346)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator$RootIgnoreNode.load(WorkingTreeIterator.java:1365)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.getIgnoreNode(WorkingTreeIterator.java:771)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isDirectoryIgnored(WorkingTreeIterator.java:1611)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isDirectoryIgnored(WorkingTreeIterator.java:1589)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isEntryIgnored(WorkingTreeIterator.java:753)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isEntryIgnored(WorkingTreeIterator.java:713)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isEntryIgnored(WorkingTreeIterator.java:700)
	at org.eclipse.jgit.treewalk.filter.IndexDiffFilter.include(IndexDiffFilter.java:170)
	at org.eclipse.jgit.treewalk.filter.TreeFilter.matchFilter(TreeFilter.java:228)
	at org.eclipse.jgit.treewalk.filter.AndTreeFilter$List.matchFilter(AndTreeFilter.java:190)
	at org.eclipse.jgit.treewalk.TreeWalk.next(TreeWalk.java:853)
	at org.eclipse.jgit.lib.IndexDiff.diff(IndexDiff.java:446)
	at org.eclipse.egit.core.internal.indexdiff.IndexDiffCacheEntry.calcIndexDiffDataIncremental(IndexDiffCacheEntry.java:625)
	at org.eclipse.egit.core.internal.indexdiff.IndexDiffCacheEntry.access$13(IndexDiffCacheEntry.java:604)
	at org.eclipse.egit.core.internal.indexdiff.IndexDiffCacheEntry$5.updateIndexDiff(IndexDiffCacheEntry.java:550)
	at org.eclipse.egit.core.internal.indexdiff.IndexDiffUpdateJob.run(IndexDiffUpdateJob.java:77)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-06 10:02:47.001
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-06 10:02:47.003
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 4 0 2020-05-06 10:02:47.006
!MESSAGE Not closed bracket?
!STACK 0
org.eclipse.jgit.errors.InvalidPatternException: Not closed bracket?
	at org.eclipse.jgit.ignore.internal.Strings.convertGlob(Strings.java:444)
	at org.eclipse.jgit.ignore.internal.WildCardMatcher.<init>(WildCardMatcher.java:64)
	at org.eclipse.jgit.ignore.internal.PathMatcher.createNameMatcher0(PathMatcher.java:178)
	at org.eclipse.jgit.ignore.internal.PathMatcher.createMatchers(PathMatcher.java:99)
	at org.eclipse.jgit.ignore.internal.PathMatcher.<init>(PathMatcher.java:84)
	at org.eclipse.jgit.ignore.internal.PathMatcher.createPathMatcher(PathMatcher.java:135)
	at org.eclipse.jgit.ignore.FastIgnoreRule.<init>(FastIgnoreRule.java:129)
	at org.eclipse.jgit.ignore.IgnoreNode.parse(IgnoreNode.java:115)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator$PerDirectoryIgnoreNode.load(WorkingTreeIterator.java:1346)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator$RootIgnoreNode.load(WorkingTreeIterator.java:1365)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.getIgnoreNode(WorkingTreeIterator.java:771)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isDirectoryIgnored(WorkingTreeIterator.java:1611)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isDirectoryIgnored(WorkingTreeIterator.java:1589)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isEntryIgnored(WorkingTreeIterator.java:753)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isEntryIgnored(WorkingTreeIterator.java:713)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isEntryIgnored(WorkingTreeIterator.java:700)
	at org.eclipse.jgit.treewalk.FileTreeIterator.createSubtreeIterator(FileTreeIterator.java:215)
	at org.eclipse.jgit.treewalk.AbstractTreeIterator.createSubtreeIterator(AbstractTreeIterator.java:594)
	at org.eclipse.jgit.treewalk.TreeWalk.enterSubtree(TreeWalk.java:1303)
	at org.eclipse.egit.core.RepositoryUtil.canBeAutoIgnored(RepositoryUtil.java:773)
	at org.eclipse.egit.core.Activator$IgnoreDerivedResources$1.visit(Activator.java:835)
	at org.eclipse.core.internal.events.ResourceDelta.accept(ResourceDelta.java:67)
	at org.eclipse.core.internal.events.ResourceDelta.accept(ResourceDelta.java:77)
	at org.eclipse.core.internal.events.ResourceDelta.accept(ResourceDelta.java:77)
	at org.eclipse.core.internal.events.ResourceDelta.accept(ResourceDelta.java:51)
	at org.eclipse.egit.core.Activator$IgnoreDerivedResources.resourceChanged(Activator.java:811)
	at org.eclipse.core.internal.events.NotificationManager$1.run(NotificationManager.java:305)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.core.internal.events.NotificationManager.notify(NotificationManager.java:295)
	at org.eclipse.core.internal.events.NotificationManager.broadcastChanges(NotificationManager.java:158)
	at org.eclipse.core.internal.resources.Workspace.broadcastPostChange(Workspace.java:379)
	at org.eclipse.core.internal.resources.Workspace.endOperation(Workspace.java:1502)
	at org.eclipse.core.internal.events.AutoBuildJob.doBuild(AutoBuildJob.java:169)
	at org.eclipse.core.internal.events.AutoBuildJob.run(AutoBuildJob.java:244)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.m2e.logback.appender 4 0 2020-05-06 10:02:47.107
!MESSAGE Not closed bracket?
!STACK 0
org.eclipse.jgit.errors.InvalidPatternException: Not closed bracket?
	at org.eclipse.jgit.ignore.internal.Strings.convertGlob(Strings.java:444)
	at org.eclipse.jgit.ignore.internal.WildCardMatcher.<init>(WildCardMatcher.java:64)
	at org.eclipse.jgit.ignore.internal.PathMatcher.createNameMatcher0(PathMatcher.java:178)
	at org.eclipse.jgit.ignore.internal.PathMatcher.createMatchers(PathMatcher.java:99)
	at org.eclipse.jgit.ignore.internal.PathMatcher.<init>(PathMatcher.java:84)
	at org.eclipse.jgit.ignore.internal.PathMatcher.createPathMatcher(PathMatcher.java:135)
	at org.eclipse.jgit.ignore.FastIgnoreRule.<init>(FastIgnoreRule.java:129)
	at org.eclipse.jgit.ignore.IgnoreNode.parse(IgnoreNode.java:115)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator$PerDirectoryIgnoreNode.load(WorkingTreeIterator.java:1346)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator$RootIgnoreNode.load(WorkingTreeIterator.java:1365)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.getIgnoreNode(WorkingTreeIterator.java:771)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isDirectoryIgnored(WorkingTreeIterator.java:1611)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isDirectoryIgnored(WorkingTreeIterator.java:1589)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isEntryIgnored(WorkingTreeIterator.java:753)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isEntryIgnored(WorkingTreeIterator.java:713)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isEntryIgnored(WorkingTreeIterator.java:700)
	at org.eclipse.jgit.treewalk.filter.IndexDiffFilter.include(IndexDiffFilter.java:170)
	at org.eclipse.jgit.treewalk.filter.TreeFilter.matchFilter(TreeFilter.java:228)
	at org.eclipse.jgit.treewalk.filter.AndTreeFilter$List.matchFilter(AndTreeFilter.java:190)
	at org.eclipse.jgit.treewalk.TreeWalk.next(TreeWalk.java:853)
	at org.eclipse.jgit.lib.IndexDiff.diff(IndexDiff.java:446)
	at org.eclipse.egit.core.internal.indexdiff.IndexDiffCacheEntry.calcIndexDiffDataIncremental(IndexDiffCacheEntry.java:625)
	at org.eclipse.egit.core.internal.indexdiff.IndexDiffCacheEntry.access$13(IndexDiffCacheEntry.java:604)
	at org.eclipse.egit.core.internal.indexdiff.IndexDiffCacheEntry$5.updateIndexDiff(IndexDiffCacheEntry.java:550)
	at org.eclipse.egit.core.internal.indexdiff.IndexDiffUpdateJob.run(IndexDiffUpdateJob.java:77)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.m2e.logback.appender 4 0 2020-05-06 10:03:28.832
!MESSAGE Not closed bracket?
!STACK 0
org.eclipse.jgit.errors.InvalidPatternException: Not closed bracket?
	at org.eclipse.jgit.ignore.internal.Strings.convertGlob(Strings.java:444)
	at org.eclipse.jgit.ignore.internal.WildCardMatcher.<init>(WildCardMatcher.java:64)
	at org.eclipse.jgit.ignore.internal.PathMatcher.createNameMatcher0(PathMatcher.java:178)
	at org.eclipse.jgit.ignore.internal.PathMatcher.createMatchers(PathMatcher.java:99)
	at org.eclipse.jgit.ignore.internal.PathMatcher.<init>(PathMatcher.java:84)
	at org.eclipse.jgit.ignore.internal.PathMatcher.createPathMatcher(PathMatcher.java:135)
	at org.eclipse.jgit.ignore.FastIgnoreRule.<init>(FastIgnoreRule.java:129)
	at org.eclipse.jgit.ignore.IgnoreNode.parse(IgnoreNode.java:115)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator$PerDirectoryIgnoreNode.load(WorkingTreeIterator.java:1346)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator$RootIgnoreNode.load(WorkingTreeIterator.java:1365)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.getIgnoreNode(WorkingTreeIterator.java:771)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isDirectoryIgnored(WorkingTreeIterator.java:1611)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isDirectoryIgnored(WorkingTreeIterator.java:1589)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isEntryIgnored(WorkingTreeIterator.java:753)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isEntryIgnored(WorkingTreeIterator.java:713)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isEntryIgnored(WorkingTreeIterator.java:700)
	at org.eclipse.jgit.treewalk.filter.IndexDiffFilter.include(IndexDiffFilter.java:170)
	at org.eclipse.jgit.treewalk.filter.TreeFilter.matchFilter(TreeFilter.java:228)
	at org.eclipse.jgit.treewalk.filter.AndTreeFilter$List.matchFilter(AndTreeFilter.java:190)
	at org.eclipse.jgit.treewalk.TreeWalk.next(TreeWalk.java:853)
	at org.eclipse.jgit.lib.IndexDiff.diff(IndexDiff.java:446)
	at org.eclipse.egit.core.internal.indexdiff.IndexDiffCacheEntry.calcIndexDiffDataIncremental(IndexDiffCacheEntry.java:625)
	at org.eclipse.egit.core.internal.indexdiff.IndexDiffCacheEntry.access$13(IndexDiffCacheEntry.java:604)
	at org.eclipse.egit.core.internal.indexdiff.IndexDiffCacheEntry$5.updateIndexDiff(IndexDiffCacheEntry.java:550)
	at org.eclipse.egit.core.internal.indexdiff.IndexDiffUpdateJob.run(IndexDiffUpdateJob.java:77)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-06 10:03:28.953
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-06 10:03:28.955
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 4 0 2020-05-06 10:03:28.958
!MESSAGE Not closed bracket?
!STACK 0
org.eclipse.jgit.errors.InvalidPatternException: Not closed bracket?
	at org.eclipse.jgit.ignore.internal.Strings.convertGlob(Strings.java:444)
	at org.eclipse.jgit.ignore.internal.WildCardMatcher.<init>(WildCardMatcher.java:64)
	at org.eclipse.jgit.ignore.internal.PathMatcher.createNameMatcher0(PathMatcher.java:178)
	at org.eclipse.jgit.ignore.internal.PathMatcher.createMatchers(PathMatcher.java:99)
	at org.eclipse.jgit.ignore.internal.PathMatcher.<init>(PathMatcher.java:84)
	at org.eclipse.jgit.ignore.internal.PathMatcher.createPathMatcher(PathMatcher.java:135)
	at org.eclipse.jgit.ignore.FastIgnoreRule.<init>(FastIgnoreRule.java:129)
	at org.eclipse.jgit.ignore.IgnoreNode.parse(IgnoreNode.java:115)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator$PerDirectoryIgnoreNode.load(WorkingTreeIterator.java:1346)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator$RootIgnoreNode.load(WorkingTreeIterator.java:1365)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.getIgnoreNode(WorkingTreeIterator.java:771)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isDirectoryIgnored(WorkingTreeIterator.java:1611)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isDirectoryIgnored(WorkingTreeIterator.java:1589)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isEntryIgnored(WorkingTreeIterator.java:753)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isEntryIgnored(WorkingTreeIterator.java:713)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isEntryIgnored(WorkingTreeIterator.java:700)
	at org.eclipse.jgit.treewalk.FileTreeIterator.createSubtreeIterator(FileTreeIterator.java:215)
	at org.eclipse.jgit.treewalk.AbstractTreeIterator.createSubtreeIterator(AbstractTreeIterator.java:594)
	at org.eclipse.jgit.treewalk.TreeWalk.enterSubtree(TreeWalk.java:1303)
	at org.eclipse.egit.core.RepositoryUtil.canBeAutoIgnored(RepositoryUtil.java:773)
	at org.eclipse.egit.core.Activator$IgnoreDerivedResources$1.visit(Activator.java:835)
	at org.eclipse.core.internal.events.ResourceDelta.accept(ResourceDelta.java:67)
	at org.eclipse.core.internal.events.ResourceDelta.accept(ResourceDelta.java:77)
	at org.eclipse.core.internal.events.ResourceDelta.accept(ResourceDelta.java:77)
	at org.eclipse.core.internal.events.ResourceDelta.accept(ResourceDelta.java:51)
	at org.eclipse.egit.core.Activator$IgnoreDerivedResources.resourceChanged(Activator.java:811)
	at org.eclipse.core.internal.events.NotificationManager$1.run(NotificationManager.java:305)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.core.internal.events.NotificationManager.notify(NotificationManager.java:295)
	at org.eclipse.core.internal.events.NotificationManager.broadcastChanges(NotificationManager.java:158)
	at org.eclipse.core.internal.resources.Workspace.broadcastPostChange(Workspace.java:379)
	at org.eclipse.core.internal.resources.Workspace.endOperation(Workspace.java:1502)
	at org.eclipse.core.internal.events.AutoBuildJob.doBuild(AutoBuildJob.java:169)
	at org.eclipse.core.internal.events.AutoBuildJob.run(AutoBuildJob.java:244)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.m2e.logback.appender 4 0 2020-05-06 10:03:29.055
!MESSAGE Not closed bracket?
!STACK 0
org.eclipse.jgit.errors.InvalidPatternException: Not closed bracket?
	at org.eclipse.jgit.ignore.internal.Strings.convertGlob(Strings.java:444)
	at org.eclipse.jgit.ignore.internal.WildCardMatcher.<init>(WildCardMatcher.java:64)
	at org.eclipse.jgit.ignore.internal.PathMatcher.createNameMatcher0(PathMatcher.java:178)
	at org.eclipse.jgit.ignore.internal.PathMatcher.createMatchers(PathMatcher.java:99)
	at org.eclipse.jgit.ignore.internal.PathMatcher.<init>(PathMatcher.java:84)
	at org.eclipse.jgit.ignore.internal.PathMatcher.createPathMatcher(PathMatcher.java:135)
	at org.eclipse.jgit.ignore.FastIgnoreRule.<init>(FastIgnoreRule.java:129)
	at org.eclipse.jgit.ignore.IgnoreNode.parse(IgnoreNode.java:115)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator$PerDirectoryIgnoreNode.load(WorkingTreeIterator.java:1346)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator$RootIgnoreNode.load(WorkingTreeIterator.java:1365)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.getIgnoreNode(WorkingTreeIterator.java:771)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isDirectoryIgnored(WorkingTreeIterator.java:1611)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isDirectoryIgnored(WorkingTreeIterator.java:1589)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isEntryIgnored(WorkingTreeIterator.java:753)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isEntryIgnored(WorkingTreeIterator.java:713)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isEntryIgnored(WorkingTreeIterator.java:700)
	at org.eclipse.jgit.treewalk.filter.IndexDiffFilter.include(IndexDiffFilter.java:170)
	at org.eclipse.jgit.treewalk.filter.TreeFilter.matchFilter(TreeFilter.java:228)
	at org.eclipse.jgit.treewalk.filter.AndTreeFilter$List.matchFilter(AndTreeFilter.java:190)
	at org.eclipse.jgit.treewalk.TreeWalk.next(TreeWalk.java:853)
	at org.eclipse.jgit.lib.IndexDiff.diff(IndexDiff.java:446)
	at org.eclipse.egit.core.internal.indexdiff.IndexDiffCacheEntry.calcIndexDiffDataIncremental(IndexDiffCacheEntry.java:625)
	at org.eclipse.egit.core.internal.indexdiff.IndexDiffCacheEntry.access$13(IndexDiffCacheEntry.java:604)
	at org.eclipse.egit.core.internal.indexdiff.IndexDiffCacheEntry$5.updateIndexDiff(IndexDiffCacheEntry.java:550)
	at org.eclipse.egit.core.internal.indexdiff.IndexDiffUpdateJob.run(IndexDiffUpdateJob.java:77)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.m2e.logback.appender 4 0 2020-05-06 10:05:59.904
!MESSAGE Not closed bracket?
!STACK 0
org.eclipse.jgit.errors.InvalidPatternException: Not closed bracket?
	at org.eclipse.jgit.ignore.internal.Strings.convertGlob(Strings.java:444)
	at org.eclipse.jgit.ignore.internal.WildCardMatcher.<init>(WildCardMatcher.java:64)
	at org.eclipse.jgit.ignore.internal.PathMatcher.createNameMatcher0(PathMatcher.java:178)
	at org.eclipse.jgit.ignore.internal.PathMatcher.createMatchers(PathMatcher.java:99)
	at org.eclipse.jgit.ignore.internal.PathMatcher.<init>(PathMatcher.java:84)
	at org.eclipse.jgit.ignore.internal.PathMatcher.createPathMatcher(PathMatcher.java:135)
	at org.eclipse.jgit.ignore.FastIgnoreRule.<init>(FastIgnoreRule.java:129)
	at org.eclipse.jgit.ignore.IgnoreNode.parse(IgnoreNode.java:115)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator$PerDirectoryIgnoreNode.load(WorkingTreeIterator.java:1346)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator$RootIgnoreNode.load(WorkingTreeIterator.java:1365)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.getIgnoreNode(WorkingTreeIterator.java:771)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isDirectoryIgnored(WorkingTreeIterator.java:1611)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isDirectoryIgnored(WorkingTreeIterator.java:1589)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isEntryIgnored(WorkingTreeIterator.java:753)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isEntryIgnored(WorkingTreeIterator.java:713)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isEntryIgnored(WorkingTreeIterator.java:700)
	at org.eclipse.jgit.treewalk.filter.IndexDiffFilter.include(IndexDiffFilter.java:170)
	at org.eclipse.jgit.treewalk.filter.TreeFilter.matchFilter(TreeFilter.java:228)
	at org.eclipse.jgit.treewalk.filter.AndTreeFilter$List.matchFilter(AndTreeFilter.java:190)
	at org.eclipse.jgit.treewalk.TreeWalk.next(TreeWalk.java:853)
	at org.eclipse.jgit.lib.IndexDiff.diff(IndexDiff.java:446)
	at org.eclipse.egit.core.internal.indexdiff.IndexDiffCacheEntry.calcIndexDiffDataIncremental(IndexDiffCacheEntry.java:625)
	at org.eclipse.egit.core.internal.indexdiff.IndexDiffCacheEntry.access$13(IndexDiffCacheEntry.java:604)
	at org.eclipse.egit.core.internal.indexdiff.IndexDiffCacheEntry$5.updateIndexDiff(IndexDiffCacheEntry.java:550)
	at org.eclipse.egit.core.internal.indexdiff.IndexDiffUpdateJob.run(IndexDiffUpdateJob.java:77)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-06 10:06:00.070
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-06 10:06:00.072
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 4 0 2020-05-06 10:06:00.075
!MESSAGE Not closed bracket?
!STACK 0
org.eclipse.jgit.errors.InvalidPatternException: Not closed bracket?
	at org.eclipse.jgit.ignore.internal.Strings.convertGlob(Strings.java:444)
	at org.eclipse.jgit.ignore.internal.WildCardMatcher.<init>(WildCardMatcher.java:64)
	at org.eclipse.jgit.ignore.internal.PathMatcher.createNameMatcher0(PathMatcher.java:178)
	at org.eclipse.jgit.ignore.internal.PathMatcher.createMatchers(PathMatcher.java:99)
	at org.eclipse.jgit.ignore.internal.PathMatcher.<init>(PathMatcher.java:84)
	at org.eclipse.jgit.ignore.internal.PathMatcher.createPathMatcher(PathMatcher.java:135)
	at org.eclipse.jgit.ignore.FastIgnoreRule.<init>(FastIgnoreRule.java:129)
	at org.eclipse.jgit.ignore.IgnoreNode.parse(IgnoreNode.java:115)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator$PerDirectoryIgnoreNode.load(WorkingTreeIterator.java:1346)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator$RootIgnoreNode.load(WorkingTreeIterator.java:1365)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.getIgnoreNode(WorkingTreeIterator.java:771)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isDirectoryIgnored(WorkingTreeIterator.java:1611)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isDirectoryIgnored(WorkingTreeIterator.java:1589)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isEntryIgnored(WorkingTreeIterator.java:753)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isEntryIgnored(WorkingTreeIterator.java:713)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isEntryIgnored(WorkingTreeIterator.java:700)
	at org.eclipse.jgit.treewalk.FileTreeIterator.createSubtreeIterator(FileTreeIterator.java:215)
	at org.eclipse.jgit.treewalk.AbstractTreeIterator.createSubtreeIterator(AbstractTreeIterator.java:594)
	at org.eclipse.jgit.treewalk.TreeWalk.enterSubtree(TreeWalk.java:1303)
	at org.eclipse.egit.core.RepositoryUtil.canBeAutoIgnored(RepositoryUtil.java:773)
	at org.eclipse.egit.core.Activator$IgnoreDerivedResources$1.visit(Activator.java:835)
	at org.eclipse.core.internal.events.ResourceDelta.accept(ResourceDelta.java:67)
	at org.eclipse.core.internal.events.ResourceDelta.accept(ResourceDelta.java:77)
	at org.eclipse.core.internal.events.ResourceDelta.accept(ResourceDelta.java:77)
	at org.eclipse.core.internal.events.ResourceDelta.accept(ResourceDelta.java:51)
	at org.eclipse.egit.core.Activator$IgnoreDerivedResources.resourceChanged(Activator.java:811)
	at org.eclipse.core.internal.events.NotificationManager$1.run(NotificationManager.java:305)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.core.internal.events.NotificationManager.notify(NotificationManager.java:295)
	at org.eclipse.core.internal.events.NotificationManager.broadcastChanges(NotificationManager.java:158)
	at org.eclipse.core.internal.resources.Workspace.broadcastPostChange(Workspace.java:379)
	at org.eclipse.core.internal.resources.Workspace.endOperation(Workspace.java:1502)
	at org.eclipse.core.internal.events.AutoBuildJob.doBuild(AutoBuildJob.java:169)
	at org.eclipse.core.internal.events.AutoBuildJob.run(AutoBuildJob.java:244)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.m2e.logback.appender 4 0 2020-05-06 10:06:00.175
!MESSAGE Not closed bracket?
!STACK 0
org.eclipse.jgit.errors.InvalidPatternException: Not closed bracket?
	at org.eclipse.jgit.ignore.internal.Strings.convertGlob(Strings.java:444)
	at org.eclipse.jgit.ignore.internal.WildCardMatcher.<init>(WildCardMatcher.java:64)
	at org.eclipse.jgit.ignore.internal.PathMatcher.createNameMatcher0(PathMatcher.java:178)
	at org.eclipse.jgit.ignore.internal.PathMatcher.createMatchers(PathMatcher.java:99)
	at org.eclipse.jgit.ignore.internal.PathMatcher.<init>(PathMatcher.java:84)
	at org.eclipse.jgit.ignore.internal.PathMatcher.createPathMatcher(PathMatcher.java:135)
	at org.eclipse.jgit.ignore.FastIgnoreRule.<init>(FastIgnoreRule.java:129)
	at org.eclipse.jgit.ignore.IgnoreNode.parse(IgnoreNode.java:115)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator$PerDirectoryIgnoreNode.load(WorkingTreeIterator.java:1346)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator$RootIgnoreNode.load(WorkingTreeIterator.java:1365)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.getIgnoreNode(WorkingTreeIterator.java:771)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isDirectoryIgnored(WorkingTreeIterator.java:1611)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isDirectoryIgnored(WorkingTreeIterator.java:1589)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isEntryIgnored(WorkingTreeIterator.java:753)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isEntryIgnored(WorkingTreeIterator.java:713)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isEntryIgnored(WorkingTreeIterator.java:700)
	at org.eclipse.jgit.treewalk.filter.IndexDiffFilter.include(IndexDiffFilter.java:170)
	at org.eclipse.jgit.treewalk.filter.TreeFilter.matchFilter(TreeFilter.java:228)
	at org.eclipse.jgit.treewalk.filter.AndTreeFilter$List.matchFilter(AndTreeFilter.java:190)
	at org.eclipse.jgit.treewalk.TreeWalk.next(TreeWalk.java:853)
	at org.eclipse.jgit.lib.IndexDiff.diff(IndexDiff.java:446)
	at org.eclipse.egit.core.internal.indexdiff.IndexDiffCacheEntry.calcIndexDiffDataIncremental(IndexDiffCacheEntry.java:625)
	at org.eclipse.egit.core.internal.indexdiff.IndexDiffCacheEntry.access$13(IndexDiffCacheEntry.java:604)
	at org.eclipse.egit.core.internal.indexdiff.IndexDiffCacheEntry$5.updateIndexDiff(IndexDiffCacheEntry.java:550)
	at org.eclipse.egit.core.internal.indexdiff.IndexDiffUpdateJob.run(IndexDiffUpdateJob.java:77)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.m2e.logback.appender 4 0 2020-05-06 10:06:08.653
!MESSAGE Not closed bracket?
!STACK 0
org.eclipse.jgit.errors.InvalidPatternException: Not closed bracket?
	at org.eclipse.jgit.ignore.internal.Strings.convertGlob(Strings.java:444)
	at org.eclipse.jgit.ignore.internal.WildCardMatcher.<init>(WildCardMatcher.java:64)
	at org.eclipse.jgit.ignore.internal.PathMatcher.createNameMatcher0(PathMatcher.java:178)
	at org.eclipse.jgit.ignore.internal.PathMatcher.createMatchers(PathMatcher.java:99)
	at org.eclipse.jgit.ignore.internal.PathMatcher.<init>(PathMatcher.java:84)
	at org.eclipse.jgit.ignore.internal.PathMatcher.createPathMatcher(PathMatcher.java:135)
	at org.eclipse.jgit.ignore.FastIgnoreRule.<init>(FastIgnoreRule.java:129)
	at org.eclipse.jgit.ignore.IgnoreNode.parse(IgnoreNode.java:115)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator$PerDirectoryIgnoreNode.load(WorkingTreeIterator.java:1346)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator$RootIgnoreNode.load(WorkingTreeIterator.java:1365)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.getIgnoreNode(WorkingTreeIterator.java:771)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isDirectoryIgnored(WorkingTreeIterator.java:1611)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isDirectoryIgnored(WorkingTreeIterator.java:1589)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isEntryIgnored(WorkingTreeIterator.java:753)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isEntryIgnored(WorkingTreeIterator.java:713)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isEntryIgnored(WorkingTreeIterator.java:700)
	at org.eclipse.jgit.treewalk.filter.IndexDiffFilter.include(IndexDiffFilter.java:170)
	at org.eclipse.jgit.treewalk.filter.TreeFilter.matchFilter(TreeFilter.java:228)
	at org.eclipse.jgit.treewalk.filter.AndTreeFilter$List.matchFilter(AndTreeFilter.java:190)
	at org.eclipse.jgit.treewalk.TreeWalk.next(TreeWalk.java:853)
	at org.eclipse.jgit.lib.IndexDiff.diff(IndexDiff.java:446)
	at org.eclipse.egit.core.internal.indexdiff.IndexDiffCacheEntry.calcIndexDiffDataIncremental(IndexDiffCacheEntry.java:625)
	at org.eclipse.egit.core.internal.indexdiff.IndexDiffCacheEntry.access$13(IndexDiffCacheEntry.java:604)
	at org.eclipse.egit.core.internal.indexdiff.IndexDiffCacheEntry$5.updateIndexDiff(IndexDiffCacheEntry.java:550)
	at org.eclipse.egit.core.internal.indexdiff.IndexDiffUpdateJob.run(IndexDiffUpdateJob.java:77)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-06 10:06:08.833
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-06 10:06:08.834
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 4 0 2020-05-06 10:06:08.838
!MESSAGE Not closed bracket?
!STACK 0
org.eclipse.jgit.errors.InvalidPatternException: Not closed bracket?
	at org.eclipse.jgit.ignore.internal.Strings.convertGlob(Strings.java:444)
	at org.eclipse.jgit.ignore.internal.WildCardMatcher.<init>(WildCardMatcher.java:64)
	at org.eclipse.jgit.ignore.internal.PathMatcher.createNameMatcher0(PathMatcher.java:178)
	at org.eclipse.jgit.ignore.internal.PathMatcher.createMatchers(PathMatcher.java:99)
	at org.eclipse.jgit.ignore.internal.PathMatcher.<init>(PathMatcher.java:84)
	at org.eclipse.jgit.ignore.internal.PathMatcher.createPathMatcher(PathMatcher.java:135)
	at org.eclipse.jgit.ignore.FastIgnoreRule.<init>(FastIgnoreRule.java:129)
	at org.eclipse.jgit.ignore.IgnoreNode.parse(IgnoreNode.java:115)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator$PerDirectoryIgnoreNode.load(WorkingTreeIterator.java:1346)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator$RootIgnoreNode.load(WorkingTreeIterator.java:1365)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.getIgnoreNode(WorkingTreeIterator.java:771)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isDirectoryIgnored(WorkingTreeIterator.java:1611)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isDirectoryIgnored(WorkingTreeIterator.java:1589)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isEntryIgnored(WorkingTreeIterator.java:753)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isEntryIgnored(WorkingTreeIterator.java:713)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isEntryIgnored(WorkingTreeIterator.java:700)
	at org.eclipse.jgit.treewalk.FileTreeIterator.createSubtreeIterator(FileTreeIterator.java:215)
	at org.eclipse.jgit.treewalk.AbstractTreeIterator.createSubtreeIterator(AbstractTreeIterator.java:594)
	at org.eclipse.jgit.treewalk.TreeWalk.enterSubtree(TreeWalk.java:1303)
	at org.eclipse.egit.core.RepositoryUtil.canBeAutoIgnored(RepositoryUtil.java:773)
	at org.eclipse.egit.core.Activator$IgnoreDerivedResources$1.visit(Activator.java:835)
	at org.eclipse.core.internal.events.ResourceDelta.accept(ResourceDelta.java:67)
	at org.eclipse.core.internal.events.ResourceDelta.accept(ResourceDelta.java:77)
	at org.eclipse.core.internal.events.ResourceDelta.accept(ResourceDelta.java:77)
	at org.eclipse.core.internal.events.ResourceDelta.accept(ResourceDelta.java:51)
	at org.eclipse.egit.core.Activator$IgnoreDerivedResources.resourceChanged(Activator.java:811)
	at org.eclipse.core.internal.events.NotificationManager$1.run(NotificationManager.java:305)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.core.internal.events.NotificationManager.notify(NotificationManager.java:295)
	at org.eclipse.core.internal.events.NotificationManager.broadcastChanges(NotificationManager.java:158)
	at org.eclipse.core.internal.resources.Workspace.broadcastPostChange(Workspace.java:379)
	at org.eclipse.core.internal.resources.Workspace.endOperation(Workspace.java:1502)
	at org.eclipse.core.internal.events.AutoBuildJob.doBuild(AutoBuildJob.java:169)
	at org.eclipse.core.internal.events.AutoBuildJob.run(AutoBuildJob.java:244)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.m2e.logback.appender 4 0 2020-05-06 10:06:08.940
!MESSAGE Not closed bracket?
!STACK 0
org.eclipse.jgit.errors.InvalidPatternException: Not closed bracket?
	at org.eclipse.jgit.ignore.internal.Strings.convertGlob(Strings.java:444)
	at org.eclipse.jgit.ignore.internal.WildCardMatcher.<init>(WildCardMatcher.java:64)
	at org.eclipse.jgit.ignore.internal.PathMatcher.createNameMatcher0(PathMatcher.java:178)
	at org.eclipse.jgit.ignore.internal.PathMatcher.createMatchers(PathMatcher.java:99)
	at org.eclipse.jgit.ignore.internal.PathMatcher.<init>(PathMatcher.java:84)
	at org.eclipse.jgit.ignore.internal.PathMatcher.createPathMatcher(PathMatcher.java:135)
	at org.eclipse.jgit.ignore.FastIgnoreRule.<init>(FastIgnoreRule.java:129)
	at org.eclipse.jgit.ignore.IgnoreNode.parse(IgnoreNode.java:115)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator$PerDirectoryIgnoreNode.load(WorkingTreeIterator.java:1346)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator$RootIgnoreNode.load(WorkingTreeIterator.java:1365)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.getIgnoreNode(WorkingTreeIterator.java:771)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isDirectoryIgnored(WorkingTreeIterator.java:1611)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isDirectoryIgnored(WorkingTreeIterator.java:1589)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isEntryIgnored(WorkingTreeIterator.java:753)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isEntryIgnored(WorkingTreeIterator.java:713)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isEntryIgnored(WorkingTreeIterator.java:700)
	at org.eclipse.jgit.treewalk.filter.IndexDiffFilter.include(IndexDiffFilter.java:170)
	at org.eclipse.jgit.treewalk.filter.TreeFilter.matchFilter(TreeFilter.java:228)
	at org.eclipse.jgit.treewalk.filter.AndTreeFilter$List.matchFilter(AndTreeFilter.java:190)
	at org.eclipse.jgit.treewalk.TreeWalk.next(TreeWalk.java:853)
	at org.eclipse.jgit.lib.IndexDiff.diff(IndexDiff.java:446)
	at org.eclipse.egit.core.internal.indexdiff.IndexDiffCacheEntry.calcIndexDiffDataIncremental(IndexDiffCacheEntry.java:625)
	at org.eclipse.egit.core.internal.indexdiff.IndexDiffCacheEntry.access$13(IndexDiffCacheEntry.java:604)
	at org.eclipse.egit.core.internal.indexdiff.IndexDiffCacheEntry$5.updateIndexDiff(IndexDiffCacheEntry.java:550)
	at org.eclipse.egit.core.internal.indexdiff.IndexDiffUpdateJob.run(IndexDiffUpdateJob.java:77)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.m2e.logback.appender 4 0 2020-05-06 10:07:13.882
!MESSAGE Not closed bracket?
!STACK 0
org.eclipse.jgit.errors.InvalidPatternException: Not closed bracket?
	at org.eclipse.jgit.ignore.internal.Strings.convertGlob(Strings.java:444)
	at org.eclipse.jgit.ignore.internal.WildCardMatcher.<init>(WildCardMatcher.java:64)
	at org.eclipse.jgit.ignore.internal.PathMatcher.createNameMatcher0(PathMatcher.java:178)
	at org.eclipse.jgit.ignore.internal.PathMatcher.createMatchers(PathMatcher.java:99)
	at org.eclipse.jgit.ignore.internal.PathMatcher.<init>(PathMatcher.java:84)
	at org.eclipse.jgit.ignore.internal.PathMatcher.createPathMatcher(PathMatcher.java:135)
	at org.eclipse.jgit.ignore.FastIgnoreRule.<init>(FastIgnoreRule.java:129)
	at org.eclipse.jgit.ignore.IgnoreNode.parse(IgnoreNode.java:115)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator$PerDirectoryIgnoreNode.load(WorkingTreeIterator.java:1346)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator$RootIgnoreNode.load(WorkingTreeIterator.java:1365)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.getIgnoreNode(WorkingTreeIterator.java:771)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isDirectoryIgnored(WorkingTreeIterator.java:1611)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isDirectoryIgnored(WorkingTreeIterator.java:1589)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isEntryIgnored(WorkingTreeIterator.java:753)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isEntryIgnored(WorkingTreeIterator.java:713)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isEntryIgnored(WorkingTreeIterator.java:700)
	at org.eclipse.jgit.treewalk.filter.IndexDiffFilter.include(IndexDiffFilter.java:170)
	at org.eclipse.jgit.treewalk.filter.TreeFilter.matchFilter(TreeFilter.java:228)
	at org.eclipse.jgit.treewalk.filter.AndTreeFilter$List.matchFilter(AndTreeFilter.java:190)
	at org.eclipse.jgit.treewalk.TreeWalk.next(TreeWalk.java:853)
	at org.eclipse.jgit.lib.IndexDiff.diff(IndexDiff.java:446)
	at org.eclipse.egit.core.internal.indexdiff.IndexDiffCacheEntry.calcIndexDiffDataIncremental(IndexDiffCacheEntry.java:625)
	at org.eclipse.egit.core.internal.indexdiff.IndexDiffCacheEntry.access$13(IndexDiffCacheEntry.java:604)
	at org.eclipse.egit.core.internal.indexdiff.IndexDiffCacheEntry$5.updateIndexDiff(IndexDiffCacheEntry.java:550)
	at org.eclipse.egit.core.internal.indexdiff.IndexDiffUpdateJob.run(IndexDiffUpdateJob.java:77)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-06 10:07:14.007
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-06 10:07:14.010
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 4 0 2020-05-06 10:07:14.013
!MESSAGE Not closed bracket?
!STACK 0
org.eclipse.jgit.errors.InvalidPatternException: Not closed bracket?
	at org.eclipse.jgit.ignore.internal.Strings.convertGlob(Strings.java:444)
	at org.eclipse.jgit.ignore.internal.WildCardMatcher.<init>(WildCardMatcher.java:64)
	at org.eclipse.jgit.ignore.internal.PathMatcher.createNameMatcher0(PathMatcher.java:178)
	at org.eclipse.jgit.ignore.internal.PathMatcher.createMatchers(PathMatcher.java:99)
	at org.eclipse.jgit.ignore.internal.PathMatcher.<init>(PathMatcher.java:84)
	at org.eclipse.jgit.ignore.internal.PathMatcher.createPathMatcher(PathMatcher.java:135)
	at org.eclipse.jgit.ignore.FastIgnoreRule.<init>(FastIgnoreRule.java:129)
	at org.eclipse.jgit.ignore.IgnoreNode.parse(IgnoreNode.java:115)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator$PerDirectoryIgnoreNode.load(WorkingTreeIterator.java:1346)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator$RootIgnoreNode.load(WorkingTreeIterator.java:1365)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.getIgnoreNode(WorkingTreeIterator.java:771)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isDirectoryIgnored(WorkingTreeIterator.java:1611)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isDirectoryIgnored(WorkingTreeIterator.java:1589)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isEntryIgnored(WorkingTreeIterator.java:753)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isEntryIgnored(WorkingTreeIterator.java:713)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isEntryIgnored(WorkingTreeIterator.java:700)
	at org.eclipse.jgit.treewalk.FileTreeIterator.createSubtreeIterator(FileTreeIterator.java:215)
	at org.eclipse.jgit.treewalk.AbstractTreeIterator.createSubtreeIterator(AbstractTreeIterator.java:594)
	at org.eclipse.jgit.treewalk.TreeWalk.enterSubtree(TreeWalk.java:1303)
	at org.eclipse.egit.core.RepositoryUtil.canBeAutoIgnored(RepositoryUtil.java:773)
	at org.eclipse.egit.core.Activator$IgnoreDerivedResources$1.visit(Activator.java:835)
	at org.eclipse.core.internal.events.ResourceDelta.accept(ResourceDelta.java:67)
	at org.eclipse.core.internal.events.ResourceDelta.accept(ResourceDelta.java:77)
	at org.eclipse.core.internal.events.ResourceDelta.accept(ResourceDelta.java:77)
	at org.eclipse.core.internal.events.ResourceDelta.accept(ResourceDelta.java:51)
	at org.eclipse.egit.core.Activator$IgnoreDerivedResources.resourceChanged(Activator.java:811)
	at org.eclipse.core.internal.events.NotificationManager$1.run(NotificationManager.java:305)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.core.internal.events.NotificationManager.notify(NotificationManager.java:295)
	at org.eclipse.core.internal.events.NotificationManager.broadcastChanges(NotificationManager.java:158)
	at org.eclipse.core.internal.resources.Workspace.broadcastPostChange(Workspace.java:379)
	at org.eclipse.core.internal.resources.Workspace.endOperation(Workspace.java:1502)
	at org.eclipse.core.internal.events.AutoBuildJob.doBuild(AutoBuildJob.java:169)
	at org.eclipse.core.internal.events.AutoBuildJob.run(AutoBuildJob.java:244)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.m2e.logback.appender 4 0 2020-05-06 10:07:14.112
!MESSAGE Not closed bracket?
!STACK 0
org.eclipse.jgit.errors.InvalidPatternException: Not closed bracket?
	at org.eclipse.jgit.ignore.internal.Strings.convertGlob(Strings.java:444)
	at org.eclipse.jgit.ignore.internal.WildCardMatcher.<init>(WildCardMatcher.java:64)
	at org.eclipse.jgit.ignore.internal.PathMatcher.createNameMatcher0(PathMatcher.java:178)
	at org.eclipse.jgit.ignore.internal.PathMatcher.createMatchers(PathMatcher.java:99)
	at org.eclipse.jgit.ignore.internal.PathMatcher.<init>(PathMatcher.java:84)
	at org.eclipse.jgit.ignore.internal.PathMatcher.createPathMatcher(PathMatcher.java:135)
	at org.eclipse.jgit.ignore.FastIgnoreRule.<init>(FastIgnoreRule.java:129)
	at org.eclipse.jgit.ignore.IgnoreNode.parse(IgnoreNode.java:115)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator$PerDirectoryIgnoreNode.load(WorkingTreeIterator.java:1346)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator$RootIgnoreNode.load(WorkingTreeIterator.java:1365)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.getIgnoreNode(WorkingTreeIterator.java:771)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isDirectoryIgnored(WorkingTreeIterator.java:1611)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isDirectoryIgnored(WorkingTreeIterator.java:1589)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isEntryIgnored(WorkingTreeIterator.java:753)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isEntryIgnored(WorkingTreeIterator.java:713)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isEntryIgnored(WorkingTreeIterator.java:700)
	at org.eclipse.jgit.treewalk.filter.IndexDiffFilter.include(IndexDiffFilter.java:170)
	at org.eclipse.jgit.treewalk.filter.TreeFilter.matchFilter(TreeFilter.java:228)
	at org.eclipse.jgit.treewalk.filter.AndTreeFilter$List.matchFilter(AndTreeFilter.java:190)
	at org.eclipse.jgit.treewalk.TreeWalk.next(TreeWalk.java:853)
	at org.eclipse.jgit.lib.IndexDiff.diff(IndexDiff.java:446)
	at org.eclipse.egit.core.internal.indexdiff.IndexDiffCacheEntry.calcIndexDiffDataIncremental(IndexDiffCacheEntry.java:625)
	at org.eclipse.egit.core.internal.indexdiff.IndexDiffCacheEntry.access$13(IndexDiffCacheEntry.java:604)
	at org.eclipse.egit.core.internal.indexdiff.IndexDiffCacheEntry$5.updateIndexDiff(IndexDiffCacheEntry.java:550)
	at org.eclipse.egit.core.internal.indexdiff.IndexDiffUpdateJob.run(IndexDiffUpdateJob.java:77)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.m2e.logback.appender 4 0 2020-05-06 10:07:53.273
!MESSAGE Not closed bracket?
!STACK 0
org.eclipse.jgit.errors.InvalidPatternException: Not closed bracket?
	at org.eclipse.jgit.ignore.internal.Strings.convertGlob(Strings.java:444)
	at org.eclipse.jgit.ignore.internal.WildCardMatcher.<init>(WildCardMatcher.java:64)
	at org.eclipse.jgit.ignore.internal.PathMatcher.createNameMatcher0(PathMatcher.java:178)
	at org.eclipse.jgit.ignore.internal.PathMatcher.createMatchers(PathMatcher.java:99)
	at org.eclipse.jgit.ignore.internal.PathMatcher.<init>(PathMatcher.java:84)
	at org.eclipse.jgit.ignore.internal.PathMatcher.createPathMatcher(PathMatcher.java:135)
	at org.eclipse.jgit.ignore.FastIgnoreRule.<init>(FastIgnoreRule.java:129)
	at org.eclipse.jgit.ignore.IgnoreNode.parse(IgnoreNode.java:115)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator$PerDirectoryIgnoreNode.load(WorkingTreeIterator.java:1346)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator$RootIgnoreNode.load(WorkingTreeIterator.java:1365)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.getIgnoreNode(WorkingTreeIterator.java:771)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isDirectoryIgnored(WorkingTreeIterator.java:1611)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isDirectoryIgnored(WorkingTreeIterator.java:1589)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isEntryIgnored(WorkingTreeIterator.java:753)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isEntryIgnored(WorkingTreeIterator.java:713)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isEntryIgnored(WorkingTreeIterator.java:700)
	at org.eclipse.jgit.treewalk.filter.IndexDiffFilter.include(IndexDiffFilter.java:170)
	at org.eclipse.jgit.treewalk.filter.TreeFilter.matchFilter(TreeFilter.java:228)
	at org.eclipse.jgit.treewalk.filter.AndTreeFilter$List.matchFilter(AndTreeFilter.java:190)
	at org.eclipse.jgit.treewalk.TreeWalk.next(TreeWalk.java:853)
	at org.eclipse.jgit.lib.IndexDiff.diff(IndexDiff.java:446)
	at org.eclipse.egit.core.internal.indexdiff.IndexDiffCacheEntry.calcIndexDiffDataIncremental(IndexDiffCacheEntry.java:625)
	at org.eclipse.egit.core.internal.indexdiff.IndexDiffCacheEntry.access$13(IndexDiffCacheEntry.java:604)
	at org.eclipse.egit.core.internal.indexdiff.IndexDiffCacheEntry$5.updateIndexDiff(IndexDiffCacheEntry.java:550)
	at org.eclipse.egit.core.internal.indexdiff.IndexDiffUpdateJob.run(IndexDiffUpdateJob.java:77)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-06 10:07:53.397
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-06 10:07:53.399
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 4 0 2020-05-06 10:07:53.402
!MESSAGE Not closed bracket?
!STACK 0
org.eclipse.jgit.errors.InvalidPatternException: Not closed bracket?
	at org.eclipse.jgit.ignore.internal.Strings.convertGlob(Strings.java:444)
	at org.eclipse.jgit.ignore.internal.WildCardMatcher.<init>(WildCardMatcher.java:64)
	at org.eclipse.jgit.ignore.internal.PathMatcher.createNameMatcher0(PathMatcher.java:178)
	at org.eclipse.jgit.ignore.internal.PathMatcher.createMatchers(PathMatcher.java:99)
	at org.eclipse.jgit.ignore.internal.PathMatcher.<init>(PathMatcher.java:84)
	at org.eclipse.jgit.ignore.internal.PathMatcher.createPathMatcher(PathMatcher.java:135)
	at org.eclipse.jgit.ignore.FastIgnoreRule.<init>(FastIgnoreRule.java:129)
	at org.eclipse.jgit.ignore.IgnoreNode.parse(IgnoreNode.java:115)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator$PerDirectoryIgnoreNode.load(WorkingTreeIterator.java:1346)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator$RootIgnoreNode.load(WorkingTreeIterator.java:1365)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.getIgnoreNode(WorkingTreeIterator.java:771)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isDirectoryIgnored(WorkingTreeIterator.java:1611)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isDirectoryIgnored(WorkingTreeIterator.java:1589)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isEntryIgnored(WorkingTreeIterator.java:753)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isEntryIgnored(WorkingTreeIterator.java:713)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isEntryIgnored(WorkingTreeIterator.java:700)
	at org.eclipse.jgit.treewalk.FileTreeIterator.createSubtreeIterator(FileTreeIterator.java:215)
	at org.eclipse.jgit.treewalk.AbstractTreeIterator.createSubtreeIterator(AbstractTreeIterator.java:594)
	at org.eclipse.jgit.treewalk.TreeWalk.enterSubtree(TreeWalk.java:1303)
	at org.eclipse.egit.core.RepositoryUtil.canBeAutoIgnored(RepositoryUtil.java:773)
	at org.eclipse.egit.core.Activator$IgnoreDerivedResources$1.visit(Activator.java:835)
	at org.eclipse.core.internal.events.ResourceDelta.accept(ResourceDelta.java:67)
	at org.eclipse.core.internal.events.ResourceDelta.accept(ResourceDelta.java:77)
	at org.eclipse.core.internal.events.ResourceDelta.accept(ResourceDelta.java:77)
	at org.eclipse.core.internal.events.ResourceDelta.accept(ResourceDelta.java:51)
	at org.eclipse.egit.core.Activator$IgnoreDerivedResources.resourceChanged(Activator.java:811)
	at org.eclipse.core.internal.events.NotificationManager$1.run(NotificationManager.java:305)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.core.internal.events.NotificationManager.notify(NotificationManager.java:295)
	at org.eclipse.core.internal.events.NotificationManager.broadcastChanges(NotificationManager.java:158)
	at org.eclipse.core.internal.resources.Workspace.broadcastPostChange(Workspace.java:379)
	at org.eclipse.core.internal.resources.Workspace.endOperation(Workspace.java:1502)
	at org.eclipse.core.internal.events.AutoBuildJob.doBuild(AutoBuildJob.java:169)
	at org.eclipse.core.internal.events.AutoBuildJob.run(AutoBuildJob.java:244)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.m2e.logback.appender 4 0 2020-05-06 10:07:53.495
!MESSAGE Not closed bracket?
!STACK 0
org.eclipse.jgit.errors.InvalidPatternException: Not closed bracket?
	at org.eclipse.jgit.ignore.internal.Strings.convertGlob(Strings.java:444)
	at org.eclipse.jgit.ignore.internal.WildCardMatcher.<init>(WildCardMatcher.java:64)
	at org.eclipse.jgit.ignore.internal.PathMatcher.createNameMatcher0(PathMatcher.java:178)
	at org.eclipse.jgit.ignore.internal.PathMatcher.createMatchers(PathMatcher.java:99)
	at org.eclipse.jgit.ignore.internal.PathMatcher.<init>(PathMatcher.java:84)
	at org.eclipse.jgit.ignore.internal.PathMatcher.createPathMatcher(PathMatcher.java:135)
	at org.eclipse.jgit.ignore.FastIgnoreRule.<init>(FastIgnoreRule.java:129)
	at org.eclipse.jgit.ignore.IgnoreNode.parse(IgnoreNode.java:115)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator$PerDirectoryIgnoreNode.load(WorkingTreeIterator.java:1346)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator$RootIgnoreNode.load(WorkingTreeIterator.java:1365)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.getIgnoreNode(WorkingTreeIterator.java:771)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isDirectoryIgnored(WorkingTreeIterator.java:1611)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isDirectoryIgnored(WorkingTreeIterator.java:1589)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isEntryIgnored(WorkingTreeIterator.java:753)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isEntryIgnored(WorkingTreeIterator.java:713)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isEntryIgnored(WorkingTreeIterator.java:700)
	at org.eclipse.jgit.treewalk.filter.IndexDiffFilter.include(IndexDiffFilter.java:170)
	at org.eclipse.jgit.treewalk.filter.TreeFilter.matchFilter(TreeFilter.java:228)
	at org.eclipse.jgit.treewalk.filter.AndTreeFilter$List.matchFilter(AndTreeFilter.java:190)
	at org.eclipse.jgit.treewalk.TreeWalk.next(TreeWalk.java:853)
	at org.eclipse.jgit.lib.IndexDiff.diff(IndexDiff.java:446)
	at org.eclipse.egit.core.internal.indexdiff.IndexDiffCacheEntry.calcIndexDiffDataIncremental(IndexDiffCacheEntry.java:625)
	at org.eclipse.egit.core.internal.indexdiff.IndexDiffCacheEntry.access$13(IndexDiffCacheEntry.java:604)
	at org.eclipse.egit.core.internal.indexdiff.IndexDiffCacheEntry$5.updateIndexDiff(IndexDiffCacheEntry.java:550)
	at org.eclipse.egit.core.internal.indexdiff.IndexDiffUpdateJob.run(IndexDiffUpdateJob.java:77)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.m2e.logback.appender 4 0 2020-05-06 10:11:29.061
!MESSAGE Not closed bracket?
!STACK 0
org.eclipse.jgit.errors.InvalidPatternException: Not closed bracket?
	at org.eclipse.jgit.ignore.internal.Strings.convertGlob(Strings.java:444)
	at org.eclipse.jgit.ignore.internal.WildCardMatcher.<init>(WildCardMatcher.java:64)
	at org.eclipse.jgit.ignore.internal.PathMatcher.createNameMatcher0(PathMatcher.java:178)
	at org.eclipse.jgit.ignore.internal.PathMatcher.createMatchers(PathMatcher.java:99)
	at org.eclipse.jgit.ignore.internal.PathMatcher.<init>(PathMatcher.java:84)
	at org.eclipse.jgit.ignore.internal.PathMatcher.createPathMatcher(PathMatcher.java:135)
	at org.eclipse.jgit.ignore.FastIgnoreRule.<init>(FastIgnoreRule.java:129)
	at org.eclipse.jgit.ignore.IgnoreNode.parse(IgnoreNode.java:115)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator$PerDirectoryIgnoreNode.load(WorkingTreeIterator.java:1346)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator$RootIgnoreNode.load(WorkingTreeIterator.java:1365)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.getIgnoreNode(WorkingTreeIterator.java:771)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isDirectoryIgnored(WorkingTreeIterator.java:1611)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isDirectoryIgnored(WorkingTreeIterator.java:1589)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isEntryIgnored(WorkingTreeIterator.java:753)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isEntryIgnored(WorkingTreeIterator.java:713)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isEntryIgnored(WorkingTreeIterator.java:700)
	at org.eclipse.jgit.treewalk.filter.IndexDiffFilter.include(IndexDiffFilter.java:170)
	at org.eclipse.jgit.treewalk.filter.TreeFilter.matchFilter(TreeFilter.java:228)
	at org.eclipse.jgit.treewalk.filter.AndTreeFilter$List.matchFilter(AndTreeFilter.java:190)
	at org.eclipse.jgit.treewalk.TreeWalk.next(TreeWalk.java:853)
	at org.eclipse.jgit.lib.IndexDiff.diff(IndexDiff.java:446)
	at org.eclipse.egit.core.internal.indexdiff.IndexDiffCacheEntry.calcIndexDiffDataIncremental(IndexDiffCacheEntry.java:625)
	at org.eclipse.egit.core.internal.indexdiff.IndexDiffCacheEntry.access$13(IndexDiffCacheEntry.java:604)
	at org.eclipse.egit.core.internal.indexdiff.IndexDiffCacheEntry$5.updateIndexDiff(IndexDiffCacheEntry.java:550)
	at org.eclipse.egit.core.internal.indexdiff.IndexDiffUpdateJob.run(IndexDiffUpdateJob.java:77)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-06 10:11:29.246
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-06 10:11:29.248
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 4 0 2020-05-06 10:11:29.252
!MESSAGE Not closed bracket?
!STACK 0
org.eclipse.jgit.errors.InvalidPatternException: Not closed bracket?
	at org.eclipse.jgit.ignore.internal.Strings.convertGlob(Strings.java:444)
	at org.eclipse.jgit.ignore.internal.WildCardMatcher.<init>(WildCardMatcher.java:64)
	at org.eclipse.jgit.ignore.internal.PathMatcher.createNameMatcher0(PathMatcher.java:178)
	at org.eclipse.jgit.ignore.internal.PathMatcher.createMatchers(PathMatcher.java:99)
	at org.eclipse.jgit.ignore.internal.PathMatcher.<init>(PathMatcher.java:84)
	at org.eclipse.jgit.ignore.internal.PathMatcher.createPathMatcher(PathMatcher.java:135)
	at org.eclipse.jgit.ignore.FastIgnoreRule.<init>(FastIgnoreRule.java:129)
	at org.eclipse.jgit.ignore.IgnoreNode.parse(IgnoreNode.java:115)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator$PerDirectoryIgnoreNode.load(WorkingTreeIterator.java:1346)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator$RootIgnoreNode.load(WorkingTreeIterator.java:1365)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.getIgnoreNode(WorkingTreeIterator.java:771)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isDirectoryIgnored(WorkingTreeIterator.java:1611)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isDirectoryIgnored(WorkingTreeIterator.java:1589)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isEntryIgnored(WorkingTreeIterator.java:753)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isEntryIgnored(WorkingTreeIterator.java:713)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isEntryIgnored(WorkingTreeIterator.java:700)
	at org.eclipse.jgit.treewalk.FileTreeIterator.createSubtreeIterator(FileTreeIterator.java:215)
	at org.eclipse.jgit.treewalk.AbstractTreeIterator.createSubtreeIterator(AbstractTreeIterator.java:594)
	at org.eclipse.jgit.treewalk.TreeWalk.enterSubtree(TreeWalk.java:1303)
	at org.eclipse.egit.core.RepositoryUtil.canBeAutoIgnored(RepositoryUtil.java:773)
	at org.eclipse.egit.core.Activator$IgnoreDerivedResources$1.visit(Activator.java:835)
	at org.eclipse.core.internal.events.ResourceDelta.accept(ResourceDelta.java:67)
	at org.eclipse.core.internal.events.ResourceDelta.accept(ResourceDelta.java:77)
	at org.eclipse.core.internal.events.ResourceDelta.accept(ResourceDelta.java:77)
	at org.eclipse.core.internal.events.ResourceDelta.accept(ResourceDelta.java:51)
	at org.eclipse.egit.core.Activator$IgnoreDerivedResources.resourceChanged(Activator.java:811)
	at org.eclipse.core.internal.events.NotificationManager$1.run(NotificationManager.java:305)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.core.internal.events.NotificationManager.notify(NotificationManager.java:295)
	at org.eclipse.core.internal.events.NotificationManager.broadcastChanges(NotificationManager.java:158)
	at org.eclipse.core.internal.resources.Workspace.broadcastPostChange(Workspace.java:379)
	at org.eclipse.core.internal.resources.Workspace.endOperation(Workspace.java:1502)
	at org.eclipse.core.internal.events.AutoBuildJob.doBuild(AutoBuildJob.java:169)
	at org.eclipse.core.internal.events.AutoBuildJob.run(AutoBuildJob.java:244)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.m2e.logback.appender 4 0 2020-05-06 10:11:29.355
!MESSAGE Not closed bracket?
!STACK 0
org.eclipse.jgit.errors.InvalidPatternException: Not closed bracket?
	at org.eclipse.jgit.ignore.internal.Strings.convertGlob(Strings.java:444)
	at org.eclipse.jgit.ignore.internal.WildCardMatcher.<init>(WildCardMatcher.java:64)
	at org.eclipse.jgit.ignore.internal.PathMatcher.createNameMatcher0(PathMatcher.java:178)
	at org.eclipse.jgit.ignore.internal.PathMatcher.createMatchers(PathMatcher.java:99)
	at org.eclipse.jgit.ignore.internal.PathMatcher.<init>(PathMatcher.java:84)
	at org.eclipse.jgit.ignore.internal.PathMatcher.createPathMatcher(PathMatcher.java:135)
	at org.eclipse.jgit.ignore.FastIgnoreRule.<init>(FastIgnoreRule.java:129)
	at org.eclipse.jgit.ignore.IgnoreNode.parse(IgnoreNode.java:115)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator$PerDirectoryIgnoreNode.load(WorkingTreeIterator.java:1346)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator$RootIgnoreNode.load(WorkingTreeIterator.java:1365)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.getIgnoreNode(WorkingTreeIterator.java:771)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isDirectoryIgnored(WorkingTreeIterator.java:1611)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isDirectoryIgnored(WorkingTreeIterator.java:1589)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isEntryIgnored(WorkingTreeIterator.java:753)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isEntryIgnored(WorkingTreeIterator.java:713)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isEntryIgnored(WorkingTreeIterator.java:700)
	at org.eclipse.jgit.treewalk.filter.IndexDiffFilter.include(IndexDiffFilter.java:170)
	at org.eclipse.jgit.treewalk.filter.TreeFilter.matchFilter(TreeFilter.java:228)
	at org.eclipse.jgit.treewalk.filter.AndTreeFilter$List.matchFilter(AndTreeFilter.java:190)
	at org.eclipse.jgit.treewalk.TreeWalk.next(TreeWalk.java:853)
	at org.eclipse.jgit.lib.IndexDiff.diff(IndexDiff.java:446)
	at org.eclipse.egit.core.internal.indexdiff.IndexDiffCacheEntry.calcIndexDiffDataIncremental(IndexDiffCacheEntry.java:625)
	at org.eclipse.egit.core.internal.indexdiff.IndexDiffCacheEntry.access$13(IndexDiffCacheEntry.java:604)
	at org.eclipse.egit.core.internal.indexdiff.IndexDiffCacheEntry$5.updateIndexDiff(IndexDiffCacheEntry.java:550)
	at org.eclipse.egit.core.internal.indexdiff.IndexDiffUpdateJob.run(IndexDiffUpdateJob.java:77)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.m2e.logback.appender 4 0 2020-05-06 10:11:40.035
!MESSAGE Not closed bracket?
!STACK 0
org.eclipse.jgit.errors.InvalidPatternException: Not closed bracket?
	at org.eclipse.jgit.ignore.internal.Strings.convertGlob(Strings.java:444)
	at org.eclipse.jgit.ignore.internal.WildCardMatcher.<init>(WildCardMatcher.java:64)
	at org.eclipse.jgit.ignore.internal.PathMatcher.createNameMatcher0(PathMatcher.java:178)
	at org.eclipse.jgit.ignore.internal.PathMatcher.createMatchers(PathMatcher.java:99)
	at org.eclipse.jgit.ignore.internal.PathMatcher.<init>(PathMatcher.java:84)
	at org.eclipse.jgit.ignore.internal.PathMatcher.createPathMatcher(PathMatcher.java:135)
	at org.eclipse.jgit.ignore.FastIgnoreRule.<init>(FastIgnoreRule.java:129)
	at org.eclipse.jgit.ignore.IgnoreNode.parse(IgnoreNode.java:115)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator$PerDirectoryIgnoreNode.load(WorkingTreeIterator.java:1346)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator$RootIgnoreNode.load(WorkingTreeIterator.java:1365)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.getIgnoreNode(WorkingTreeIterator.java:771)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isDirectoryIgnored(WorkingTreeIterator.java:1611)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isDirectoryIgnored(WorkingTreeIterator.java:1589)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isEntryIgnored(WorkingTreeIterator.java:753)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isEntryIgnored(WorkingTreeIterator.java:713)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isEntryIgnored(WorkingTreeIterator.java:700)
	at org.eclipse.jgit.treewalk.filter.IndexDiffFilter.include(IndexDiffFilter.java:170)
	at org.eclipse.jgit.treewalk.filter.TreeFilter.matchFilter(TreeFilter.java:228)
	at org.eclipse.jgit.treewalk.filter.AndTreeFilter$List.matchFilter(AndTreeFilter.java:190)
	at org.eclipse.jgit.treewalk.TreeWalk.next(TreeWalk.java:853)
	at org.eclipse.jgit.lib.IndexDiff.diff(IndexDiff.java:446)
	at org.eclipse.egit.core.internal.indexdiff.IndexDiffCacheEntry.calcIndexDiffDataIncremental(IndexDiffCacheEntry.java:625)
	at org.eclipse.egit.core.internal.indexdiff.IndexDiffCacheEntry.access$13(IndexDiffCacheEntry.java:604)
	at org.eclipse.egit.core.internal.indexdiff.IndexDiffCacheEntry$5.updateIndexDiff(IndexDiffCacheEntry.java:550)
	at org.eclipse.egit.core.internal.indexdiff.IndexDiffUpdateJob.run(IndexDiffUpdateJob.java:77)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-06 10:11:40.160
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-06 10:11:40.161
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 4 0 2020-05-06 10:11:40.164
!MESSAGE Not closed bracket?
!STACK 0
org.eclipse.jgit.errors.InvalidPatternException: Not closed bracket?
	at org.eclipse.jgit.ignore.internal.Strings.convertGlob(Strings.java:444)
	at org.eclipse.jgit.ignore.internal.WildCardMatcher.<init>(WildCardMatcher.java:64)
	at org.eclipse.jgit.ignore.internal.PathMatcher.createNameMatcher0(PathMatcher.java:178)
	at org.eclipse.jgit.ignore.internal.PathMatcher.createMatchers(PathMatcher.java:99)
	at org.eclipse.jgit.ignore.internal.PathMatcher.<init>(PathMatcher.java:84)
	at org.eclipse.jgit.ignore.internal.PathMatcher.createPathMatcher(PathMatcher.java:135)
	at org.eclipse.jgit.ignore.FastIgnoreRule.<init>(FastIgnoreRule.java:129)
	at org.eclipse.jgit.ignore.IgnoreNode.parse(IgnoreNode.java:115)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator$PerDirectoryIgnoreNode.load(WorkingTreeIterator.java:1346)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator$RootIgnoreNode.load(WorkingTreeIterator.java:1365)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.getIgnoreNode(WorkingTreeIterator.java:771)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isDirectoryIgnored(WorkingTreeIterator.java:1611)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isDirectoryIgnored(WorkingTreeIterator.java:1589)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isEntryIgnored(WorkingTreeIterator.java:753)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isEntryIgnored(WorkingTreeIterator.java:713)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isEntryIgnored(WorkingTreeIterator.java:700)
	at org.eclipse.jgit.treewalk.FileTreeIterator.createSubtreeIterator(FileTreeIterator.java:215)
	at org.eclipse.jgit.treewalk.AbstractTreeIterator.createSubtreeIterator(AbstractTreeIterator.java:594)
	at org.eclipse.jgit.treewalk.TreeWalk.enterSubtree(TreeWalk.java:1303)
	at org.eclipse.egit.core.RepositoryUtil.canBeAutoIgnored(RepositoryUtil.java:773)
	at org.eclipse.egit.core.Activator$IgnoreDerivedResources$1.visit(Activator.java:835)
	at org.eclipse.core.internal.events.ResourceDelta.accept(ResourceDelta.java:67)
	at org.eclipse.core.internal.events.ResourceDelta.accept(ResourceDelta.java:77)
	at org.eclipse.core.internal.events.ResourceDelta.accept(ResourceDelta.java:77)
	at org.eclipse.core.internal.events.ResourceDelta.accept(ResourceDelta.java:51)
	at org.eclipse.egit.core.Activator$IgnoreDerivedResources.resourceChanged(Activator.java:811)
	at org.eclipse.core.internal.events.NotificationManager$1.run(NotificationManager.java:305)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.core.internal.events.NotificationManager.notify(NotificationManager.java:295)
	at org.eclipse.core.internal.events.NotificationManager.broadcastChanges(NotificationManager.java:158)
	at org.eclipse.core.internal.resources.Workspace.broadcastPostChange(Workspace.java:379)
	at org.eclipse.core.internal.resources.Workspace.endOperation(Workspace.java:1502)
	at org.eclipse.core.internal.events.AutoBuildJob.doBuild(AutoBuildJob.java:169)
	at org.eclipse.core.internal.events.AutoBuildJob.run(AutoBuildJob.java:244)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.m2e.logback.appender 4 0 2020-05-06 10:11:40.263
!MESSAGE Not closed bracket?
!STACK 0
org.eclipse.jgit.errors.InvalidPatternException: Not closed bracket?
	at org.eclipse.jgit.ignore.internal.Strings.convertGlob(Strings.java:444)
	at org.eclipse.jgit.ignore.internal.WildCardMatcher.<init>(WildCardMatcher.java:64)
	at org.eclipse.jgit.ignore.internal.PathMatcher.createNameMatcher0(PathMatcher.java:178)
	at org.eclipse.jgit.ignore.internal.PathMatcher.createMatchers(PathMatcher.java:99)
	at org.eclipse.jgit.ignore.internal.PathMatcher.<init>(PathMatcher.java:84)
	at org.eclipse.jgit.ignore.internal.PathMatcher.createPathMatcher(PathMatcher.java:135)
	at org.eclipse.jgit.ignore.FastIgnoreRule.<init>(FastIgnoreRule.java:129)
	at org.eclipse.jgit.ignore.IgnoreNode.parse(IgnoreNode.java:115)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator$PerDirectoryIgnoreNode.load(WorkingTreeIterator.java:1346)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator$RootIgnoreNode.load(WorkingTreeIterator.java:1365)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.getIgnoreNode(WorkingTreeIterator.java:771)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isDirectoryIgnored(WorkingTreeIterator.java:1611)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isDirectoryIgnored(WorkingTreeIterator.java:1589)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isEntryIgnored(WorkingTreeIterator.java:753)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isEntryIgnored(WorkingTreeIterator.java:713)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isEntryIgnored(WorkingTreeIterator.java:700)
	at org.eclipse.jgit.treewalk.filter.IndexDiffFilter.include(IndexDiffFilter.java:170)
	at org.eclipse.jgit.treewalk.filter.TreeFilter.matchFilter(TreeFilter.java:228)
	at org.eclipse.jgit.treewalk.filter.AndTreeFilter$List.matchFilter(AndTreeFilter.java:190)
	at org.eclipse.jgit.treewalk.TreeWalk.next(TreeWalk.java:853)
	at org.eclipse.jgit.lib.IndexDiff.diff(IndexDiff.java:446)
	at org.eclipse.egit.core.internal.indexdiff.IndexDiffCacheEntry.calcIndexDiffDataIncremental(IndexDiffCacheEntry.java:625)
	at org.eclipse.egit.core.internal.indexdiff.IndexDiffCacheEntry.access$13(IndexDiffCacheEntry.java:604)
	at org.eclipse.egit.core.internal.indexdiff.IndexDiffCacheEntry$5.updateIndexDiff(IndexDiffCacheEntry.java:550)
	at org.eclipse.egit.core.internal.indexdiff.IndexDiffUpdateJob.run(IndexDiffUpdateJob.java:77)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.m2e.logback.appender 4 0 2020-05-06 10:11:57.548
!MESSAGE Not closed bracket?
!STACK 0
org.eclipse.jgit.errors.InvalidPatternException: Not closed bracket?
	at org.eclipse.jgit.ignore.internal.Strings.convertGlob(Strings.java:444)
	at org.eclipse.jgit.ignore.internal.WildCardMatcher.<init>(WildCardMatcher.java:64)
	at org.eclipse.jgit.ignore.internal.PathMatcher.createNameMatcher0(PathMatcher.java:178)
	at org.eclipse.jgit.ignore.internal.PathMatcher.createMatchers(PathMatcher.java:99)
	at org.eclipse.jgit.ignore.internal.PathMatcher.<init>(PathMatcher.java:84)
	at org.eclipse.jgit.ignore.internal.PathMatcher.createPathMatcher(PathMatcher.java:135)
	at org.eclipse.jgit.ignore.FastIgnoreRule.<init>(FastIgnoreRule.java:129)
	at org.eclipse.jgit.ignore.IgnoreNode.parse(IgnoreNode.java:115)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator$PerDirectoryIgnoreNode.load(WorkingTreeIterator.java:1346)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator$RootIgnoreNode.load(WorkingTreeIterator.java:1365)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.getIgnoreNode(WorkingTreeIterator.java:771)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isDirectoryIgnored(WorkingTreeIterator.java:1611)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isDirectoryIgnored(WorkingTreeIterator.java:1589)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isEntryIgnored(WorkingTreeIterator.java:753)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isEntryIgnored(WorkingTreeIterator.java:713)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isEntryIgnored(WorkingTreeIterator.java:700)
	at org.eclipse.jgit.treewalk.filter.IndexDiffFilter.include(IndexDiffFilter.java:170)
	at org.eclipse.jgit.treewalk.filter.TreeFilter.matchFilter(TreeFilter.java:228)
	at org.eclipse.jgit.treewalk.filter.AndTreeFilter$List.matchFilter(AndTreeFilter.java:190)
	at org.eclipse.jgit.treewalk.TreeWalk.next(TreeWalk.java:853)
	at org.eclipse.jgit.lib.IndexDiff.diff(IndexDiff.java:446)
	at org.eclipse.egit.core.internal.indexdiff.IndexDiffCacheEntry.calcIndexDiffDataIncremental(IndexDiffCacheEntry.java:625)
	at org.eclipse.egit.core.internal.indexdiff.IndexDiffCacheEntry.access$13(IndexDiffCacheEntry.java:604)
	at org.eclipse.egit.core.internal.indexdiff.IndexDiffCacheEntry$5.updateIndexDiff(IndexDiffCacheEntry.java:550)
	at org.eclipse.egit.core.internal.indexdiff.IndexDiffUpdateJob.run(IndexDiffUpdateJob.java:77)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-06 10:11:57.721
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-06 10:11:57.723
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 4 0 2020-05-06 10:11:57.726
!MESSAGE Not closed bracket?
!STACK 0
org.eclipse.jgit.errors.InvalidPatternException: Not closed bracket?
	at org.eclipse.jgit.ignore.internal.Strings.convertGlob(Strings.java:444)
	at org.eclipse.jgit.ignore.internal.WildCardMatcher.<init>(WildCardMatcher.java:64)
	at org.eclipse.jgit.ignore.internal.PathMatcher.createNameMatcher0(PathMatcher.java:178)
	at org.eclipse.jgit.ignore.internal.PathMatcher.createMatchers(PathMatcher.java:99)
	at org.eclipse.jgit.ignore.internal.PathMatcher.<init>(PathMatcher.java:84)
	at org.eclipse.jgit.ignore.internal.PathMatcher.createPathMatcher(PathMatcher.java:135)
	at org.eclipse.jgit.ignore.FastIgnoreRule.<init>(FastIgnoreRule.java:129)
	at org.eclipse.jgit.ignore.IgnoreNode.parse(IgnoreNode.java:115)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator$PerDirectoryIgnoreNode.load(WorkingTreeIterator.java:1346)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator$RootIgnoreNode.load(WorkingTreeIterator.java:1365)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.getIgnoreNode(WorkingTreeIterator.java:771)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isDirectoryIgnored(WorkingTreeIterator.java:1611)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isDirectoryIgnored(WorkingTreeIterator.java:1589)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isEntryIgnored(WorkingTreeIterator.java:753)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isEntryIgnored(WorkingTreeIterator.java:713)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isEntryIgnored(WorkingTreeIterator.java:700)
	at org.eclipse.jgit.treewalk.FileTreeIterator.createSubtreeIterator(FileTreeIterator.java:215)
	at org.eclipse.jgit.treewalk.AbstractTreeIterator.createSubtreeIterator(AbstractTreeIterator.java:594)
	at org.eclipse.jgit.treewalk.TreeWalk.enterSubtree(TreeWalk.java:1303)
	at org.eclipse.egit.core.RepositoryUtil.canBeAutoIgnored(RepositoryUtil.java:773)
	at org.eclipse.egit.core.Activator$IgnoreDerivedResources$1.visit(Activator.java:835)
	at org.eclipse.core.internal.events.ResourceDelta.accept(ResourceDelta.java:67)
	at org.eclipse.core.internal.events.ResourceDelta.accept(ResourceDelta.java:77)
	at org.eclipse.core.internal.events.ResourceDelta.accept(ResourceDelta.java:77)
	at org.eclipse.core.internal.events.ResourceDelta.accept(ResourceDelta.java:51)
	at org.eclipse.egit.core.Activator$IgnoreDerivedResources.resourceChanged(Activator.java:811)
	at org.eclipse.core.internal.events.NotificationManager$1.run(NotificationManager.java:305)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.core.internal.events.NotificationManager.notify(NotificationManager.java:295)
	at org.eclipse.core.internal.events.NotificationManager.broadcastChanges(NotificationManager.java:158)
	at org.eclipse.core.internal.resources.Workspace.broadcastPostChange(Workspace.java:379)
	at org.eclipse.core.internal.resources.Workspace.endOperation(Workspace.java:1502)
	at org.eclipse.core.internal.events.AutoBuildJob.doBuild(AutoBuildJob.java:169)
	at org.eclipse.core.internal.events.AutoBuildJob.run(AutoBuildJob.java:244)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.m2e.logback.appender 4 0 2020-05-06 10:11:57.820
!MESSAGE Not closed bracket?
!STACK 0
org.eclipse.jgit.errors.InvalidPatternException: Not closed bracket?
	at org.eclipse.jgit.ignore.internal.Strings.convertGlob(Strings.java:444)
	at org.eclipse.jgit.ignore.internal.WildCardMatcher.<init>(WildCardMatcher.java:64)
	at org.eclipse.jgit.ignore.internal.PathMatcher.createNameMatcher0(PathMatcher.java:178)
	at org.eclipse.jgit.ignore.internal.PathMatcher.createMatchers(PathMatcher.java:99)
	at org.eclipse.jgit.ignore.internal.PathMatcher.<init>(PathMatcher.java:84)
	at org.eclipse.jgit.ignore.internal.PathMatcher.createPathMatcher(PathMatcher.java:135)
	at org.eclipse.jgit.ignore.FastIgnoreRule.<init>(FastIgnoreRule.java:129)
	at org.eclipse.jgit.ignore.IgnoreNode.parse(IgnoreNode.java:115)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator$PerDirectoryIgnoreNode.load(WorkingTreeIterator.java:1346)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator$RootIgnoreNode.load(WorkingTreeIterator.java:1365)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.getIgnoreNode(WorkingTreeIterator.java:771)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isDirectoryIgnored(WorkingTreeIterator.java:1611)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isDirectoryIgnored(WorkingTreeIterator.java:1589)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isEntryIgnored(WorkingTreeIterator.java:753)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isEntryIgnored(WorkingTreeIterator.java:713)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isEntryIgnored(WorkingTreeIterator.java:700)
	at org.eclipse.jgit.treewalk.filter.IndexDiffFilter.include(IndexDiffFilter.java:170)
	at org.eclipse.jgit.treewalk.filter.TreeFilter.matchFilter(TreeFilter.java:228)
	at org.eclipse.jgit.treewalk.filter.AndTreeFilter$List.matchFilter(AndTreeFilter.java:190)
	at org.eclipse.jgit.treewalk.TreeWalk.next(TreeWalk.java:853)
	at org.eclipse.jgit.lib.IndexDiff.diff(IndexDiff.java:446)
	at org.eclipse.egit.core.internal.indexdiff.IndexDiffCacheEntry.calcIndexDiffDataIncremental(IndexDiffCacheEntry.java:625)
	at org.eclipse.egit.core.internal.indexdiff.IndexDiffCacheEntry.access$13(IndexDiffCacheEntry.java:604)
	at org.eclipse.egit.core.internal.indexdiff.IndexDiffCacheEntry$5.updateIndexDiff(IndexDiffCacheEntry.java:550)
	at org.eclipse.egit.core.internal.indexdiff.IndexDiffUpdateJob.run(IndexDiffUpdateJob.java:77)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.m2e.logback.appender 4 0 2020-05-06 10:12:24.525
!MESSAGE Not closed bracket?
!STACK 0
org.eclipse.jgit.errors.InvalidPatternException: Not closed bracket?
	at org.eclipse.jgit.ignore.internal.Strings.convertGlob(Strings.java:444)
	at org.eclipse.jgit.ignore.internal.WildCardMatcher.<init>(WildCardMatcher.java:64)
	at org.eclipse.jgit.ignore.internal.PathMatcher.createNameMatcher0(PathMatcher.java:178)
	at org.eclipse.jgit.ignore.internal.PathMatcher.createMatchers(PathMatcher.java:99)
	at org.eclipse.jgit.ignore.internal.PathMatcher.<init>(PathMatcher.java:84)
	at org.eclipse.jgit.ignore.internal.PathMatcher.createPathMatcher(PathMatcher.java:135)
	at org.eclipse.jgit.ignore.FastIgnoreRule.<init>(FastIgnoreRule.java:129)
	at org.eclipse.jgit.ignore.IgnoreNode.parse(IgnoreNode.java:115)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator$PerDirectoryIgnoreNode.load(WorkingTreeIterator.java:1346)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator$RootIgnoreNode.load(WorkingTreeIterator.java:1365)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.getIgnoreNode(WorkingTreeIterator.java:771)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isDirectoryIgnored(WorkingTreeIterator.java:1611)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isDirectoryIgnored(WorkingTreeIterator.java:1589)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isEntryIgnored(WorkingTreeIterator.java:753)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isEntryIgnored(WorkingTreeIterator.java:713)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isEntryIgnored(WorkingTreeIterator.java:700)
	at org.eclipse.jgit.treewalk.filter.IndexDiffFilter.include(IndexDiffFilter.java:170)
	at org.eclipse.jgit.treewalk.filter.TreeFilter.matchFilter(TreeFilter.java:228)
	at org.eclipse.jgit.treewalk.filter.AndTreeFilter$List.matchFilter(AndTreeFilter.java:190)
	at org.eclipse.jgit.treewalk.TreeWalk.next(TreeWalk.java:853)
	at org.eclipse.jgit.lib.IndexDiff.diff(IndexDiff.java:446)
	at org.eclipse.egit.core.internal.indexdiff.IndexDiffCacheEntry.calcIndexDiffDataIncremental(IndexDiffCacheEntry.java:625)
	at org.eclipse.egit.core.internal.indexdiff.IndexDiffCacheEntry.access$13(IndexDiffCacheEntry.java:604)
	at org.eclipse.egit.core.internal.indexdiff.IndexDiffCacheEntry$5.updateIndexDiff(IndexDiffCacheEntry.java:550)
	at org.eclipse.egit.core.internal.indexdiff.IndexDiffUpdateJob.run(IndexDiffUpdateJob.java:77)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-06 10:12:24.701
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-06 10:12:24.704
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 4 0 2020-05-06 10:12:24.707
!MESSAGE Not closed bracket?
!STACK 0
org.eclipse.jgit.errors.InvalidPatternException: Not closed bracket?
	at org.eclipse.jgit.ignore.internal.Strings.convertGlob(Strings.java:444)
	at org.eclipse.jgit.ignore.internal.WildCardMatcher.<init>(WildCardMatcher.java:64)
	at org.eclipse.jgit.ignore.internal.PathMatcher.createNameMatcher0(PathMatcher.java:178)
	at org.eclipse.jgit.ignore.internal.PathMatcher.createMatchers(PathMatcher.java:99)
	at org.eclipse.jgit.ignore.internal.PathMatcher.<init>(PathMatcher.java:84)
	at org.eclipse.jgit.ignore.internal.PathMatcher.createPathMatcher(PathMatcher.java:135)
	at org.eclipse.jgit.ignore.FastIgnoreRule.<init>(FastIgnoreRule.java:129)
	at org.eclipse.jgit.ignore.IgnoreNode.parse(IgnoreNode.java:115)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator$PerDirectoryIgnoreNode.load(WorkingTreeIterator.java:1346)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator$RootIgnoreNode.load(WorkingTreeIterator.java:1365)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.getIgnoreNode(WorkingTreeIterator.java:771)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isDirectoryIgnored(WorkingTreeIterator.java:1611)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isDirectoryIgnored(WorkingTreeIterator.java:1589)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isEntryIgnored(WorkingTreeIterator.java:753)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isEntryIgnored(WorkingTreeIterator.java:713)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isEntryIgnored(WorkingTreeIterator.java:700)
	at org.eclipse.jgit.treewalk.FileTreeIterator.createSubtreeIterator(FileTreeIterator.java:215)
	at org.eclipse.jgit.treewalk.AbstractTreeIterator.createSubtreeIterator(AbstractTreeIterator.java:594)
	at org.eclipse.jgit.treewalk.TreeWalk.enterSubtree(TreeWalk.java:1303)
	at org.eclipse.egit.core.RepositoryUtil.canBeAutoIgnored(RepositoryUtil.java:773)
	at org.eclipse.egit.core.Activator$IgnoreDerivedResources$1.visit(Activator.java:835)
	at org.eclipse.core.internal.events.ResourceDelta.accept(ResourceDelta.java:67)
	at org.eclipse.core.internal.events.ResourceDelta.accept(ResourceDelta.java:77)
	at org.eclipse.core.internal.events.ResourceDelta.accept(ResourceDelta.java:77)
	at org.eclipse.core.internal.events.ResourceDelta.accept(ResourceDelta.java:51)
	at org.eclipse.egit.core.Activator$IgnoreDerivedResources.resourceChanged(Activator.java:811)
	at org.eclipse.core.internal.events.NotificationManager$1.run(NotificationManager.java:305)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.core.internal.events.NotificationManager.notify(NotificationManager.java:295)
	at org.eclipse.core.internal.events.NotificationManager.broadcastChanges(NotificationManager.java:158)
	at org.eclipse.core.internal.resources.Workspace.broadcastPostChange(Workspace.java:379)
	at org.eclipse.core.internal.resources.Workspace.endOperation(Workspace.java:1502)
	at org.eclipse.core.internal.events.AutoBuildJob.doBuild(AutoBuildJob.java:169)
	at org.eclipse.core.internal.events.AutoBuildJob.run(AutoBuildJob.java:244)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.m2e.logback.appender 4 0 2020-05-06 10:12:24.803
!MESSAGE Not closed bracket?
!STACK 0
org.eclipse.jgit.errors.InvalidPatternException: Not closed bracket?
	at org.eclipse.jgit.ignore.internal.Strings.convertGlob(Strings.java:444)
	at org.eclipse.jgit.ignore.internal.WildCardMatcher.<init>(WildCardMatcher.java:64)
	at org.eclipse.jgit.ignore.internal.PathMatcher.createNameMatcher0(PathMatcher.java:178)
	at org.eclipse.jgit.ignore.internal.PathMatcher.createMatchers(PathMatcher.java:99)
	at org.eclipse.jgit.ignore.internal.PathMatcher.<init>(PathMatcher.java:84)
	at org.eclipse.jgit.ignore.internal.PathMatcher.createPathMatcher(PathMatcher.java:135)
	at org.eclipse.jgit.ignore.FastIgnoreRule.<init>(FastIgnoreRule.java:129)
	at org.eclipse.jgit.ignore.IgnoreNode.parse(IgnoreNode.java:115)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator$PerDirectoryIgnoreNode.load(WorkingTreeIterator.java:1346)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator$RootIgnoreNode.load(WorkingTreeIterator.java:1365)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.getIgnoreNode(WorkingTreeIterator.java:771)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isDirectoryIgnored(WorkingTreeIterator.java:1611)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isDirectoryIgnored(WorkingTreeIterator.java:1589)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isEntryIgnored(WorkingTreeIterator.java:753)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isEntryIgnored(WorkingTreeIterator.java:713)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isEntryIgnored(WorkingTreeIterator.java:700)
	at org.eclipse.jgit.treewalk.filter.IndexDiffFilter.include(IndexDiffFilter.java:170)
	at org.eclipse.jgit.treewalk.filter.TreeFilter.matchFilter(TreeFilter.java:228)
	at org.eclipse.jgit.treewalk.filter.AndTreeFilter$List.matchFilter(AndTreeFilter.java:190)
	at org.eclipse.jgit.treewalk.TreeWalk.next(TreeWalk.java:853)
	at org.eclipse.jgit.lib.IndexDiff.diff(IndexDiff.java:446)
	at org.eclipse.egit.core.internal.indexdiff.IndexDiffCacheEntry.calcIndexDiffDataIncremental(IndexDiffCacheEntry.java:625)
	at org.eclipse.egit.core.internal.indexdiff.IndexDiffCacheEntry.access$13(IndexDiffCacheEntry.java:604)
	at org.eclipse.egit.core.internal.indexdiff.IndexDiffCacheEntry$5.updateIndexDiff(IndexDiffCacheEntry.java:550)
	at org.eclipse.egit.core.internal.indexdiff.IndexDiffUpdateJob.run(IndexDiffUpdateJob.java:77)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.m2e.logback.appender 4 0 2020-05-06 10:12:31.820
!MESSAGE Not closed bracket?
!STACK 0
org.eclipse.jgit.errors.InvalidPatternException: Not closed bracket?
	at org.eclipse.jgit.ignore.internal.Strings.convertGlob(Strings.java:444)
	at org.eclipse.jgit.ignore.internal.WildCardMatcher.<init>(WildCardMatcher.java:64)
	at org.eclipse.jgit.ignore.internal.PathMatcher.createNameMatcher0(PathMatcher.java:178)
	at org.eclipse.jgit.ignore.internal.PathMatcher.createMatchers(PathMatcher.java:99)
	at org.eclipse.jgit.ignore.internal.PathMatcher.<init>(PathMatcher.java:84)
	at org.eclipse.jgit.ignore.internal.PathMatcher.createPathMatcher(PathMatcher.java:135)
	at org.eclipse.jgit.ignore.FastIgnoreRule.<init>(FastIgnoreRule.java:129)
	at org.eclipse.jgit.ignore.IgnoreNode.parse(IgnoreNode.java:115)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator$PerDirectoryIgnoreNode.load(WorkingTreeIterator.java:1346)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator$RootIgnoreNode.load(WorkingTreeIterator.java:1365)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.getIgnoreNode(WorkingTreeIterator.java:771)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isDirectoryIgnored(WorkingTreeIterator.java:1611)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isDirectoryIgnored(WorkingTreeIterator.java:1589)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isEntryIgnored(WorkingTreeIterator.java:753)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isEntryIgnored(WorkingTreeIterator.java:713)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isEntryIgnored(WorkingTreeIterator.java:700)
	at org.eclipse.jgit.treewalk.filter.IndexDiffFilter.include(IndexDiffFilter.java:170)
	at org.eclipse.jgit.treewalk.filter.TreeFilter.matchFilter(TreeFilter.java:228)
	at org.eclipse.jgit.treewalk.filter.AndTreeFilter$List.matchFilter(AndTreeFilter.java:190)
	at org.eclipse.jgit.treewalk.TreeWalk.next(TreeWalk.java:853)
	at org.eclipse.jgit.lib.IndexDiff.diff(IndexDiff.java:446)
	at org.eclipse.egit.core.internal.indexdiff.IndexDiffCacheEntry.calcIndexDiffDataIncremental(IndexDiffCacheEntry.java:625)
	at org.eclipse.egit.core.internal.indexdiff.IndexDiffCacheEntry.access$13(IndexDiffCacheEntry.java:604)
	at org.eclipse.egit.core.internal.indexdiff.IndexDiffCacheEntry$5.updateIndexDiff(IndexDiffCacheEntry.java:550)
	at org.eclipse.egit.core.internal.indexdiff.IndexDiffUpdateJob.run(IndexDiffUpdateJob.java:77)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-06 10:12:31.943
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-06 10:12:31.944
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 4 0 2020-05-06 10:12:31.947
!MESSAGE Not closed bracket?
!STACK 0
org.eclipse.jgit.errors.InvalidPatternException: Not closed bracket?
	at org.eclipse.jgit.ignore.internal.Strings.convertGlob(Strings.java:444)
	at org.eclipse.jgit.ignore.internal.WildCardMatcher.<init>(WildCardMatcher.java:64)
	at org.eclipse.jgit.ignore.internal.PathMatcher.createNameMatcher0(PathMatcher.java:178)
	at org.eclipse.jgit.ignore.internal.PathMatcher.createMatchers(PathMatcher.java:99)
	at org.eclipse.jgit.ignore.internal.PathMatcher.<init>(PathMatcher.java:84)
	at org.eclipse.jgit.ignore.internal.PathMatcher.createPathMatcher(PathMatcher.java:135)
	at org.eclipse.jgit.ignore.FastIgnoreRule.<init>(FastIgnoreRule.java:129)
	at org.eclipse.jgit.ignore.IgnoreNode.parse(IgnoreNode.java:115)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator$PerDirectoryIgnoreNode.load(WorkingTreeIterator.java:1346)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator$RootIgnoreNode.load(WorkingTreeIterator.java:1365)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.getIgnoreNode(WorkingTreeIterator.java:771)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isDirectoryIgnored(WorkingTreeIterator.java:1611)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isDirectoryIgnored(WorkingTreeIterator.java:1589)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isEntryIgnored(WorkingTreeIterator.java:753)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isEntryIgnored(WorkingTreeIterator.java:713)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isEntryIgnored(WorkingTreeIterator.java:700)
	at org.eclipse.jgit.treewalk.FileTreeIterator.createSubtreeIterator(FileTreeIterator.java:215)
	at org.eclipse.jgit.treewalk.AbstractTreeIterator.createSubtreeIterator(AbstractTreeIterator.java:594)
	at org.eclipse.jgit.treewalk.TreeWalk.enterSubtree(TreeWalk.java:1303)
	at org.eclipse.egit.core.RepositoryUtil.canBeAutoIgnored(RepositoryUtil.java:773)
	at org.eclipse.egit.core.Activator$IgnoreDerivedResources$1.visit(Activator.java:835)
	at org.eclipse.core.internal.events.ResourceDelta.accept(ResourceDelta.java:67)
	at org.eclipse.core.internal.events.ResourceDelta.accept(ResourceDelta.java:77)
	at org.eclipse.core.internal.events.ResourceDelta.accept(ResourceDelta.java:77)
	at org.eclipse.core.internal.events.ResourceDelta.accept(ResourceDelta.java:51)
	at org.eclipse.egit.core.Activator$IgnoreDerivedResources.resourceChanged(Activator.java:811)
	at org.eclipse.core.internal.events.NotificationManager$1.run(NotificationManager.java:305)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.core.internal.events.NotificationManager.notify(NotificationManager.java:295)
	at org.eclipse.core.internal.events.NotificationManager.broadcastChanges(NotificationManager.java:158)
	at org.eclipse.core.internal.resources.Workspace.broadcastPostChange(Workspace.java:379)
	at org.eclipse.core.internal.resources.Workspace.endOperation(Workspace.java:1502)
	at org.eclipse.core.internal.events.AutoBuildJob.doBuild(AutoBuildJob.java:169)
	at org.eclipse.core.internal.events.AutoBuildJob.run(AutoBuildJob.java:244)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.m2e.logback.appender 4 0 2020-05-06 10:12:32.044
!MESSAGE Not closed bracket?
!STACK 0
org.eclipse.jgit.errors.InvalidPatternException: Not closed bracket?
	at org.eclipse.jgit.ignore.internal.Strings.convertGlob(Strings.java:444)
	at org.eclipse.jgit.ignore.internal.WildCardMatcher.<init>(WildCardMatcher.java:64)
	at org.eclipse.jgit.ignore.internal.PathMatcher.createNameMatcher0(PathMatcher.java:178)
	at org.eclipse.jgit.ignore.internal.PathMatcher.createMatchers(PathMatcher.java:99)
	at org.eclipse.jgit.ignore.internal.PathMatcher.<init>(PathMatcher.java:84)
	at org.eclipse.jgit.ignore.internal.PathMatcher.createPathMatcher(PathMatcher.java:135)
	at org.eclipse.jgit.ignore.FastIgnoreRule.<init>(FastIgnoreRule.java:129)
	at org.eclipse.jgit.ignore.IgnoreNode.parse(IgnoreNode.java:115)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator$PerDirectoryIgnoreNode.load(WorkingTreeIterator.java:1346)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator$RootIgnoreNode.load(WorkingTreeIterator.java:1365)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.getIgnoreNode(WorkingTreeIterator.java:771)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isDirectoryIgnored(WorkingTreeIterator.java:1611)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isDirectoryIgnored(WorkingTreeIterator.java:1589)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isEntryIgnored(WorkingTreeIterator.java:753)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isEntryIgnored(WorkingTreeIterator.java:713)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isEntryIgnored(WorkingTreeIterator.java:700)
	at org.eclipse.jgit.treewalk.filter.IndexDiffFilter.include(IndexDiffFilter.java:170)
	at org.eclipse.jgit.treewalk.filter.TreeFilter.matchFilter(TreeFilter.java:228)
	at org.eclipse.jgit.treewalk.filter.AndTreeFilter$List.matchFilter(AndTreeFilter.java:190)
	at org.eclipse.jgit.treewalk.TreeWalk.next(TreeWalk.java:853)
	at org.eclipse.jgit.lib.IndexDiff.diff(IndexDiff.java:446)
	at org.eclipse.egit.core.internal.indexdiff.IndexDiffCacheEntry.calcIndexDiffDataIncremental(IndexDiffCacheEntry.java:625)
	at org.eclipse.egit.core.internal.indexdiff.IndexDiffCacheEntry.access$13(IndexDiffCacheEntry.java:604)
	at org.eclipse.egit.core.internal.indexdiff.IndexDiffCacheEntry$5.updateIndexDiff(IndexDiffCacheEntry.java:550)
	at org.eclipse.egit.core.internal.indexdiff.IndexDiffUpdateJob.run(IndexDiffUpdateJob.java:77)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.m2e.logback.appender 4 0 2020-05-06 10:13:09.178
!MESSAGE Not closed bracket?
!STACK 0
org.eclipse.jgit.errors.InvalidPatternException: Not closed bracket?
	at org.eclipse.jgit.ignore.internal.Strings.convertGlob(Strings.java:444)
	at org.eclipse.jgit.ignore.internal.WildCardMatcher.<init>(WildCardMatcher.java:64)
	at org.eclipse.jgit.ignore.internal.PathMatcher.createNameMatcher0(PathMatcher.java:178)
	at org.eclipse.jgit.ignore.internal.PathMatcher.createMatchers(PathMatcher.java:99)
	at org.eclipse.jgit.ignore.internal.PathMatcher.<init>(PathMatcher.java:84)
	at org.eclipse.jgit.ignore.internal.PathMatcher.createPathMatcher(PathMatcher.java:135)
	at org.eclipse.jgit.ignore.FastIgnoreRule.<init>(FastIgnoreRule.java:129)
	at org.eclipse.jgit.ignore.IgnoreNode.parse(IgnoreNode.java:115)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator$PerDirectoryIgnoreNode.load(WorkingTreeIterator.java:1346)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator$RootIgnoreNode.load(WorkingTreeIterator.java:1365)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.getIgnoreNode(WorkingTreeIterator.java:771)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isDirectoryIgnored(WorkingTreeIterator.java:1611)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isDirectoryIgnored(WorkingTreeIterator.java:1589)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isEntryIgnored(WorkingTreeIterator.java:753)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isEntryIgnored(WorkingTreeIterator.java:713)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isEntryIgnored(WorkingTreeIterator.java:700)
	at org.eclipse.jgit.treewalk.filter.IndexDiffFilter.include(IndexDiffFilter.java:170)
	at org.eclipse.jgit.treewalk.filter.TreeFilter.matchFilter(TreeFilter.java:228)
	at org.eclipse.jgit.treewalk.filter.AndTreeFilter$List.matchFilter(AndTreeFilter.java:190)
	at org.eclipse.jgit.treewalk.TreeWalk.next(TreeWalk.java:853)
	at org.eclipse.jgit.lib.IndexDiff.diff(IndexDiff.java:446)
	at org.eclipse.egit.core.internal.indexdiff.IndexDiffCacheEntry.calcIndexDiffDataIncremental(IndexDiffCacheEntry.java:625)
	at org.eclipse.egit.core.internal.indexdiff.IndexDiffCacheEntry.access$13(IndexDiffCacheEntry.java:604)
	at org.eclipse.egit.core.internal.indexdiff.IndexDiffCacheEntry$5.updateIndexDiff(IndexDiffCacheEntry.java:550)
	at org.eclipse.egit.core.internal.indexdiff.IndexDiffUpdateJob.run(IndexDiffUpdateJob.java:77)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-06 10:13:09.331
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-06 10:13:09.332
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 4 0 2020-05-06 10:13:55.124
!MESSAGE Not closed bracket?
!STACK 0
org.eclipse.jgit.errors.InvalidPatternException: Not closed bracket?
	at org.eclipse.jgit.ignore.internal.Strings.convertGlob(Strings.java:444)
	at org.eclipse.jgit.ignore.internal.WildCardMatcher.<init>(WildCardMatcher.java:64)
	at org.eclipse.jgit.ignore.internal.PathMatcher.createNameMatcher0(PathMatcher.java:178)
	at org.eclipse.jgit.ignore.internal.PathMatcher.createMatchers(PathMatcher.java:99)
	at org.eclipse.jgit.ignore.internal.PathMatcher.<init>(PathMatcher.java:84)
	at org.eclipse.jgit.ignore.internal.PathMatcher.createPathMatcher(PathMatcher.java:135)
	at org.eclipse.jgit.ignore.FastIgnoreRule.<init>(FastIgnoreRule.java:129)
	at org.eclipse.jgit.ignore.IgnoreNode.parse(IgnoreNode.java:115)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator$PerDirectoryIgnoreNode.load(WorkingTreeIterator.java:1346)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator$RootIgnoreNode.load(WorkingTreeIterator.java:1365)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.getIgnoreNode(WorkingTreeIterator.java:771)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isDirectoryIgnored(WorkingTreeIterator.java:1611)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isDirectoryIgnored(WorkingTreeIterator.java:1589)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isEntryIgnored(WorkingTreeIterator.java:753)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isEntryIgnored(WorkingTreeIterator.java:713)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isEntryIgnored(WorkingTreeIterator.java:700)
	at org.eclipse.jgit.treewalk.filter.IndexDiffFilter.include(IndexDiffFilter.java:170)
	at org.eclipse.jgit.treewalk.filter.TreeFilter.matchFilter(TreeFilter.java:228)
	at org.eclipse.jgit.treewalk.filter.AndTreeFilter$List.matchFilter(AndTreeFilter.java:190)
	at org.eclipse.jgit.treewalk.TreeWalk.next(TreeWalk.java:853)
	at org.eclipse.jgit.lib.IndexDiff.diff(IndexDiff.java:446)
	at org.eclipse.egit.core.internal.indexdiff.IndexDiffCacheEntry.calcIndexDiffDataIncremental(IndexDiffCacheEntry.java:625)
	at org.eclipse.egit.core.internal.indexdiff.IndexDiffCacheEntry.access$13(IndexDiffCacheEntry.java:604)
	at org.eclipse.egit.core.internal.indexdiff.IndexDiffCacheEntry$5.updateIndexDiff(IndexDiffCacheEntry.java:550)
	at org.eclipse.egit.core.internal.indexdiff.IndexDiffUpdateJob.run(IndexDiffUpdateJob.java:77)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-06 10:13:55.338
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-06 10:13:55.340
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 4 0 2020-05-06 10:13:55.343
!MESSAGE Not closed bracket?
!STACK 0
org.eclipse.jgit.errors.InvalidPatternException: Not closed bracket?
	at org.eclipse.jgit.ignore.internal.Strings.convertGlob(Strings.java:444)
	at org.eclipse.jgit.ignore.internal.WildCardMatcher.<init>(WildCardMatcher.java:64)
	at org.eclipse.jgit.ignore.internal.PathMatcher.createNameMatcher0(PathMatcher.java:178)
	at org.eclipse.jgit.ignore.internal.PathMatcher.createMatchers(PathMatcher.java:99)
	at org.eclipse.jgit.ignore.internal.PathMatcher.<init>(PathMatcher.java:84)
	at org.eclipse.jgit.ignore.internal.PathMatcher.createPathMatcher(PathMatcher.java:135)
	at org.eclipse.jgit.ignore.FastIgnoreRule.<init>(FastIgnoreRule.java:129)
	at org.eclipse.jgit.ignore.IgnoreNode.parse(IgnoreNode.java:115)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator$PerDirectoryIgnoreNode.load(WorkingTreeIterator.java:1346)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator$RootIgnoreNode.load(WorkingTreeIterator.java:1365)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.getIgnoreNode(WorkingTreeIterator.java:771)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isDirectoryIgnored(WorkingTreeIterator.java:1611)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isDirectoryIgnored(WorkingTreeIterator.java:1589)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isEntryIgnored(WorkingTreeIterator.java:753)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isEntryIgnored(WorkingTreeIterator.java:713)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isEntryIgnored(WorkingTreeIterator.java:700)
	at org.eclipse.jgit.treewalk.FileTreeIterator.createSubtreeIterator(FileTreeIterator.java:215)
	at org.eclipse.jgit.treewalk.AbstractTreeIterator.createSubtreeIterator(AbstractTreeIterator.java:594)
	at org.eclipse.jgit.treewalk.TreeWalk.enterSubtree(TreeWalk.java:1303)
	at org.eclipse.egit.core.RepositoryUtil.canBeAutoIgnored(RepositoryUtil.java:773)
	at org.eclipse.egit.core.Activator$IgnoreDerivedResources$1.visit(Activator.java:835)
	at org.eclipse.core.internal.events.ResourceDelta.accept(ResourceDelta.java:67)
	at org.eclipse.core.internal.events.ResourceDelta.accept(ResourceDelta.java:77)
	at org.eclipse.core.internal.events.ResourceDelta.accept(ResourceDelta.java:77)
	at org.eclipse.core.internal.events.ResourceDelta.accept(ResourceDelta.java:51)
	at org.eclipse.egit.core.Activator$IgnoreDerivedResources.resourceChanged(Activator.java:811)
	at org.eclipse.core.internal.events.NotificationManager$1.run(NotificationManager.java:305)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.core.internal.events.NotificationManager.notify(NotificationManager.java:295)
	at org.eclipse.core.internal.events.NotificationManager.broadcastChanges(NotificationManager.java:158)
	at org.eclipse.core.internal.resources.Workspace.broadcastPostChange(Workspace.java:379)
	at org.eclipse.core.internal.resources.Workspace.endOperation(Workspace.java:1502)
	at org.eclipse.core.internal.events.AutoBuildJob.doBuild(AutoBuildJob.java:169)
	at org.eclipse.core.internal.events.AutoBuildJob.run(AutoBuildJob.java:244)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.m2e.logback.appender 4 0 2020-05-06 10:13:55.435
!MESSAGE Not closed bracket?
!STACK 0
org.eclipse.jgit.errors.InvalidPatternException: Not closed bracket?
	at org.eclipse.jgit.ignore.internal.Strings.convertGlob(Strings.java:444)
	at org.eclipse.jgit.ignore.internal.WildCardMatcher.<init>(WildCardMatcher.java:64)
	at org.eclipse.jgit.ignore.internal.PathMatcher.createNameMatcher0(PathMatcher.java:178)
	at org.eclipse.jgit.ignore.internal.PathMatcher.createMatchers(PathMatcher.java:99)
	at org.eclipse.jgit.ignore.internal.PathMatcher.<init>(PathMatcher.java:84)
	at org.eclipse.jgit.ignore.internal.PathMatcher.createPathMatcher(PathMatcher.java:135)
	at org.eclipse.jgit.ignore.FastIgnoreRule.<init>(FastIgnoreRule.java:129)
	at org.eclipse.jgit.ignore.IgnoreNode.parse(IgnoreNode.java:115)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator$PerDirectoryIgnoreNode.load(WorkingTreeIterator.java:1346)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator$RootIgnoreNode.load(WorkingTreeIterator.java:1365)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.getIgnoreNode(WorkingTreeIterator.java:771)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isDirectoryIgnored(WorkingTreeIterator.java:1611)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isDirectoryIgnored(WorkingTreeIterator.java:1589)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isEntryIgnored(WorkingTreeIterator.java:753)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isEntryIgnored(WorkingTreeIterator.java:713)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isEntryIgnored(WorkingTreeIterator.java:700)
	at org.eclipse.jgit.treewalk.filter.IndexDiffFilter.include(IndexDiffFilter.java:170)
	at org.eclipse.jgit.treewalk.filter.TreeFilter.matchFilter(TreeFilter.java:228)
	at org.eclipse.jgit.treewalk.filter.AndTreeFilter$List.matchFilter(AndTreeFilter.java:190)
	at org.eclipse.jgit.treewalk.TreeWalk.next(TreeWalk.java:853)
	at org.eclipse.jgit.lib.IndexDiff.diff(IndexDiff.java:446)
	at org.eclipse.egit.core.internal.indexdiff.IndexDiffCacheEntry.calcIndexDiffDataIncremental(IndexDiffCacheEntry.java:625)
	at org.eclipse.egit.core.internal.indexdiff.IndexDiffCacheEntry.access$13(IndexDiffCacheEntry.java:604)
	at org.eclipse.egit.core.internal.indexdiff.IndexDiffCacheEntry$5.updateIndexDiff(IndexDiffCacheEntry.java:550)
	at org.eclipse.egit.core.internal.indexdiff.IndexDiffUpdateJob.run(IndexDiffUpdateJob.java:77)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.m2e.logback.appender 4 0 2020-05-06 10:14:14.796
!MESSAGE Not closed bracket?
!STACK 0
org.eclipse.jgit.errors.InvalidPatternException: Not closed bracket?
	at org.eclipse.jgit.ignore.internal.Strings.convertGlob(Strings.java:444)
	at org.eclipse.jgit.ignore.internal.WildCardMatcher.<init>(WildCardMatcher.java:64)
	at org.eclipse.jgit.ignore.internal.PathMatcher.createNameMatcher0(PathMatcher.java:178)
	at org.eclipse.jgit.ignore.internal.PathMatcher.createMatchers(PathMatcher.java:99)
	at org.eclipse.jgit.ignore.internal.PathMatcher.<init>(PathMatcher.java:84)
	at org.eclipse.jgit.ignore.internal.PathMatcher.createPathMatcher(PathMatcher.java:135)
	at org.eclipse.jgit.ignore.FastIgnoreRule.<init>(FastIgnoreRule.java:129)
	at org.eclipse.jgit.ignore.IgnoreNode.parse(IgnoreNode.java:115)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator$PerDirectoryIgnoreNode.load(WorkingTreeIterator.java:1346)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator$RootIgnoreNode.load(WorkingTreeIterator.java:1365)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.getIgnoreNode(WorkingTreeIterator.java:771)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isDirectoryIgnored(WorkingTreeIterator.java:1611)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isDirectoryIgnored(WorkingTreeIterator.java:1589)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isEntryIgnored(WorkingTreeIterator.java:753)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isEntryIgnored(WorkingTreeIterator.java:713)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isEntryIgnored(WorkingTreeIterator.java:700)
	at org.eclipse.jgit.treewalk.filter.IndexDiffFilter.include(IndexDiffFilter.java:170)
	at org.eclipse.jgit.treewalk.filter.TreeFilter.matchFilter(TreeFilter.java:228)
	at org.eclipse.jgit.treewalk.filter.AndTreeFilter$List.matchFilter(AndTreeFilter.java:190)
	at org.eclipse.jgit.treewalk.TreeWalk.next(TreeWalk.java:853)
	at org.eclipse.jgit.lib.IndexDiff.diff(IndexDiff.java:446)
	at org.eclipse.egit.core.internal.indexdiff.IndexDiffCacheEntry.calcIndexDiffDataIncremental(IndexDiffCacheEntry.java:625)
	at org.eclipse.egit.core.internal.indexdiff.IndexDiffCacheEntry.access$13(IndexDiffCacheEntry.java:604)
	at org.eclipse.egit.core.internal.indexdiff.IndexDiffCacheEntry$5.updateIndexDiff(IndexDiffCacheEntry.java:550)
	at org.eclipse.egit.core.internal.indexdiff.IndexDiffUpdateJob.run(IndexDiffUpdateJob.java:77)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-06 10:14:14.972
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-06 10:14:14.974
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 4 0 2020-05-06 10:14:14.977
!MESSAGE Not closed bracket?
!STACK 0
org.eclipse.jgit.errors.InvalidPatternException: Not closed bracket?
	at org.eclipse.jgit.ignore.internal.Strings.convertGlob(Strings.java:444)
	at org.eclipse.jgit.ignore.internal.WildCardMatcher.<init>(WildCardMatcher.java:64)
	at org.eclipse.jgit.ignore.internal.PathMatcher.createNameMatcher0(PathMatcher.java:178)
	at org.eclipse.jgit.ignore.internal.PathMatcher.createMatchers(PathMatcher.java:99)
	at org.eclipse.jgit.ignore.internal.PathMatcher.<init>(PathMatcher.java:84)
	at org.eclipse.jgit.ignore.internal.PathMatcher.createPathMatcher(PathMatcher.java:135)
	at org.eclipse.jgit.ignore.FastIgnoreRule.<init>(FastIgnoreRule.java:129)
	at org.eclipse.jgit.ignore.IgnoreNode.parse(IgnoreNode.java:115)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator$PerDirectoryIgnoreNode.load(WorkingTreeIterator.java:1346)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator$RootIgnoreNode.load(WorkingTreeIterator.java:1365)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.getIgnoreNode(WorkingTreeIterator.java:771)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isDirectoryIgnored(WorkingTreeIterator.java:1611)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isDirectoryIgnored(WorkingTreeIterator.java:1589)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isEntryIgnored(WorkingTreeIterator.java:753)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isEntryIgnored(WorkingTreeIterator.java:713)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isEntryIgnored(WorkingTreeIterator.java:700)
	at org.eclipse.jgit.treewalk.FileTreeIterator.createSubtreeIterator(FileTreeIterator.java:215)
	at org.eclipse.jgit.treewalk.AbstractTreeIterator.createSubtreeIterator(AbstractTreeIterator.java:594)
	at org.eclipse.jgit.treewalk.TreeWalk.enterSubtree(TreeWalk.java:1303)
	at org.eclipse.egit.core.RepositoryUtil.canBeAutoIgnored(RepositoryUtil.java:773)
	at org.eclipse.egit.core.Activator$IgnoreDerivedResources$1.visit(Activator.java:835)
	at org.eclipse.core.internal.events.ResourceDelta.accept(ResourceDelta.java:67)
	at org.eclipse.core.internal.events.ResourceDelta.accept(ResourceDelta.java:77)
	at org.eclipse.core.internal.events.ResourceDelta.accept(ResourceDelta.java:77)
	at org.eclipse.core.internal.events.ResourceDelta.accept(ResourceDelta.java:51)
	at org.eclipse.egit.core.Activator$IgnoreDerivedResources.resourceChanged(Activator.java:811)
	at org.eclipse.core.internal.events.NotificationManager$1.run(NotificationManager.java:305)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.core.internal.events.NotificationManager.notify(NotificationManager.java:295)
	at org.eclipse.core.internal.events.NotificationManager.broadcastChanges(NotificationManager.java:158)
	at org.eclipse.core.internal.resources.Workspace.broadcastPostChange(Workspace.java:379)
	at org.eclipse.core.internal.resources.Workspace.endOperation(Workspace.java:1502)
	at org.eclipse.core.internal.events.AutoBuildJob.doBuild(AutoBuildJob.java:169)
	at org.eclipse.core.internal.events.AutoBuildJob.run(AutoBuildJob.java:244)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.m2e.logback.appender 4 0 2020-05-06 10:14:15.070
!MESSAGE Not closed bracket?
!STACK 0
org.eclipse.jgit.errors.InvalidPatternException: Not closed bracket?
	at org.eclipse.jgit.ignore.internal.Strings.convertGlob(Strings.java:444)
	at org.eclipse.jgit.ignore.internal.WildCardMatcher.<init>(WildCardMatcher.java:64)
	at org.eclipse.jgit.ignore.internal.PathMatcher.createNameMatcher0(PathMatcher.java:178)
	at org.eclipse.jgit.ignore.internal.PathMatcher.createMatchers(PathMatcher.java:99)
	at org.eclipse.jgit.ignore.internal.PathMatcher.<init>(PathMatcher.java:84)
	at org.eclipse.jgit.ignore.internal.PathMatcher.createPathMatcher(PathMatcher.java:135)
	at org.eclipse.jgit.ignore.FastIgnoreRule.<init>(FastIgnoreRule.java:129)
	at org.eclipse.jgit.ignore.IgnoreNode.parse(IgnoreNode.java:115)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator$PerDirectoryIgnoreNode.load(WorkingTreeIterator.java:1346)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator$RootIgnoreNode.load(WorkingTreeIterator.java:1365)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.getIgnoreNode(WorkingTreeIterator.java:771)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isDirectoryIgnored(WorkingTreeIterator.java:1611)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isDirectoryIgnored(WorkingTreeIterator.java:1589)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isEntryIgnored(WorkingTreeIterator.java:753)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isEntryIgnored(WorkingTreeIterator.java:713)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isEntryIgnored(WorkingTreeIterator.java:700)
	at org.eclipse.jgit.treewalk.filter.IndexDiffFilter.include(IndexDiffFilter.java:170)
	at org.eclipse.jgit.treewalk.filter.TreeFilter.matchFilter(TreeFilter.java:228)
	at org.eclipse.jgit.treewalk.filter.AndTreeFilter$List.matchFilter(AndTreeFilter.java:190)
	at org.eclipse.jgit.treewalk.TreeWalk.next(TreeWalk.java:853)
	at org.eclipse.jgit.lib.IndexDiff.diff(IndexDiff.java:446)
	at org.eclipse.egit.core.internal.indexdiff.IndexDiffCacheEntry.calcIndexDiffDataIncremental(IndexDiffCacheEntry.java:625)
	at org.eclipse.egit.core.internal.indexdiff.IndexDiffCacheEntry.access$13(IndexDiffCacheEntry.java:604)
	at org.eclipse.egit.core.internal.indexdiff.IndexDiffCacheEntry$5.updateIndexDiff(IndexDiffCacheEntry.java:550)
	at org.eclipse.egit.core.internal.indexdiff.IndexDiffUpdateJob.run(IndexDiffUpdateJob.java:77)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.m2e.logback.appender 4 0 2020-05-06 10:14:20.438
!MESSAGE Not closed bracket?
!STACK 0
org.eclipse.jgit.errors.InvalidPatternException: Not closed bracket?
	at org.eclipse.jgit.ignore.internal.Strings.convertGlob(Strings.java:444)
	at org.eclipse.jgit.ignore.internal.WildCardMatcher.<init>(WildCardMatcher.java:64)
	at org.eclipse.jgit.ignore.internal.PathMatcher.createNameMatcher0(PathMatcher.java:178)
	at org.eclipse.jgit.ignore.internal.PathMatcher.createMatchers(PathMatcher.java:99)
	at org.eclipse.jgit.ignore.internal.PathMatcher.<init>(PathMatcher.java:84)
	at org.eclipse.jgit.ignore.internal.PathMatcher.createPathMatcher(PathMatcher.java:135)
	at org.eclipse.jgit.ignore.FastIgnoreRule.<init>(FastIgnoreRule.java:129)
	at org.eclipse.jgit.ignore.IgnoreNode.parse(IgnoreNode.java:115)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator$PerDirectoryIgnoreNode.load(WorkingTreeIterator.java:1346)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator$RootIgnoreNode.load(WorkingTreeIterator.java:1365)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.getIgnoreNode(WorkingTreeIterator.java:771)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isDirectoryIgnored(WorkingTreeIterator.java:1611)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isDirectoryIgnored(WorkingTreeIterator.java:1589)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isEntryIgnored(WorkingTreeIterator.java:753)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isEntryIgnored(WorkingTreeIterator.java:713)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isEntryIgnored(WorkingTreeIterator.java:700)
	at org.eclipse.jgit.treewalk.filter.IndexDiffFilter.include(IndexDiffFilter.java:170)
	at org.eclipse.jgit.treewalk.filter.TreeFilter.matchFilter(TreeFilter.java:228)
	at org.eclipse.jgit.treewalk.filter.AndTreeFilter$List.matchFilter(AndTreeFilter.java:190)
	at org.eclipse.jgit.treewalk.TreeWalk.next(TreeWalk.java:853)
	at org.eclipse.jgit.lib.IndexDiff.diff(IndexDiff.java:446)
	at org.eclipse.egit.core.internal.indexdiff.IndexDiffCacheEntry.calcIndexDiffDataIncremental(IndexDiffCacheEntry.java:625)
	at org.eclipse.egit.core.internal.indexdiff.IndexDiffCacheEntry.access$13(IndexDiffCacheEntry.java:604)
	at org.eclipse.egit.core.internal.indexdiff.IndexDiffCacheEntry$5.updateIndexDiff(IndexDiffCacheEntry.java:550)
	at org.eclipse.egit.core.internal.indexdiff.IndexDiffUpdateJob.run(IndexDiffUpdateJob.java:77)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-06 10:14:20.595
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-06 10:14:20.597
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 4 0 2020-05-06 10:14:20.600
!MESSAGE Not closed bracket?
!STACK 0
org.eclipse.jgit.errors.InvalidPatternException: Not closed bracket?
	at org.eclipse.jgit.ignore.internal.Strings.convertGlob(Strings.java:444)
	at org.eclipse.jgit.ignore.internal.WildCardMatcher.<init>(WildCardMatcher.java:64)
	at org.eclipse.jgit.ignore.internal.PathMatcher.createNameMatcher0(PathMatcher.java:178)
	at org.eclipse.jgit.ignore.internal.PathMatcher.createMatchers(PathMatcher.java:99)
	at org.eclipse.jgit.ignore.internal.PathMatcher.<init>(PathMatcher.java:84)
	at org.eclipse.jgit.ignore.internal.PathMatcher.createPathMatcher(PathMatcher.java:135)
	at org.eclipse.jgit.ignore.FastIgnoreRule.<init>(FastIgnoreRule.java:129)
	at org.eclipse.jgit.ignore.IgnoreNode.parse(IgnoreNode.java:115)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator$PerDirectoryIgnoreNode.load(WorkingTreeIterator.java:1346)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator$RootIgnoreNode.load(WorkingTreeIterator.java:1365)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.getIgnoreNode(WorkingTreeIterator.java:771)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isDirectoryIgnored(WorkingTreeIterator.java:1611)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isDirectoryIgnored(WorkingTreeIterator.java:1589)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isEntryIgnored(WorkingTreeIterator.java:753)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isEntryIgnored(WorkingTreeIterator.java:713)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isEntryIgnored(WorkingTreeIterator.java:700)
	at org.eclipse.jgit.treewalk.FileTreeIterator.createSubtreeIterator(FileTreeIterator.java:215)
	at org.eclipse.jgit.treewalk.AbstractTreeIterator.createSubtreeIterator(AbstractTreeIterator.java:594)
	at org.eclipse.jgit.treewalk.TreeWalk.enterSubtree(TreeWalk.java:1303)
	at org.eclipse.egit.core.RepositoryUtil.canBeAutoIgnored(RepositoryUtil.java:773)
	at org.eclipse.egit.core.Activator$IgnoreDerivedResources$1.visit(Activator.java:835)
	at org.eclipse.core.internal.events.ResourceDelta.accept(ResourceDelta.java:67)
	at org.eclipse.core.internal.events.ResourceDelta.accept(ResourceDelta.java:77)
	at org.eclipse.core.internal.events.ResourceDelta.accept(ResourceDelta.java:77)
	at org.eclipse.core.internal.events.ResourceDelta.accept(ResourceDelta.java:51)
	at org.eclipse.egit.core.Activator$IgnoreDerivedResources.resourceChanged(Activator.java:811)
	at org.eclipse.core.internal.events.NotificationManager$1.run(NotificationManager.java:305)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.core.internal.events.NotificationManager.notify(NotificationManager.java:295)
	at org.eclipse.core.internal.events.NotificationManager.broadcastChanges(NotificationManager.java:158)
	at org.eclipse.core.internal.resources.Workspace.broadcastPostChange(Workspace.java:379)
	at org.eclipse.core.internal.resources.Workspace.endOperation(Workspace.java:1502)
	at org.eclipse.core.internal.events.AutoBuildJob.doBuild(AutoBuildJob.java:169)
	at org.eclipse.core.internal.events.AutoBuildJob.run(AutoBuildJob.java:244)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.m2e.logback.appender 4 0 2020-05-06 10:14:20.692
!MESSAGE Not closed bracket?
!STACK 0
org.eclipse.jgit.errors.InvalidPatternException: Not closed bracket?
	at org.eclipse.jgit.ignore.internal.Strings.convertGlob(Strings.java:444)
	at org.eclipse.jgit.ignore.internal.WildCardMatcher.<init>(WildCardMatcher.java:64)
	at org.eclipse.jgit.ignore.internal.PathMatcher.createNameMatcher0(PathMatcher.java:178)
	at org.eclipse.jgit.ignore.internal.PathMatcher.createMatchers(PathMatcher.java:99)
	at org.eclipse.jgit.ignore.internal.PathMatcher.<init>(PathMatcher.java:84)
	at org.eclipse.jgit.ignore.internal.PathMatcher.createPathMatcher(PathMatcher.java:135)
	at org.eclipse.jgit.ignore.FastIgnoreRule.<init>(FastIgnoreRule.java:129)
	at org.eclipse.jgit.ignore.IgnoreNode.parse(IgnoreNode.java:115)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator$PerDirectoryIgnoreNode.load(WorkingTreeIterator.java:1346)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator$RootIgnoreNode.load(WorkingTreeIterator.java:1365)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.getIgnoreNode(WorkingTreeIterator.java:771)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isDirectoryIgnored(WorkingTreeIterator.java:1611)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isDirectoryIgnored(WorkingTreeIterator.java:1589)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isEntryIgnored(WorkingTreeIterator.java:753)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isEntryIgnored(WorkingTreeIterator.java:713)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isEntryIgnored(WorkingTreeIterator.java:700)
	at org.eclipse.jgit.treewalk.filter.IndexDiffFilter.include(IndexDiffFilter.java:170)
	at org.eclipse.jgit.treewalk.filter.TreeFilter.matchFilter(TreeFilter.java:228)
	at org.eclipse.jgit.treewalk.filter.AndTreeFilter$List.matchFilter(AndTreeFilter.java:190)
	at org.eclipse.jgit.treewalk.TreeWalk.next(TreeWalk.java:853)
	at org.eclipse.jgit.lib.IndexDiff.diff(IndexDiff.java:446)
	at org.eclipse.egit.core.internal.indexdiff.IndexDiffCacheEntry.calcIndexDiffDataIncremental(IndexDiffCacheEntry.java:625)
	at org.eclipse.egit.core.internal.indexdiff.IndexDiffCacheEntry.access$13(IndexDiffCacheEntry.java:604)
	at org.eclipse.egit.core.internal.indexdiff.IndexDiffCacheEntry$5.updateIndexDiff(IndexDiffCacheEntry.java:550)
	at org.eclipse.egit.core.internal.indexdiff.IndexDiffUpdateJob.run(IndexDiffUpdateJob.java:77)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.m2e.logback.appender 4 0 2020-05-06 10:15:23.640
!MESSAGE Not closed bracket?
!STACK 0
org.eclipse.jgit.errors.InvalidPatternException: Not closed bracket?
	at org.eclipse.jgit.ignore.internal.Strings.convertGlob(Strings.java:444)
	at org.eclipse.jgit.ignore.internal.WildCardMatcher.<init>(WildCardMatcher.java:64)
	at org.eclipse.jgit.ignore.internal.PathMatcher.createNameMatcher0(PathMatcher.java:178)
	at org.eclipse.jgit.ignore.internal.PathMatcher.createMatchers(PathMatcher.java:99)
	at org.eclipse.jgit.ignore.internal.PathMatcher.<init>(PathMatcher.java:84)
	at org.eclipse.jgit.ignore.internal.PathMatcher.createPathMatcher(PathMatcher.java:135)
	at org.eclipse.jgit.ignore.FastIgnoreRule.<init>(FastIgnoreRule.java:129)
	at org.eclipse.jgit.ignore.IgnoreNode.parse(IgnoreNode.java:115)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator$PerDirectoryIgnoreNode.load(WorkingTreeIterator.java:1346)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator$RootIgnoreNode.load(WorkingTreeIterator.java:1365)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.getIgnoreNode(WorkingTreeIterator.java:771)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isDirectoryIgnored(WorkingTreeIterator.java:1611)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isDirectoryIgnored(WorkingTreeIterator.java:1589)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isEntryIgnored(WorkingTreeIterator.java:753)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isEntryIgnored(WorkingTreeIterator.java:713)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isEntryIgnored(WorkingTreeIterator.java:700)
	at org.eclipse.jgit.treewalk.filter.IndexDiffFilter.include(IndexDiffFilter.java:170)
	at org.eclipse.jgit.treewalk.filter.TreeFilter.matchFilter(TreeFilter.java:228)
	at org.eclipse.jgit.treewalk.filter.AndTreeFilter$List.matchFilter(AndTreeFilter.java:190)
	at org.eclipse.jgit.treewalk.TreeWalk.next(TreeWalk.java:853)
	at org.eclipse.jgit.lib.IndexDiff.diff(IndexDiff.java:446)
	at org.eclipse.egit.core.internal.indexdiff.IndexDiffCacheEntry.calcIndexDiffDataIncremental(IndexDiffCacheEntry.java:625)
	at org.eclipse.egit.core.internal.indexdiff.IndexDiffCacheEntry.access$13(IndexDiffCacheEntry.java:604)
	at org.eclipse.egit.core.internal.indexdiff.IndexDiffCacheEntry$5.updateIndexDiff(IndexDiffCacheEntry.java:550)
	at org.eclipse.egit.core.internal.indexdiff.IndexDiffUpdateJob.run(IndexDiffUpdateJob.java:77)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-06 10:15:23.743
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-06 10:15:23.745
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 4 0 2020-05-06 10:15:59.430
!MESSAGE Not closed bracket?
!STACK 0
org.eclipse.jgit.errors.InvalidPatternException: Not closed bracket?
	at org.eclipse.jgit.ignore.internal.Strings.convertGlob(Strings.java:444)
	at org.eclipse.jgit.ignore.internal.WildCardMatcher.<init>(WildCardMatcher.java:64)
	at org.eclipse.jgit.ignore.internal.PathMatcher.createNameMatcher0(PathMatcher.java:178)
	at org.eclipse.jgit.ignore.internal.PathMatcher.createMatchers(PathMatcher.java:99)
	at org.eclipse.jgit.ignore.internal.PathMatcher.<init>(PathMatcher.java:84)
	at org.eclipse.jgit.ignore.internal.PathMatcher.createPathMatcher(PathMatcher.java:135)
	at org.eclipse.jgit.ignore.FastIgnoreRule.<init>(FastIgnoreRule.java:129)
	at org.eclipse.jgit.ignore.IgnoreNode.parse(IgnoreNode.java:115)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator$PerDirectoryIgnoreNode.load(WorkingTreeIterator.java:1346)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator$RootIgnoreNode.load(WorkingTreeIterator.java:1365)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.getIgnoreNode(WorkingTreeIterator.java:771)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isDirectoryIgnored(WorkingTreeIterator.java:1611)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isDirectoryIgnored(WorkingTreeIterator.java:1589)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isEntryIgnored(WorkingTreeIterator.java:753)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isEntryIgnored(WorkingTreeIterator.java:713)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isEntryIgnored(WorkingTreeIterator.java:700)
	at org.eclipse.jgit.treewalk.filter.IndexDiffFilter.include(IndexDiffFilter.java:170)
	at org.eclipse.jgit.treewalk.filter.TreeFilter.matchFilter(TreeFilter.java:228)
	at org.eclipse.jgit.treewalk.filter.AndTreeFilter$List.matchFilter(AndTreeFilter.java:190)
	at org.eclipse.jgit.treewalk.TreeWalk.next(TreeWalk.java:853)
	at org.eclipse.jgit.lib.IndexDiff.diff(IndexDiff.java:446)
	at org.eclipse.egit.core.internal.indexdiff.IndexDiffCacheEntry.calcIndexDiffDataIncremental(IndexDiffCacheEntry.java:625)
	at org.eclipse.egit.core.internal.indexdiff.IndexDiffCacheEntry.access$13(IndexDiffCacheEntry.java:604)
	at org.eclipse.egit.core.internal.indexdiff.IndexDiffCacheEntry$5.updateIndexDiff(IndexDiffCacheEntry.java:550)
	at org.eclipse.egit.core.internal.indexdiff.IndexDiffUpdateJob.run(IndexDiffUpdateJob.java:77)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-06 10:15:59.533
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-06 10:15:59.535
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 4 0 2020-05-06 10:18:03.073
!MESSAGE Not closed bracket?
!STACK 0
org.eclipse.jgit.errors.InvalidPatternException: Not closed bracket?
	at org.eclipse.jgit.ignore.internal.Strings.convertGlob(Strings.java:444)
	at org.eclipse.jgit.ignore.internal.WildCardMatcher.<init>(WildCardMatcher.java:64)
	at org.eclipse.jgit.ignore.internal.PathMatcher.createNameMatcher0(PathMatcher.java:178)
	at org.eclipse.jgit.ignore.internal.PathMatcher.createMatchers(PathMatcher.java:99)
	at org.eclipse.jgit.ignore.internal.PathMatcher.<init>(PathMatcher.java:84)
	at org.eclipse.jgit.ignore.internal.PathMatcher.createPathMatcher(PathMatcher.java:135)
	at org.eclipse.jgit.ignore.FastIgnoreRule.<init>(FastIgnoreRule.java:129)
	at org.eclipse.jgit.ignore.IgnoreNode.parse(IgnoreNode.java:115)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator$PerDirectoryIgnoreNode.load(WorkingTreeIterator.java:1346)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator$RootIgnoreNode.load(WorkingTreeIterator.java:1365)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.getIgnoreNode(WorkingTreeIterator.java:771)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isDirectoryIgnored(WorkingTreeIterator.java:1611)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isDirectoryIgnored(WorkingTreeIterator.java:1589)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isEntryIgnored(WorkingTreeIterator.java:753)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isEntryIgnored(WorkingTreeIterator.java:713)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isEntryIgnored(WorkingTreeIterator.java:700)
	at org.eclipse.jgit.treewalk.filter.IndexDiffFilter.include(IndexDiffFilter.java:170)
	at org.eclipse.jgit.treewalk.filter.TreeFilter.matchFilter(TreeFilter.java:228)
	at org.eclipse.jgit.treewalk.filter.AndTreeFilter$List.matchFilter(AndTreeFilter.java:190)
	at org.eclipse.jgit.treewalk.TreeWalk.next(TreeWalk.java:853)
	at org.eclipse.jgit.lib.IndexDiff.diff(IndexDiff.java:446)
	at org.eclipse.egit.core.internal.indexdiff.IndexDiffCacheEntry.calcIndexDiffDataIncremental(IndexDiffCacheEntry.java:625)
	at org.eclipse.egit.core.internal.indexdiff.IndexDiffCacheEntry.access$13(IndexDiffCacheEntry.java:604)
	at org.eclipse.egit.core.internal.indexdiff.IndexDiffCacheEntry$5.updateIndexDiff(IndexDiffCacheEntry.java:550)
	at org.eclipse.egit.core.internal.indexdiff.IndexDiffUpdateJob.run(IndexDiffUpdateJob.java:77)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-06 10:18:03.179
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-06 10:18:03.180
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 4 0 2020-05-06 10:18:16.451
!MESSAGE Not closed bracket?
!STACK 0
org.eclipse.jgit.errors.InvalidPatternException: Not closed bracket?
	at org.eclipse.jgit.ignore.internal.Strings.convertGlob(Strings.java:444)
	at org.eclipse.jgit.ignore.internal.WildCardMatcher.<init>(WildCardMatcher.java:64)
	at org.eclipse.jgit.ignore.internal.PathMatcher.createNameMatcher0(PathMatcher.java:178)
	at org.eclipse.jgit.ignore.internal.PathMatcher.createMatchers(PathMatcher.java:99)
	at org.eclipse.jgit.ignore.internal.PathMatcher.<init>(PathMatcher.java:84)
	at org.eclipse.jgit.ignore.internal.PathMatcher.createPathMatcher(PathMatcher.java:135)
	at org.eclipse.jgit.ignore.FastIgnoreRule.<init>(FastIgnoreRule.java:129)
	at org.eclipse.jgit.ignore.IgnoreNode.parse(IgnoreNode.java:115)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator$PerDirectoryIgnoreNode.load(WorkingTreeIterator.java:1346)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator$RootIgnoreNode.load(WorkingTreeIterator.java:1365)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.getIgnoreNode(WorkingTreeIterator.java:771)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isDirectoryIgnored(WorkingTreeIterator.java:1611)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isDirectoryIgnored(WorkingTreeIterator.java:1589)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isEntryIgnored(WorkingTreeIterator.java:753)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isEntryIgnored(WorkingTreeIterator.java:713)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isEntryIgnored(WorkingTreeIterator.java:700)
	at org.eclipse.jgit.treewalk.filter.IndexDiffFilter.include(IndexDiffFilter.java:170)
	at org.eclipse.jgit.treewalk.filter.TreeFilter.matchFilter(TreeFilter.java:228)
	at org.eclipse.jgit.treewalk.filter.AndTreeFilter$List.matchFilter(AndTreeFilter.java:190)
	at org.eclipse.jgit.treewalk.TreeWalk.next(TreeWalk.java:853)
	at org.eclipse.jgit.lib.IndexDiff.diff(IndexDiff.java:446)
	at org.eclipse.egit.core.internal.indexdiff.IndexDiffCacheEntry.calcIndexDiffDataIncremental(IndexDiffCacheEntry.java:625)
	at org.eclipse.egit.core.internal.indexdiff.IndexDiffCacheEntry.access$13(IndexDiffCacheEntry.java:604)
	at org.eclipse.egit.core.internal.indexdiff.IndexDiffCacheEntry$5.updateIndexDiff(IndexDiffCacheEntry.java:550)
	at org.eclipse.egit.core.internal.indexdiff.IndexDiffUpdateJob.run(IndexDiffUpdateJob.java:77)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-06 10:18:16.501
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-06 10:18:16.502
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 4 0 2020-05-06 10:18:56.936
!MESSAGE Not closed bracket?
!STACK 0
org.eclipse.jgit.errors.InvalidPatternException: Not closed bracket?
	at org.eclipse.jgit.ignore.internal.Strings.convertGlob(Strings.java:444)
	at org.eclipse.jgit.ignore.internal.WildCardMatcher.<init>(WildCardMatcher.java:64)
	at org.eclipse.jgit.ignore.internal.PathMatcher.createNameMatcher0(PathMatcher.java:178)
	at org.eclipse.jgit.ignore.internal.PathMatcher.createMatchers(PathMatcher.java:99)
	at org.eclipse.jgit.ignore.internal.PathMatcher.<init>(PathMatcher.java:84)
	at org.eclipse.jgit.ignore.internal.PathMatcher.createPathMatcher(PathMatcher.java:135)
	at org.eclipse.jgit.ignore.FastIgnoreRule.<init>(FastIgnoreRule.java:129)
	at org.eclipse.jgit.ignore.IgnoreNode.parse(IgnoreNode.java:115)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator$PerDirectoryIgnoreNode.load(WorkingTreeIterator.java:1346)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator$RootIgnoreNode.load(WorkingTreeIterator.java:1365)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.getIgnoreNode(WorkingTreeIterator.java:771)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isDirectoryIgnored(WorkingTreeIterator.java:1611)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isDirectoryIgnored(WorkingTreeIterator.java:1589)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isEntryIgnored(WorkingTreeIterator.java:753)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isEntryIgnored(WorkingTreeIterator.java:713)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isEntryIgnored(WorkingTreeIterator.java:700)
	at org.eclipse.jgit.treewalk.filter.IndexDiffFilter.include(IndexDiffFilter.java:170)
	at org.eclipse.jgit.treewalk.filter.TreeFilter.matchFilter(TreeFilter.java:228)
	at org.eclipse.jgit.treewalk.filter.AndTreeFilter$List.matchFilter(AndTreeFilter.java:190)
	at org.eclipse.jgit.treewalk.TreeWalk.next(TreeWalk.java:853)
	at org.eclipse.jgit.lib.IndexDiff.diff(IndexDiff.java:446)
	at org.eclipse.egit.core.internal.indexdiff.IndexDiffCacheEntry.calcIndexDiffDataIncremental(IndexDiffCacheEntry.java:625)
	at org.eclipse.egit.core.internal.indexdiff.IndexDiffCacheEntry.access$13(IndexDiffCacheEntry.java:604)
	at org.eclipse.egit.core.internal.indexdiff.IndexDiffCacheEntry$5.updateIndexDiff(IndexDiffCacheEntry.java:550)
	at org.eclipse.egit.core.internal.indexdiff.IndexDiffUpdateJob.run(IndexDiffUpdateJob.java:77)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-06 10:18:57.105
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-06 10:18:57.107
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 4 0 2020-05-06 10:19:19.279
!MESSAGE Not closed bracket?
!STACK 0
org.eclipse.jgit.errors.InvalidPatternException: Not closed bracket?
	at org.eclipse.jgit.ignore.internal.Strings.convertGlob(Strings.java:444)
	at org.eclipse.jgit.ignore.internal.WildCardMatcher.<init>(WildCardMatcher.java:64)
	at org.eclipse.jgit.ignore.internal.PathMatcher.createNameMatcher0(PathMatcher.java:178)
	at org.eclipse.jgit.ignore.internal.PathMatcher.createMatchers(PathMatcher.java:99)
	at org.eclipse.jgit.ignore.internal.PathMatcher.<init>(PathMatcher.java:84)
	at org.eclipse.jgit.ignore.internal.PathMatcher.createPathMatcher(PathMatcher.java:135)
	at org.eclipse.jgit.ignore.FastIgnoreRule.<init>(FastIgnoreRule.java:129)
	at org.eclipse.jgit.ignore.IgnoreNode.parse(IgnoreNode.java:115)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator$PerDirectoryIgnoreNode.load(WorkingTreeIterator.java:1346)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator$RootIgnoreNode.load(WorkingTreeIterator.java:1365)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.getIgnoreNode(WorkingTreeIterator.java:771)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isDirectoryIgnored(WorkingTreeIterator.java:1611)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isDirectoryIgnored(WorkingTreeIterator.java:1589)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isEntryIgnored(WorkingTreeIterator.java:753)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isEntryIgnored(WorkingTreeIterator.java:713)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isEntryIgnored(WorkingTreeIterator.java:700)
	at org.eclipse.jgit.treewalk.filter.IndexDiffFilter.include(IndexDiffFilter.java:170)
	at org.eclipse.jgit.treewalk.filter.TreeFilter.matchFilter(TreeFilter.java:228)
	at org.eclipse.jgit.treewalk.filter.AndTreeFilter$List.matchFilter(AndTreeFilter.java:190)
	at org.eclipse.jgit.treewalk.TreeWalk.next(TreeWalk.java:853)
	at org.eclipse.jgit.lib.IndexDiff.diff(IndexDiff.java:446)
	at org.eclipse.egit.core.internal.indexdiff.IndexDiffCacheEntry.calcIndexDiffDataIncremental(IndexDiffCacheEntry.java:625)
	at org.eclipse.egit.core.internal.indexdiff.IndexDiffCacheEntry.access$13(IndexDiffCacheEntry.java:604)
	at org.eclipse.egit.core.internal.indexdiff.IndexDiffCacheEntry$5.updateIndexDiff(IndexDiffCacheEntry.java:550)
	at org.eclipse.egit.core.internal.indexdiff.IndexDiffUpdateJob.run(IndexDiffUpdateJob.java:77)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-06 10:19:19.332
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-06 10:19:19.333
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 4 0 2020-05-06 10:19:25.785
!MESSAGE Not closed bracket?
!STACK 0
org.eclipse.jgit.errors.InvalidPatternException: Not closed bracket?
	at org.eclipse.jgit.ignore.internal.Strings.convertGlob(Strings.java:444)
	at org.eclipse.jgit.ignore.internal.WildCardMatcher.<init>(WildCardMatcher.java:64)
	at org.eclipse.jgit.ignore.internal.PathMatcher.createNameMatcher0(PathMatcher.java:178)
	at org.eclipse.jgit.ignore.internal.PathMatcher.createMatchers(PathMatcher.java:99)
	at org.eclipse.jgit.ignore.internal.PathMatcher.<init>(PathMatcher.java:84)
	at org.eclipse.jgit.ignore.internal.PathMatcher.createPathMatcher(PathMatcher.java:135)
	at org.eclipse.jgit.ignore.FastIgnoreRule.<init>(FastIgnoreRule.java:129)
	at org.eclipse.jgit.ignore.IgnoreNode.parse(IgnoreNode.java:115)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator$PerDirectoryIgnoreNode.load(WorkingTreeIterator.java:1346)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator$RootIgnoreNode.load(WorkingTreeIterator.java:1365)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.getIgnoreNode(WorkingTreeIterator.java:771)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isDirectoryIgnored(WorkingTreeIterator.java:1611)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isDirectoryIgnored(WorkingTreeIterator.java:1589)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isEntryIgnored(WorkingTreeIterator.java:753)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isEntryIgnored(WorkingTreeIterator.java:713)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isEntryIgnored(WorkingTreeIterator.java:700)
	at org.eclipse.jgit.treewalk.filter.IndexDiffFilter.include(IndexDiffFilter.java:170)
	at org.eclipse.jgit.treewalk.filter.TreeFilter.matchFilter(TreeFilter.java:228)
	at org.eclipse.jgit.treewalk.filter.AndTreeFilter$List.matchFilter(AndTreeFilter.java:190)
	at org.eclipse.jgit.treewalk.TreeWalk.next(TreeWalk.java:853)
	at org.eclipse.jgit.lib.IndexDiff.diff(IndexDiff.java:446)
	at org.eclipse.egit.core.internal.indexdiff.IndexDiffCacheEntry.calcIndexDiffDataIncremental(IndexDiffCacheEntry.java:625)
	at org.eclipse.egit.core.internal.indexdiff.IndexDiffCacheEntry.access$13(IndexDiffCacheEntry.java:604)
	at org.eclipse.egit.core.internal.indexdiff.IndexDiffCacheEntry$5.updateIndexDiff(IndexDiffCacheEntry.java:550)
	at org.eclipse.egit.core.internal.indexdiff.IndexDiffUpdateJob.run(IndexDiffUpdateJob.java:77)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-06 10:19:25.886
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-06 10:19:25.888
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 4 0 2020-05-06 10:19:41.970
!MESSAGE Not closed bracket?
!STACK 0
org.eclipse.jgit.errors.InvalidPatternException: Not closed bracket?
	at org.eclipse.jgit.ignore.internal.Strings.convertGlob(Strings.java:444)
	at org.eclipse.jgit.ignore.internal.WildCardMatcher.<init>(WildCardMatcher.java:64)
	at org.eclipse.jgit.ignore.internal.PathMatcher.createNameMatcher0(PathMatcher.java:178)
	at org.eclipse.jgit.ignore.internal.PathMatcher.createMatchers(PathMatcher.java:99)
	at org.eclipse.jgit.ignore.internal.PathMatcher.<init>(PathMatcher.java:84)
	at org.eclipse.jgit.ignore.internal.PathMatcher.createPathMatcher(PathMatcher.java:135)
	at org.eclipse.jgit.ignore.FastIgnoreRule.<init>(FastIgnoreRule.java:129)
	at org.eclipse.jgit.ignore.IgnoreNode.parse(IgnoreNode.java:115)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator$PerDirectoryIgnoreNode.load(WorkingTreeIterator.java:1346)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator$RootIgnoreNode.load(WorkingTreeIterator.java:1365)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.getIgnoreNode(WorkingTreeIterator.java:771)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isDirectoryIgnored(WorkingTreeIterator.java:1611)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isDirectoryIgnored(WorkingTreeIterator.java:1589)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isEntryIgnored(WorkingTreeIterator.java:753)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isEntryIgnored(WorkingTreeIterator.java:713)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isEntryIgnored(WorkingTreeIterator.java:700)
	at org.eclipse.jgit.treewalk.filter.IndexDiffFilter.include(IndexDiffFilter.java:170)
	at org.eclipse.jgit.treewalk.filter.TreeFilter.matchFilter(TreeFilter.java:228)
	at org.eclipse.jgit.treewalk.filter.AndTreeFilter$List.matchFilter(AndTreeFilter.java:190)
	at org.eclipse.jgit.treewalk.TreeWalk.next(TreeWalk.java:853)
	at org.eclipse.jgit.lib.IndexDiff.diff(IndexDiff.java:446)
	at org.eclipse.egit.core.internal.indexdiff.IndexDiffCacheEntry.calcIndexDiffDataIncremental(IndexDiffCacheEntry.java:625)
	at org.eclipse.egit.core.internal.indexdiff.IndexDiffCacheEntry.access$13(IndexDiffCacheEntry.java:604)
	at org.eclipse.egit.core.internal.indexdiff.IndexDiffCacheEntry$5.updateIndexDiff(IndexDiffCacheEntry.java:550)
	at org.eclipse.egit.core.internal.indexdiff.IndexDiffUpdateJob.run(IndexDiffUpdateJob.java:77)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-06 10:19:42.132
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-06 10:19:42.134
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 4 0 2020-05-06 10:19:59.914
!MESSAGE Not closed bracket?
!STACK 0
org.eclipse.jgit.errors.InvalidPatternException: Not closed bracket?
	at org.eclipse.jgit.ignore.internal.Strings.convertGlob(Strings.java:444)
	at org.eclipse.jgit.ignore.internal.WildCardMatcher.<init>(WildCardMatcher.java:64)
	at org.eclipse.jgit.ignore.internal.PathMatcher.createNameMatcher0(PathMatcher.java:178)
	at org.eclipse.jgit.ignore.internal.PathMatcher.createMatchers(PathMatcher.java:99)
	at org.eclipse.jgit.ignore.internal.PathMatcher.<init>(PathMatcher.java:84)
	at org.eclipse.jgit.ignore.internal.PathMatcher.createPathMatcher(PathMatcher.java:135)
	at org.eclipse.jgit.ignore.FastIgnoreRule.<init>(FastIgnoreRule.java:129)
	at org.eclipse.jgit.ignore.IgnoreNode.parse(IgnoreNode.java:115)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator$PerDirectoryIgnoreNode.load(WorkingTreeIterator.java:1346)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator$RootIgnoreNode.load(WorkingTreeIterator.java:1365)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.getIgnoreNode(WorkingTreeIterator.java:771)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isDirectoryIgnored(WorkingTreeIterator.java:1611)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isDirectoryIgnored(WorkingTreeIterator.java:1589)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isEntryIgnored(WorkingTreeIterator.java:753)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isEntryIgnored(WorkingTreeIterator.java:713)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isEntryIgnored(WorkingTreeIterator.java:700)
	at org.eclipse.jgit.treewalk.filter.IndexDiffFilter.include(IndexDiffFilter.java:170)
	at org.eclipse.jgit.treewalk.filter.TreeFilter.matchFilter(TreeFilter.java:228)
	at org.eclipse.jgit.treewalk.filter.AndTreeFilter$List.matchFilter(AndTreeFilter.java:190)
	at org.eclipse.jgit.treewalk.TreeWalk.next(TreeWalk.java:853)
	at org.eclipse.jgit.lib.IndexDiff.diff(IndexDiff.java:446)
	at org.eclipse.egit.core.internal.indexdiff.IndexDiffCacheEntry.calcIndexDiffDataIncremental(IndexDiffCacheEntry.java:625)
	at org.eclipse.egit.core.internal.indexdiff.IndexDiffCacheEntry.access$13(IndexDiffCacheEntry.java:604)
	at org.eclipse.egit.core.internal.indexdiff.IndexDiffCacheEntry$5.updateIndexDiff(IndexDiffCacheEntry.java:550)
	at org.eclipse.egit.core.internal.indexdiff.IndexDiffUpdateJob.run(IndexDiffUpdateJob.java:77)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-06 10:20:00.016
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-06 10:20:00.018
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 4 0 2020-05-06 10:20:49.835
!MESSAGE Not closed bracket?
!STACK 0
org.eclipse.jgit.errors.InvalidPatternException: Not closed bracket?
	at org.eclipse.jgit.ignore.internal.Strings.convertGlob(Strings.java:444)
	at org.eclipse.jgit.ignore.internal.WildCardMatcher.<init>(WildCardMatcher.java:64)
	at org.eclipse.jgit.ignore.internal.PathMatcher.createNameMatcher0(PathMatcher.java:178)
	at org.eclipse.jgit.ignore.internal.PathMatcher.createMatchers(PathMatcher.java:99)
	at org.eclipse.jgit.ignore.internal.PathMatcher.<init>(PathMatcher.java:84)
	at org.eclipse.jgit.ignore.internal.PathMatcher.createPathMatcher(PathMatcher.java:135)
	at org.eclipse.jgit.ignore.FastIgnoreRule.<init>(FastIgnoreRule.java:129)
	at org.eclipse.jgit.ignore.IgnoreNode.parse(IgnoreNode.java:115)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator$PerDirectoryIgnoreNode.load(WorkingTreeIterator.java:1346)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator$RootIgnoreNode.load(WorkingTreeIterator.java:1365)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.getIgnoreNode(WorkingTreeIterator.java:771)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isDirectoryIgnored(WorkingTreeIterator.java:1611)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isDirectoryIgnored(WorkingTreeIterator.java:1589)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isEntryIgnored(WorkingTreeIterator.java:753)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isEntryIgnored(WorkingTreeIterator.java:713)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isEntryIgnored(WorkingTreeIterator.java:700)
	at org.eclipse.jgit.treewalk.filter.IndexDiffFilter.include(IndexDiffFilter.java:170)
	at org.eclipse.jgit.treewalk.filter.TreeFilter.matchFilter(TreeFilter.java:228)
	at org.eclipse.jgit.treewalk.filter.AndTreeFilter$List.matchFilter(AndTreeFilter.java:190)
	at org.eclipse.jgit.treewalk.TreeWalk.next(TreeWalk.java:853)
	at org.eclipse.jgit.lib.IndexDiff.diff(IndexDiff.java:446)
	at org.eclipse.egit.core.internal.indexdiff.IndexDiffCacheEntry.calcIndexDiffDataIncremental(IndexDiffCacheEntry.java:625)
	at org.eclipse.egit.core.internal.indexdiff.IndexDiffCacheEntry.access$13(IndexDiffCacheEntry.java:604)
	at org.eclipse.egit.core.internal.indexdiff.IndexDiffCacheEntry$5.updateIndexDiff(IndexDiffCacheEntry.java:550)
	at org.eclipse.egit.core.internal.indexdiff.IndexDiffUpdateJob.run(IndexDiffUpdateJob.java:77)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-06 10:20:49.994
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-06 10:20:49.995
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 4 0 2020-05-06 10:23:08.752
!MESSAGE Not closed bracket?
!STACK 0
org.eclipse.jgit.errors.InvalidPatternException: Not closed bracket?
	at org.eclipse.jgit.ignore.internal.Strings.convertGlob(Strings.java:444)
	at org.eclipse.jgit.ignore.internal.WildCardMatcher.<init>(WildCardMatcher.java:64)
	at org.eclipse.jgit.ignore.internal.PathMatcher.createNameMatcher0(PathMatcher.java:178)
	at org.eclipse.jgit.ignore.internal.PathMatcher.createMatchers(PathMatcher.java:99)
	at org.eclipse.jgit.ignore.internal.PathMatcher.<init>(PathMatcher.java:84)
	at org.eclipse.jgit.ignore.internal.PathMatcher.createPathMatcher(PathMatcher.java:135)
	at org.eclipse.jgit.ignore.FastIgnoreRule.<init>(FastIgnoreRule.java:129)
	at org.eclipse.jgit.ignore.IgnoreNode.parse(IgnoreNode.java:115)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator$PerDirectoryIgnoreNode.load(WorkingTreeIterator.java:1346)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator$RootIgnoreNode.load(WorkingTreeIterator.java:1365)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.getIgnoreNode(WorkingTreeIterator.java:771)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isDirectoryIgnored(WorkingTreeIterator.java:1611)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isDirectoryIgnored(WorkingTreeIterator.java:1589)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isEntryIgnored(WorkingTreeIterator.java:753)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isEntryIgnored(WorkingTreeIterator.java:713)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isEntryIgnored(WorkingTreeIterator.java:700)
	at org.eclipse.jgit.treewalk.filter.IndexDiffFilter.include(IndexDiffFilter.java:170)
	at org.eclipse.jgit.treewalk.filter.TreeFilter.matchFilter(TreeFilter.java:228)
	at org.eclipse.jgit.treewalk.filter.AndTreeFilter$List.matchFilter(AndTreeFilter.java:190)
	at org.eclipse.jgit.treewalk.TreeWalk.next(TreeWalk.java:853)
	at org.eclipse.jgit.lib.IndexDiff.diff(IndexDiff.java:446)
	at org.eclipse.egit.core.internal.indexdiff.IndexDiffCacheEntry.calcIndexDiffDataIncremental(IndexDiffCacheEntry.java:625)
	at org.eclipse.egit.core.internal.indexdiff.IndexDiffCacheEntry.access$13(IndexDiffCacheEntry.java:604)
	at org.eclipse.egit.core.internal.indexdiff.IndexDiffCacheEntry$5.updateIndexDiff(IndexDiffCacheEntry.java:550)
	at org.eclipse.egit.core.internal.indexdiff.IndexDiffUpdateJob.run(IndexDiffUpdateJob.java:77)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-06 10:23:08.876
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-06 10:23:08.878
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 4 0 2020-05-06 10:23:08.881
!MESSAGE Not closed bracket?
!STACK 0
org.eclipse.jgit.errors.InvalidPatternException: Not closed bracket?
	at org.eclipse.jgit.ignore.internal.Strings.convertGlob(Strings.java:444)
	at org.eclipse.jgit.ignore.internal.WildCardMatcher.<init>(WildCardMatcher.java:64)
	at org.eclipse.jgit.ignore.internal.PathMatcher.createNameMatcher0(PathMatcher.java:178)
	at org.eclipse.jgit.ignore.internal.PathMatcher.createMatchers(PathMatcher.java:99)
	at org.eclipse.jgit.ignore.internal.PathMatcher.<init>(PathMatcher.java:84)
	at org.eclipse.jgit.ignore.internal.PathMatcher.createPathMatcher(PathMatcher.java:135)
	at org.eclipse.jgit.ignore.FastIgnoreRule.<init>(FastIgnoreRule.java:129)
	at org.eclipse.jgit.ignore.IgnoreNode.parse(IgnoreNode.java:115)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator$PerDirectoryIgnoreNode.load(WorkingTreeIterator.java:1346)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator$RootIgnoreNode.load(WorkingTreeIterator.java:1365)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.getIgnoreNode(WorkingTreeIterator.java:771)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isDirectoryIgnored(WorkingTreeIterator.java:1611)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isDirectoryIgnored(WorkingTreeIterator.java:1589)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isEntryIgnored(WorkingTreeIterator.java:753)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isEntryIgnored(WorkingTreeIterator.java:713)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isEntryIgnored(WorkingTreeIterator.java:700)
	at org.eclipse.jgit.treewalk.FileTreeIterator.createSubtreeIterator(FileTreeIterator.java:215)
	at org.eclipse.jgit.treewalk.AbstractTreeIterator.createSubtreeIterator(AbstractTreeIterator.java:594)
	at org.eclipse.jgit.treewalk.TreeWalk.enterSubtree(TreeWalk.java:1303)
	at org.eclipse.egit.core.RepositoryUtil.canBeAutoIgnored(RepositoryUtil.java:773)
	at org.eclipse.egit.core.Activator$IgnoreDerivedResources$1.visit(Activator.java:835)
	at org.eclipse.core.internal.events.ResourceDelta.accept(ResourceDelta.java:67)
	at org.eclipse.core.internal.events.ResourceDelta.accept(ResourceDelta.java:77)
	at org.eclipse.core.internal.events.ResourceDelta.accept(ResourceDelta.java:77)
	at org.eclipse.core.internal.events.ResourceDelta.accept(ResourceDelta.java:51)
	at org.eclipse.egit.core.Activator$IgnoreDerivedResources.resourceChanged(Activator.java:811)
	at org.eclipse.core.internal.events.NotificationManager$1.run(NotificationManager.java:305)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.core.internal.events.NotificationManager.notify(NotificationManager.java:295)
	at org.eclipse.core.internal.events.NotificationManager.broadcastChanges(NotificationManager.java:158)
	at org.eclipse.core.internal.resources.Workspace.broadcastPostChange(Workspace.java:379)
	at org.eclipse.core.internal.resources.Workspace.endOperation(Workspace.java:1502)
	at org.eclipse.core.internal.events.AutoBuildJob.doBuild(AutoBuildJob.java:169)
	at org.eclipse.core.internal.events.AutoBuildJob.run(AutoBuildJob.java:244)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.m2e.logback.appender 4 0 2020-05-06 10:23:08.996
!MESSAGE Not closed bracket?
!STACK 0
org.eclipse.jgit.errors.InvalidPatternException: Not closed bracket?
	at org.eclipse.jgit.ignore.internal.Strings.convertGlob(Strings.java:444)
	at org.eclipse.jgit.ignore.internal.WildCardMatcher.<init>(WildCardMatcher.java:64)
	at org.eclipse.jgit.ignore.internal.PathMatcher.createNameMatcher0(PathMatcher.java:178)
	at org.eclipse.jgit.ignore.internal.PathMatcher.createMatchers(PathMatcher.java:99)
	at org.eclipse.jgit.ignore.internal.PathMatcher.<init>(PathMatcher.java:84)
	at org.eclipse.jgit.ignore.internal.PathMatcher.createPathMatcher(PathMatcher.java:135)
	at org.eclipse.jgit.ignore.FastIgnoreRule.<init>(FastIgnoreRule.java:129)
	at org.eclipse.jgit.ignore.IgnoreNode.parse(IgnoreNode.java:115)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator$PerDirectoryIgnoreNode.load(WorkingTreeIterator.java:1346)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator$RootIgnoreNode.load(WorkingTreeIterator.java:1365)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.getIgnoreNode(WorkingTreeIterator.java:771)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isDirectoryIgnored(WorkingTreeIterator.java:1611)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isDirectoryIgnored(WorkingTreeIterator.java:1589)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isEntryIgnored(WorkingTreeIterator.java:753)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isEntryIgnored(WorkingTreeIterator.java:713)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isEntryIgnored(WorkingTreeIterator.java:700)
	at org.eclipse.jgit.treewalk.filter.IndexDiffFilter.include(IndexDiffFilter.java:170)
	at org.eclipse.jgit.treewalk.filter.TreeFilter.matchFilter(TreeFilter.java:228)
	at org.eclipse.jgit.treewalk.filter.AndTreeFilter$List.matchFilter(AndTreeFilter.java:190)
	at org.eclipse.jgit.treewalk.TreeWalk.next(TreeWalk.java:853)
	at org.eclipse.jgit.lib.IndexDiff.diff(IndexDiff.java:446)
	at org.eclipse.egit.core.internal.indexdiff.IndexDiffCacheEntry.calcIndexDiffDataIncremental(IndexDiffCacheEntry.java:625)
	at org.eclipse.egit.core.internal.indexdiff.IndexDiffCacheEntry.access$13(IndexDiffCacheEntry.java:604)
	at org.eclipse.egit.core.internal.indexdiff.IndexDiffCacheEntry$5.updateIndexDiff(IndexDiffCacheEntry.java:550)
	at org.eclipse.egit.core.internal.indexdiff.IndexDiffUpdateJob.run(IndexDiffUpdateJob.java:77)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.m2e.logback.appender 4 0 2020-05-06 10:23:40.639
!MESSAGE Not closed bracket?
!STACK 0
org.eclipse.jgit.errors.InvalidPatternException: Not closed bracket?
	at org.eclipse.jgit.ignore.internal.Strings.convertGlob(Strings.java:444)
	at org.eclipse.jgit.ignore.internal.WildCardMatcher.<init>(WildCardMatcher.java:64)
	at org.eclipse.jgit.ignore.internal.PathMatcher.createNameMatcher0(PathMatcher.java:178)
	at org.eclipse.jgit.ignore.internal.PathMatcher.createMatchers(PathMatcher.java:99)
	at org.eclipse.jgit.ignore.internal.PathMatcher.<init>(PathMatcher.java:84)
	at org.eclipse.jgit.ignore.internal.PathMatcher.createPathMatcher(PathMatcher.java:135)
	at org.eclipse.jgit.ignore.FastIgnoreRule.<init>(FastIgnoreRule.java:129)
	at org.eclipse.jgit.ignore.IgnoreNode.parse(IgnoreNode.java:115)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator$PerDirectoryIgnoreNode.load(WorkingTreeIterator.java:1346)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator$RootIgnoreNode.load(WorkingTreeIterator.java:1365)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.getIgnoreNode(WorkingTreeIterator.java:771)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isDirectoryIgnored(WorkingTreeIterator.java:1611)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isDirectoryIgnored(WorkingTreeIterator.java:1589)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isEntryIgnored(WorkingTreeIterator.java:753)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isEntryIgnored(WorkingTreeIterator.java:713)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isEntryIgnored(WorkingTreeIterator.java:700)
	at org.eclipse.jgit.treewalk.filter.IndexDiffFilter.include(IndexDiffFilter.java:170)
	at org.eclipse.jgit.treewalk.filter.TreeFilter.matchFilter(TreeFilter.java:228)
	at org.eclipse.jgit.treewalk.filter.AndTreeFilter$List.matchFilter(AndTreeFilter.java:190)
	at org.eclipse.jgit.treewalk.TreeWalk.next(TreeWalk.java:853)
	at org.eclipse.jgit.lib.IndexDiff.diff(IndexDiff.java:446)
	at org.eclipse.egit.core.internal.indexdiff.IndexDiffCacheEntry.calcIndexDiffDataIncremental(IndexDiffCacheEntry.java:625)
	at org.eclipse.egit.core.internal.indexdiff.IndexDiffCacheEntry.access$13(IndexDiffCacheEntry.java:604)
	at org.eclipse.egit.core.internal.indexdiff.IndexDiffCacheEntry$5.updateIndexDiff(IndexDiffCacheEntry.java:550)
	at org.eclipse.egit.core.internal.indexdiff.IndexDiffUpdateJob.run(IndexDiffUpdateJob.java:77)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-06 10:23:40.720
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-06 10:23:40.721
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 4 0 2020-05-06 10:23:40.724
!MESSAGE Not closed bracket?
!STACK 0
org.eclipse.jgit.errors.InvalidPatternException: Not closed bracket?
	at org.eclipse.jgit.ignore.internal.Strings.convertGlob(Strings.java:444)
	at org.eclipse.jgit.ignore.internal.WildCardMatcher.<init>(WildCardMatcher.java:64)
	at org.eclipse.jgit.ignore.internal.PathMatcher.createNameMatcher0(PathMatcher.java:178)
	at org.eclipse.jgit.ignore.internal.PathMatcher.createMatchers(PathMatcher.java:99)
	at org.eclipse.jgit.ignore.internal.PathMatcher.<init>(PathMatcher.java:84)
	at org.eclipse.jgit.ignore.internal.PathMatcher.createPathMatcher(PathMatcher.java:135)
	at org.eclipse.jgit.ignore.FastIgnoreRule.<init>(FastIgnoreRule.java:129)
	at org.eclipse.jgit.ignore.IgnoreNode.parse(IgnoreNode.java:115)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator$PerDirectoryIgnoreNode.load(WorkingTreeIterator.java:1346)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator$RootIgnoreNode.load(WorkingTreeIterator.java:1365)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.getIgnoreNode(WorkingTreeIterator.java:771)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isDirectoryIgnored(WorkingTreeIterator.java:1611)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isDirectoryIgnored(WorkingTreeIterator.java:1589)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isEntryIgnored(WorkingTreeIterator.java:753)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isEntryIgnored(WorkingTreeIterator.java:713)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isEntryIgnored(WorkingTreeIterator.java:700)
	at org.eclipse.jgit.treewalk.FileTreeIterator.createSubtreeIterator(FileTreeIterator.java:215)
	at org.eclipse.jgit.treewalk.AbstractTreeIterator.createSubtreeIterator(AbstractTreeIterator.java:594)
	at org.eclipse.jgit.treewalk.TreeWalk.enterSubtree(TreeWalk.java:1303)
	at org.eclipse.egit.core.RepositoryUtil.canBeAutoIgnored(RepositoryUtil.java:773)
	at org.eclipse.egit.core.Activator$IgnoreDerivedResources$1.visit(Activator.java:835)
	at org.eclipse.core.internal.events.ResourceDelta.accept(ResourceDelta.java:67)
	at org.eclipse.core.internal.events.ResourceDelta.accept(ResourceDelta.java:77)
	at org.eclipse.core.internal.events.ResourceDelta.accept(ResourceDelta.java:77)
	at org.eclipse.core.internal.events.ResourceDelta.accept(ResourceDelta.java:51)
	at org.eclipse.egit.core.Activator$IgnoreDerivedResources.resourceChanged(Activator.java:811)
	at org.eclipse.core.internal.events.NotificationManager$1.run(NotificationManager.java:305)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.core.internal.events.NotificationManager.notify(NotificationManager.java:295)
	at org.eclipse.core.internal.events.NotificationManager.broadcastChanges(NotificationManager.java:158)
	at org.eclipse.core.internal.resources.Workspace.broadcastPostChange(Workspace.java:379)
	at org.eclipse.core.internal.resources.Workspace.endOperation(Workspace.java:1502)
	at org.eclipse.core.internal.events.AutoBuildJob.doBuild(AutoBuildJob.java:169)
	at org.eclipse.core.internal.events.AutoBuildJob.run(AutoBuildJob.java:244)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.m2e.logback.appender 4 0 2020-05-06 10:23:40.822
!MESSAGE Not closed bracket?
!STACK 0
org.eclipse.jgit.errors.InvalidPatternException: Not closed bracket?
	at org.eclipse.jgit.ignore.internal.Strings.convertGlob(Strings.java:444)
	at org.eclipse.jgit.ignore.internal.WildCardMatcher.<init>(WildCardMatcher.java:64)
	at org.eclipse.jgit.ignore.internal.PathMatcher.createNameMatcher0(PathMatcher.java:178)
	at org.eclipse.jgit.ignore.internal.PathMatcher.createMatchers(PathMatcher.java:99)
	at org.eclipse.jgit.ignore.internal.PathMatcher.<init>(PathMatcher.java:84)
	at org.eclipse.jgit.ignore.internal.PathMatcher.createPathMatcher(PathMatcher.java:135)
	at org.eclipse.jgit.ignore.FastIgnoreRule.<init>(FastIgnoreRule.java:129)
	at org.eclipse.jgit.ignore.IgnoreNode.parse(IgnoreNode.java:115)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator$PerDirectoryIgnoreNode.load(WorkingTreeIterator.java:1346)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator$RootIgnoreNode.load(WorkingTreeIterator.java:1365)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.getIgnoreNode(WorkingTreeIterator.java:771)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isDirectoryIgnored(WorkingTreeIterator.java:1611)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isDirectoryIgnored(WorkingTreeIterator.java:1589)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isEntryIgnored(WorkingTreeIterator.java:753)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isEntryIgnored(WorkingTreeIterator.java:713)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isEntryIgnored(WorkingTreeIterator.java:700)
	at org.eclipse.jgit.treewalk.filter.IndexDiffFilter.include(IndexDiffFilter.java:170)
	at org.eclipse.jgit.treewalk.filter.TreeFilter.matchFilter(TreeFilter.java:228)
	at org.eclipse.jgit.treewalk.filter.AndTreeFilter$List.matchFilter(AndTreeFilter.java:190)
	at org.eclipse.jgit.treewalk.TreeWalk.next(TreeWalk.java:853)
	at org.eclipse.jgit.lib.IndexDiff.diff(IndexDiff.java:446)
	at org.eclipse.egit.core.internal.indexdiff.IndexDiffCacheEntry.calcIndexDiffDataIncremental(IndexDiffCacheEntry.java:625)
	at org.eclipse.egit.core.internal.indexdiff.IndexDiffCacheEntry.access$13(IndexDiffCacheEntry.java:604)
	at org.eclipse.egit.core.internal.indexdiff.IndexDiffCacheEntry$5.updateIndexDiff(IndexDiffCacheEntry.java:550)
	at org.eclipse.egit.core.internal.indexdiff.IndexDiffUpdateJob.run(IndexDiffUpdateJob.java:77)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.m2e.logback.appender 4 0 2020-05-06 10:33:35.599
!MESSAGE Not closed bracket?
!STACK 0
org.eclipse.jgit.errors.InvalidPatternException: Not closed bracket?
	at org.eclipse.jgit.ignore.internal.Strings.convertGlob(Strings.java:444)
	at org.eclipse.jgit.ignore.internal.WildCardMatcher.<init>(WildCardMatcher.java:64)
	at org.eclipse.jgit.ignore.internal.PathMatcher.createNameMatcher0(PathMatcher.java:178)
	at org.eclipse.jgit.ignore.internal.PathMatcher.createMatchers(PathMatcher.java:99)
	at org.eclipse.jgit.ignore.internal.PathMatcher.<init>(PathMatcher.java:84)
	at org.eclipse.jgit.ignore.internal.PathMatcher.createPathMatcher(PathMatcher.java:135)
	at org.eclipse.jgit.ignore.FastIgnoreRule.<init>(FastIgnoreRule.java:129)
	at org.eclipse.jgit.ignore.IgnoreNode.parse(IgnoreNode.java:115)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator$PerDirectoryIgnoreNode.load(WorkingTreeIterator.java:1346)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator$RootIgnoreNode.load(WorkingTreeIterator.java:1365)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.getIgnoreNode(WorkingTreeIterator.java:771)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isDirectoryIgnored(WorkingTreeIterator.java:1611)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isDirectoryIgnored(WorkingTreeIterator.java:1589)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isEntryIgnored(WorkingTreeIterator.java:753)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isEntryIgnored(WorkingTreeIterator.java:713)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isEntryIgnored(WorkingTreeIterator.java:700)
	at org.eclipse.jgit.treewalk.filter.IndexDiffFilter.include(IndexDiffFilter.java:170)
	at org.eclipse.jgit.treewalk.filter.TreeFilter.matchFilter(TreeFilter.java:228)
	at org.eclipse.jgit.treewalk.filter.AndTreeFilter$List.matchFilter(AndTreeFilter.java:190)
	at org.eclipse.jgit.treewalk.TreeWalk.next(TreeWalk.java:853)
	at org.eclipse.jgit.lib.IndexDiff.diff(IndexDiff.java:446)
	at org.eclipse.egit.core.internal.indexdiff.IndexDiffCacheEntry.calcIndexDiffDataIncremental(IndexDiffCacheEntry.java:625)
	at org.eclipse.egit.core.internal.indexdiff.IndexDiffCacheEntry.access$13(IndexDiffCacheEntry.java:604)
	at org.eclipse.egit.core.internal.indexdiff.IndexDiffCacheEntry$5.updateIndexDiff(IndexDiffCacheEntry.java:550)
	at org.eclipse.egit.core.internal.indexdiff.IndexDiffUpdateJob.run(IndexDiffUpdateJob.java:77)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-06 10:33:35.720
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-06 10:33:35.722
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 4 0 2020-05-06 10:33:35.725
!MESSAGE Not closed bracket?
!STACK 0
org.eclipse.jgit.errors.InvalidPatternException: Not closed bracket?
	at org.eclipse.jgit.ignore.internal.Strings.convertGlob(Strings.java:444)
	at org.eclipse.jgit.ignore.internal.WildCardMatcher.<init>(WildCardMatcher.java:64)
	at org.eclipse.jgit.ignore.internal.PathMatcher.createNameMatcher0(PathMatcher.java:178)
	at org.eclipse.jgit.ignore.internal.PathMatcher.createMatchers(PathMatcher.java:99)
	at org.eclipse.jgit.ignore.internal.PathMatcher.<init>(PathMatcher.java:84)
	at org.eclipse.jgit.ignore.internal.PathMatcher.createPathMatcher(PathMatcher.java:135)
	at org.eclipse.jgit.ignore.FastIgnoreRule.<init>(FastIgnoreRule.java:129)
	at org.eclipse.jgit.ignore.IgnoreNode.parse(IgnoreNode.java:115)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator$PerDirectoryIgnoreNode.load(WorkingTreeIterator.java:1346)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator$RootIgnoreNode.load(WorkingTreeIterator.java:1365)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.getIgnoreNode(WorkingTreeIterator.java:771)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isDirectoryIgnored(WorkingTreeIterator.java:1611)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isDirectoryIgnored(WorkingTreeIterator.java:1589)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isEntryIgnored(WorkingTreeIterator.java:753)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isEntryIgnored(WorkingTreeIterator.java:713)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isEntryIgnored(WorkingTreeIterator.java:700)
	at org.eclipse.jgit.treewalk.FileTreeIterator.createSubtreeIterator(FileTreeIterator.java:215)
	at org.eclipse.jgit.treewalk.AbstractTreeIterator.createSubtreeIterator(AbstractTreeIterator.java:594)
	at org.eclipse.jgit.treewalk.TreeWalk.enterSubtree(TreeWalk.java:1303)
	at org.eclipse.egit.core.RepositoryUtil.canBeAutoIgnored(RepositoryUtil.java:773)
	at org.eclipse.egit.core.Activator$IgnoreDerivedResources$1.visit(Activator.java:835)
	at org.eclipse.core.internal.events.ResourceDelta.accept(ResourceDelta.java:67)
	at org.eclipse.core.internal.events.ResourceDelta.accept(ResourceDelta.java:77)
	at org.eclipse.core.internal.events.ResourceDelta.accept(ResourceDelta.java:77)
	at org.eclipse.core.internal.events.ResourceDelta.accept(ResourceDelta.java:51)
	at org.eclipse.egit.core.Activator$IgnoreDerivedResources.resourceChanged(Activator.java:811)
	at org.eclipse.core.internal.events.NotificationManager$1.run(NotificationManager.java:305)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.core.internal.events.NotificationManager.notify(NotificationManager.java:295)
	at org.eclipse.core.internal.events.NotificationManager.broadcastChanges(NotificationManager.java:158)
	at org.eclipse.core.internal.resources.Workspace.broadcastPostChange(Workspace.java:379)
	at org.eclipse.core.internal.resources.Workspace.endOperation(Workspace.java:1502)
	at org.eclipse.core.internal.events.AutoBuildJob.doBuild(AutoBuildJob.java:169)
	at org.eclipse.core.internal.events.AutoBuildJob.run(AutoBuildJob.java:244)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.m2e.logback.appender 4 0 2020-05-06 10:33:35.819
!MESSAGE Not closed bracket?
!STACK 0
org.eclipse.jgit.errors.InvalidPatternException: Not closed bracket?
	at org.eclipse.jgit.ignore.internal.Strings.convertGlob(Strings.java:444)
	at org.eclipse.jgit.ignore.internal.WildCardMatcher.<init>(WildCardMatcher.java:64)
	at org.eclipse.jgit.ignore.internal.PathMatcher.createNameMatcher0(PathMatcher.java:178)
	at org.eclipse.jgit.ignore.internal.PathMatcher.createMatchers(PathMatcher.java:99)
	at org.eclipse.jgit.ignore.internal.PathMatcher.<init>(PathMatcher.java:84)
	at org.eclipse.jgit.ignore.internal.PathMatcher.createPathMatcher(PathMatcher.java:135)
	at org.eclipse.jgit.ignore.FastIgnoreRule.<init>(FastIgnoreRule.java:129)
	at org.eclipse.jgit.ignore.IgnoreNode.parse(IgnoreNode.java:115)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator$PerDirectoryIgnoreNode.load(WorkingTreeIterator.java:1346)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator$RootIgnoreNode.load(WorkingTreeIterator.java:1365)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.getIgnoreNode(WorkingTreeIterator.java:771)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isDirectoryIgnored(WorkingTreeIterator.java:1611)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isDirectoryIgnored(WorkingTreeIterator.java:1589)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isEntryIgnored(WorkingTreeIterator.java:753)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isEntryIgnored(WorkingTreeIterator.java:713)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isEntryIgnored(WorkingTreeIterator.java:700)
	at org.eclipse.jgit.treewalk.filter.IndexDiffFilter.include(IndexDiffFilter.java:170)
	at org.eclipse.jgit.treewalk.filter.TreeFilter.matchFilter(TreeFilter.java:228)
	at org.eclipse.jgit.treewalk.filter.AndTreeFilter$List.matchFilter(AndTreeFilter.java:190)
	at org.eclipse.jgit.treewalk.TreeWalk.next(TreeWalk.java:853)
	at org.eclipse.jgit.lib.IndexDiff.diff(IndexDiff.java:446)
	at org.eclipse.egit.core.internal.indexdiff.IndexDiffCacheEntry.calcIndexDiffDataIncremental(IndexDiffCacheEntry.java:625)
	at org.eclipse.egit.core.internal.indexdiff.IndexDiffCacheEntry.access$13(IndexDiffCacheEntry.java:604)
	at org.eclipse.egit.core.internal.indexdiff.IndexDiffCacheEntry$5.updateIndexDiff(IndexDiffCacheEntry.java:550)
	at org.eclipse.egit.core.internal.indexdiff.IndexDiffUpdateJob.run(IndexDiffUpdateJob.java:77)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.m2e.logback.appender 4 0 2020-05-06 10:34:00.695
!MESSAGE Not closed bracket?
!STACK 0
org.eclipse.jgit.errors.InvalidPatternException: Not closed bracket?
	at org.eclipse.jgit.ignore.internal.Strings.convertGlob(Strings.java:444)
	at org.eclipse.jgit.ignore.internal.WildCardMatcher.<init>(WildCardMatcher.java:64)
	at org.eclipse.jgit.ignore.internal.PathMatcher.createNameMatcher0(PathMatcher.java:178)
	at org.eclipse.jgit.ignore.internal.PathMatcher.createMatchers(PathMatcher.java:99)
	at org.eclipse.jgit.ignore.internal.PathMatcher.<init>(PathMatcher.java:84)
	at org.eclipse.jgit.ignore.internal.PathMatcher.createPathMatcher(PathMatcher.java:135)
	at org.eclipse.jgit.ignore.FastIgnoreRule.<init>(FastIgnoreRule.java:129)
	at org.eclipse.jgit.ignore.IgnoreNode.parse(IgnoreNode.java:115)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator$PerDirectoryIgnoreNode.load(WorkingTreeIterator.java:1346)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator$RootIgnoreNode.load(WorkingTreeIterator.java:1365)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.getIgnoreNode(WorkingTreeIterator.java:771)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isDirectoryIgnored(WorkingTreeIterator.java:1611)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isDirectoryIgnored(WorkingTreeIterator.java:1589)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isEntryIgnored(WorkingTreeIterator.java:753)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isEntryIgnored(WorkingTreeIterator.java:713)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isEntryIgnored(WorkingTreeIterator.java:700)
	at org.eclipse.jgit.treewalk.filter.IndexDiffFilter.include(IndexDiffFilter.java:170)
	at org.eclipse.jgit.treewalk.filter.TreeFilter.matchFilter(TreeFilter.java:228)
	at org.eclipse.jgit.treewalk.filter.AndTreeFilter$List.matchFilter(AndTreeFilter.java:190)
	at org.eclipse.jgit.treewalk.TreeWalk.next(TreeWalk.java:853)
	at org.eclipse.jgit.lib.IndexDiff.diff(IndexDiff.java:446)
	at org.eclipse.egit.core.internal.indexdiff.IndexDiffCacheEntry.calcIndexDiffDataIncremental(IndexDiffCacheEntry.java:625)
	at org.eclipse.egit.core.internal.indexdiff.IndexDiffCacheEntry.access$13(IndexDiffCacheEntry.java:604)
	at org.eclipse.egit.core.internal.indexdiff.IndexDiffCacheEntry$5.updateIndexDiff(IndexDiffCacheEntry.java:550)
	at org.eclipse.egit.core.internal.indexdiff.IndexDiffUpdateJob.run(IndexDiffUpdateJob.java:77)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-06 10:34:00.817
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-06 10:34:00.818
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 4 0 2020-05-06 10:34:00.821
!MESSAGE Not closed bracket?
!STACK 0
org.eclipse.jgit.errors.InvalidPatternException: Not closed bracket?
	at org.eclipse.jgit.ignore.internal.Strings.convertGlob(Strings.java:444)
	at org.eclipse.jgit.ignore.internal.WildCardMatcher.<init>(WildCardMatcher.java:64)
	at org.eclipse.jgit.ignore.internal.PathMatcher.createNameMatcher0(PathMatcher.java:178)
	at org.eclipse.jgit.ignore.internal.PathMatcher.createMatchers(PathMatcher.java:99)
	at org.eclipse.jgit.ignore.internal.PathMatcher.<init>(PathMatcher.java:84)
	at org.eclipse.jgit.ignore.internal.PathMatcher.createPathMatcher(PathMatcher.java:135)
	at org.eclipse.jgit.ignore.FastIgnoreRule.<init>(FastIgnoreRule.java:129)
	at org.eclipse.jgit.ignore.IgnoreNode.parse(IgnoreNode.java:115)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator$PerDirectoryIgnoreNode.load(WorkingTreeIterator.java:1346)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator$RootIgnoreNode.load(WorkingTreeIterator.java:1365)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.getIgnoreNode(WorkingTreeIterator.java:771)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isDirectoryIgnored(WorkingTreeIterator.java:1611)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isDirectoryIgnored(WorkingTreeIterator.java:1589)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isEntryIgnored(WorkingTreeIterator.java:753)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isEntryIgnored(WorkingTreeIterator.java:713)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isEntryIgnored(WorkingTreeIterator.java:700)
	at org.eclipse.jgit.treewalk.FileTreeIterator.createSubtreeIterator(FileTreeIterator.java:215)
	at org.eclipse.jgit.treewalk.AbstractTreeIterator.createSubtreeIterator(AbstractTreeIterator.java:594)
	at org.eclipse.jgit.treewalk.TreeWalk.enterSubtree(TreeWalk.java:1303)
	at org.eclipse.egit.core.RepositoryUtil.canBeAutoIgnored(RepositoryUtil.java:773)
	at org.eclipse.egit.core.Activator$IgnoreDerivedResources$1.visit(Activator.java:835)
	at org.eclipse.core.internal.events.ResourceDelta.accept(ResourceDelta.java:67)
	at org.eclipse.core.internal.events.ResourceDelta.accept(ResourceDelta.java:77)
	at org.eclipse.core.internal.events.ResourceDelta.accept(ResourceDelta.java:77)
	at org.eclipse.core.internal.events.ResourceDelta.accept(ResourceDelta.java:51)
	at org.eclipse.egit.core.Activator$IgnoreDerivedResources.resourceChanged(Activator.java:811)
	at org.eclipse.core.internal.events.NotificationManager$1.run(NotificationManager.java:305)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.core.internal.events.NotificationManager.notify(NotificationManager.java:295)
	at org.eclipse.core.internal.events.NotificationManager.broadcastChanges(NotificationManager.java:158)
	at org.eclipse.core.internal.resources.Workspace.broadcastPostChange(Workspace.java:379)
	at org.eclipse.core.internal.resources.Workspace.endOperation(Workspace.java:1502)
	at org.eclipse.core.internal.events.AutoBuildJob.doBuild(AutoBuildJob.java:169)
	at org.eclipse.core.internal.events.AutoBuildJob.run(AutoBuildJob.java:244)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.m2e.logback.appender 4 0 2020-05-06 10:34:00.931
!MESSAGE Not closed bracket?
!STACK 0
org.eclipse.jgit.errors.InvalidPatternException: Not closed bracket?
	at org.eclipse.jgit.ignore.internal.Strings.convertGlob(Strings.java:444)
	at org.eclipse.jgit.ignore.internal.WildCardMatcher.<init>(WildCardMatcher.java:64)
	at org.eclipse.jgit.ignore.internal.PathMatcher.createNameMatcher0(PathMatcher.java:178)
	at org.eclipse.jgit.ignore.internal.PathMatcher.createMatchers(PathMatcher.java:99)
	at org.eclipse.jgit.ignore.internal.PathMatcher.<init>(PathMatcher.java:84)
	at org.eclipse.jgit.ignore.internal.PathMatcher.createPathMatcher(PathMatcher.java:135)
	at org.eclipse.jgit.ignore.FastIgnoreRule.<init>(FastIgnoreRule.java:129)
	at org.eclipse.jgit.ignore.IgnoreNode.parse(IgnoreNode.java:115)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator$PerDirectoryIgnoreNode.load(WorkingTreeIterator.java:1346)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator$RootIgnoreNode.load(WorkingTreeIterator.java:1365)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.getIgnoreNode(WorkingTreeIterator.java:771)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isDirectoryIgnored(WorkingTreeIterator.java:1611)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isDirectoryIgnored(WorkingTreeIterator.java:1589)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isEntryIgnored(WorkingTreeIterator.java:753)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isEntryIgnored(WorkingTreeIterator.java:713)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isEntryIgnored(WorkingTreeIterator.java:700)
	at org.eclipse.jgit.treewalk.filter.IndexDiffFilter.include(IndexDiffFilter.java:170)
	at org.eclipse.jgit.treewalk.filter.TreeFilter.matchFilter(TreeFilter.java:228)
	at org.eclipse.jgit.treewalk.filter.AndTreeFilter$List.matchFilter(AndTreeFilter.java:190)
	at org.eclipse.jgit.treewalk.TreeWalk.next(TreeWalk.java:853)
	at org.eclipse.jgit.lib.IndexDiff.diff(IndexDiff.java:446)
	at org.eclipse.egit.core.internal.indexdiff.IndexDiffCacheEntry.calcIndexDiffDataIncremental(IndexDiffCacheEntry.java:625)
	at org.eclipse.egit.core.internal.indexdiff.IndexDiffCacheEntry.access$13(IndexDiffCacheEntry.java:604)
	at org.eclipse.egit.core.internal.indexdiff.IndexDiffCacheEntry$5.updateIndexDiff(IndexDiffCacheEntry.java:550)
	at org.eclipse.egit.core.internal.indexdiff.IndexDiffUpdateJob.run(IndexDiffUpdateJob.java:77)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.m2e.logback.appender 4 0 2020-05-06 10:44:13.081
!MESSAGE Not closed bracket?
!STACK 0
org.eclipse.jgit.errors.InvalidPatternException: Not closed bracket?
	at org.eclipse.jgit.ignore.internal.Strings.convertGlob(Strings.java:444)
	at org.eclipse.jgit.ignore.internal.WildCardMatcher.<init>(WildCardMatcher.java:64)
	at org.eclipse.jgit.ignore.internal.PathMatcher.createNameMatcher0(PathMatcher.java:178)
	at org.eclipse.jgit.ignore.internal.PathMatcher.createMatchers(PathMatcher.java:99)
	at org.eclipse.jgit.ignore.internal.PathMatcher.<init>(PathMatcher.java:84)
	at org.eclipse.jgit.ignore.internal.PathMatcher.createPathMatcher(PathMatcher.java:135)
	at org.eclipse.jgit.ignore.FastIgnoreRule.<init>(FastIgnoreRule.java:129)
	at org.eclipse.jgit.ignore.IgnoreNode.parse(IgnoreNode.java:115)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator$PerDirectoryIgnoreNode.load(WorkingTreeIterator.java:1346)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator$RootIgnoreNode.load(WorkingTreeIterator.java:1365)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.getIgnoreNode(WorkingTreeIterator.java:771)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isDirectoryIgnored(WorkingTreeIterator.java:1611)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isDirectoryIgnored(WorkingTreeIterator.java:1589)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isEntryIgnored(WorkingTreeIterator.java:753)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isEntryIgnored(WorkingTreeIterator.java:713)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isEntryIgnored(WorkingTreeIterator.java:700)
	at org.eclipse.jgit.treewalk.filter.IndexDiffFilter.include(IndexDiffFilter.java:170)
	at org.eclipse.jgit.treewalk.filter.TreeFilter.matchFilter(TreeFilter.java:228)
	at org.eclipse.jgit.treewalk.filter.AndTreeFilter$List.matchFilter(AndTreeFilter.java:190)
	at org.eclipse.jgit.treewalk.TreeWalk.next(TreeWalk.java:853)
	at org.eclipse.jgit.lib.IndexDiff.diff(IndexDiff.java:446)
	at org.eclipse.egit.core.internal.indexdiff.IndexDiffCacheEntry.calcIndexDiffDataIncremental(IndexDiffCacheEntry.java:625)
	at org.eclipse.egit.core.internal.indexdiff.IndexDiffCacheEntry.access$13(IndexDiffCacheEntry.java:604)
	at org.eclipse.egit.core.internal.indexdiff.IndexDiffCacheEntry$5.updateIndexDiff(IndexDiffCacheEntry.java:550)
	at org.eclipse.egit.core.internal.indexdiff.IndexDiffUpdateJob.run(IndexDiffUpdateJob.java:77)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-06 10:44:13.201
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-06 10:44:13.203
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 4 0 2020-05-06 10:44:13.206
!MESSAGE Not closed bracket?
!STACK 0
org.eclipse.jgit.errors.InvalidPatternException: Not closed bracket?
	at org.eclipse.jgit.ignore.internal.Strings.convertGlob(Strings.java:444)
	at org.eclipse.jgit.ignore.internal.WildCardMatcher.<init>(WildCardMatcher.java:64)
	at org.eclipse.jgit.ignore.internal.PathMatcher.createNameMatcher0(PathMatcher.java:178)
	at org.eclipse.jgit.ignore.internal.PathMatcher.createMatchers(PathMatcher.java:99)
	at org.eclipse.jgit.ignore.internal.PathMatcher.<init>(PathMatcher.java:84)
	at org.eclipse.jgit.ignore.internal.PathMatcher.createPathMatcher(PathMatcher.java:135)
	at org.eclipse.jgit.ignore.FastIgnoreRule.<init>(FastIgnoreRule.java:129)
	at org.eclipse.jgit.ignore.IgnoreNode.parse(IgnoreNode.java:115)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator$PerDirectoryIgnoreNode.load(WorkingTreeIterator.java:1346)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator$RootIgnoreNode.load(WorkingTreeIterator.java:1365)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.getIgnoreNode(WorkingTreeIterator.java:771)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isDirectoryIgnored(WorkingTreeIterator.java:1611)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isDirectoryIgnored(WorkingTreeIterator.java:1589)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isEntryIgnored(WorkingTreeIterator.java:753)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isEntryIgnored(WorkingTreeIterator.java:713)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isEntryIgnored(WorkingTreeIterator.java:700)
	at org.eclipse.jgit.treewalk.FileTreeIterator.createSubtreeIterator(FileTreeIterator.java:215)
	at org.eclipse.jgit.treewalk.AbstractTreeIterator.createSubtreeIterator(AbstractTreeIterator.java:594)
	at org.eclipse.jgit.treewalk.TreeWalk.enterSubtree(TreeWalk.java:1303)
	at org.eclipse.egit.core.RepositoryUtil.canBeAutoIgnored(RepositoryUtil.java:773)
	at org.eclipse.egit.core.Activator$IgnoreDerivedResources$1.visit(Activator.java:835)
	at org.eclipse.core.internal.events.ResourceDelta.accept(ResourceDelta.java:67)
	at org.eclipse.core.internal.events.ResourceDelta.accept(ResourceDelta.java:77)
	at org.eclipse.core.internal.events.ResourceDelta.accept(ResourceDelta.java:77)
	at org.eclipse.core.internal.events.ResourceDelta.accept(ResourceDelta.java:51)
	at org.eclipse.egit.core.Activator$IgnoreDerivedResources.resourceChanged(Activator.java:811)
	at org.eclipse.core.internal.events.NotificationManager$1.run(NotificationManager.java:305)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.core.internal.events.NotificationManager.notify(NotificationManager.java:295)
	at org.eclipse.core.internal.events.NotificationManager.broadcastChanges(NotificationManager.java:158)
	at org.eclipse.core.internal.resources.Workspace.broadcastPostChange(Workspace.java:379)
	at org.eclipse.core.internal.resources.Workspace.endOperation(Workspace.java:1502)
	at org.eclipse.core.internal.events.AutoBuildJob.doBuild(AutoBuildJob.java:169)
	at org.eclipse.core.internal.events.AutoBuildJob.run(AutoBuildJob.java:244)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.m2e.logback.appender 4 0 2020-05-06 10:44:13.302
!MESSAGE Not closed bracket?
!STACK 0
org.eclipse.jgit.errors.InvalidPatternException: Not closed bracket?
	at org.eclipse.jgit.ignore.internal.Strings.convertGlob(Strings.java:444)
	at org.eclipse.jgit.ignore.internal.WildCardMatcher.<init>(WildCardMatcher.java:64)
	at org.eclipse.jgit.ignore.internal.PathMatcher.createNameMatcher0(PathMatcher.java:178)
	at org.eclipse.jgit.ignore.internal.PathMatcher.createMatchers(PathMatcher.java:99)
	at org.eclipse.jgit.ignore.internal.PathMatcher.<init>(PathMatcher.java:84)
	at org.eclipse.jgit.ignore.internal.PathMatcher.createPathMatcher(PathMatcher.java:135)
	at org.eclipse.jgit.ignore.FastIgnoreRule.<init>(FastIgnoreRule.java:129)
	at org.eclipse.jgit.ignore.IgnoreNode.parse(IgnoreNode.java:115)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator$PerDirectoryIgnoreNode.load(WorkingTreeIterator.java:1346)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator$RootIgnoreNode.load(WorkingTreeIterator.java:1365)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.getIgnoreNode(WorkingTreeIterator.java:771)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isDirectoryIgnored(WorkingTreeIterator.java:1611)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isDirectoryIgnored(WorkingTreeIterator.java:1589)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isEntryIgnored(WorkingTreeIterator.java:753)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isEntryIgnored(WorkingTreeIterator.java:713)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isEntryIgnored(WorkingTreeIterator.java:700)
	at org.eclipse.jgit.treewalk.filter.IndexDiffFilter.include(IndexDiffFilter.java:170)
	at org.eclipse.jgit.treewalk.filter.TreeFilter.matchFilter(TreeFilter.java:228)
	at org.eclipse.jgit.treewalk.filter.AndTreeFilter$List.matchFilter(AndTreeFilter.java:190)
	at org.eclipse.jgit.treewalk.TreeWalk.next(TreeWalk.java:853)
	at org.eclipse.jgit.lib.IndexDiff.diff(IndexDiff.java:446)
	at org.eclipse.egit.core.internal.indexdiff.IndexDiffCacheEntry.calcIndexDiffDataIncremental(IndexDiffCacheEntry.java:625)
	at org.eclipse.egit.core.internal.indexdiff.IndexDiffCacheEntry.access$13(IndexDiffCacheEntry.java:604)
	at org.eclipse.egit.core.internal.indexdiff.IndexDiffCacheEntry$5.updateIndexDiff(IndexDiffCacheEntry.java:550)
	at org.eclipse.egit.core.internal.indexdiff.IndexDiffUpdateJob.run(IndexDiffUpdateJob.java:77)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.m2e.logback.appender 4 0 2020-05-06 10:46:16.516
!MESSAGE Not closed bracket?
!STACK 0
org.eclipse.jgit.errors.InvalidPatternException: Not closed bracket?
	at org.eclipse.jgit.ignore.internal.Strings.convertGlob(Strings.java:444)
	at org.eclipse.jgit.ignore.internal.WildCardMatcher.<init>(WildCardMatcher.java:64)
	at org.eclipse.jgit.ignore.internal.PathMatcher.createNameMatcher0(PathMatcher.java:178)
	at org.eclipse.jgit.ignore.internal.PathMatcher.createMatchers(PathMatcher.java:99)
	at org.eclipse.jgit.ignore.internal.PathMatcher.<init>(PathMatcher.java:84)
	at org.eclipse.jgit.ignore.internal.PathMatcher.createPathMatcher(PathMatcher.java:135)
	at org.eclipse.jgit.ignore.FastIgnoreRule.<init>(FastIgnoreRule.java:129)
	at org.eclipse.jgit.ignore.IgnoreNode.parse(IgnoreNode.java:115)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator$PerDirectoryIgnoreNode.load(WorkingTreeIterator.java:1346)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator$RootIgnoreNode.load(WorkingTreeIterator.java:1365)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.getIgnoreNode(WorkingTreeIterator.java:771)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isDirectoryIgnored(WorkingTreeIterator.java:1611)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isDirectoryIgnored(WorkingTreeIterator.java:1589)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isEntryIgnored(WorkingTreeIterator.java:753)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isEntryIgnored(WorkingTreeIterator.java:713)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isEntryIgnored(WorkingTreeIterator.java:700)
	at org.eclipse.jgit.treewalk.filter.IndexDiffFilter.include(IndexDiffFilter.java:170)
	at org.eclipse.jgit.treewalk.filter.TreeFilter.matchFilter(TreeFilter.java:228)
	at org.eclipse.jgit.treewalk.filter.AndTreeFilter$List.matchFilter(AndTreeFilter.java:190)
	at org.eclipse.jgit.treewalk.TreeWalk.next(TreeWalk.java:853)
	at org.eclipse.jgit.lib.IndexDiff.diff(IndexDiff.java:446)
	at org.eclipse.egit.core.internal.indexdiff.IndexDiffCacheEntry.calcIndexDiffDataIncremental(IndexDiffCacheEntry.java:625)
	at org.eclipse.egit.core.internal.indexdiff.IndexDiffCacheEntry.access$13(IndexDiffCacheEntry.java:604)
	at org.eclipse.egit.core.internal.indexdiff.IndexDiffCacheEntry$5.updateIndexDiff(IndexDiffCacheEntry.java:550)
	at org.eclipse.egit.core.internal.indexdiff.IndexDiffUpdateJob.run(IndexDiffUpdateJob.java:77)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-06 10:46:16.644
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-06 10:46:16.646
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 4 0 2020-05-06 10:46:16.649
!MESSAGE Not closed bracket?
!STACK 0
org.eclipse.jgit.errors.InvalidPatternException: Not closed bracket?
	at org.eclipse.jgit.ignore.internal.Strings.convertGlob(Strings.java:444)
	at org.eclipse.jgit.ignore.internal.WildCardMatcher.<init>(WildCardMatcher.java:64)
	at org.eclipse.jgit.ignore.internal.PathMatcher.createNameMatcher0(PathMatcher.java:178)
	at org.eclipse.jgit.ignore.internal.PathMatcher.createMatchers(PathMatcher.java:99)
	at org.eclipse.jgit.ignore.internal.PathMatcher.<init>(PathMatcher.java:84)
	at org.eclipse.jgit.ignore.internal.PathMatcher.createPathMatcher(PathMatcher.java:135)
	at org.eclipse.jgit.ignore.FastIgnoreRule.<init>(FastIgnoreRule.java:129)
	at org.eclipse.jgit.ignore.IgnoreNode.parse(IgnoreNode.java:115)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator$PerDirectoryIgnoreNode.load(WorkingTreeIterator.java:1346)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator$RootIgnoreNode.load(WorkingTreeIterator.java:1365)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.getIgnoreNode(WorkingTreeIterator.java:771)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isDirectoryIgnored(WorkingTreeIterator.java:1611)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isDirectoryIgnored(WorkingTreeIterator.java:1589)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isEntryIgnored(WorkingTreeIterator.java:753)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isEntryIgnored(WorkingTreeIterator.java:713)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isEntryIgnored(WorkingTreeIterator.java:700)
	at org.eclipse.jgit.treewalk.FileTreeIterator.createSubtreeIterator(FileTreeIterator.java:215)
	at org.eclipse.jgit.treewalk.AbstractTreeIterator.createSubtreeIterator(AbstractTreeIterator.java:594)
	at org.eclipse.jgit.treewalk.TreeWalk.enterSubtree(TreeWalk.java:1303)
	at org.eclipse.egit.core.RepositoryUtil.canBeAutoIgnored(RepositoryUtil.java:773)
	at org.eclipse.egit.core.Activator$IgnoreDerivedResources$1.visit(Activator.java:835)
	at org.eclipse.core.internal.events.ResourceDelta.accept(ResourceDelta.java:67)
	at org.eclipse.core.internal.events.ResourceDelta.accept(ResourceDelta.java:77)
	at org.eclipse.core.internal.events.ResourceDelta.accept(ResourceDelta.java:77)
	at org.eclipse.core.internal.events.ResourceDelta.accept(ResourceDelta.java:51)
	at org.eclipse.egit.core.Activator$IgnoreDerivedResources.resourceChanged(Activator.java:811)
	at org.eclipse.core.internal.events.NotificationManager$1.run(NotificationManager.java:305)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.core.internal.events.NotificationManager.notify(NotificationManager.java:295)
	at org.eclipse.core.internal.events.NotificationManager.broadcastChanges(NotificationManager.java:158)
	at org.eclipse.core.internal.resources.Workspace.broadcastPostChange(Workspace.java:379)
	at org.eclipse.core.internal.resources.Workspace.endOperation(Workspace.java:1502)
	at org.eclipse.core.internal.events.AutoBuildJob.doBuild(AutoBuildJob.java:169)
	at org.eclipse.core.internal.events.AutoBuildJob.run(AutoBuildJob.java:244)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.m2e.logback.appender 4 0 2020-05-06 10:46:16.750
!MESSAGE Not closed bracket?
!STACK 0
org.eclipse.jgit.errors.InvalidPatternException: Not closed bracket?
	at org.eclipse.jgit.ignore.internal.Strings.convertGlob(Strings.java:444)
	at org.eclipse.jgit.ignore.internal.WildCardMatcher.<init>(WildCardMatcher.java:64)
	at org.eclipse.jgit.ignore.internal.PathMatcher.createNameMatcher0(PathMatcher.java:178)
	at org.eclipse.jgit.ignore.internal.PathMatcher.createMatchers(PathMatcher.java:99)
	at org.eclipse.jgit.ignore.internal.PathMatcher.<init>(PathMatcher.java:84)
	at org.eclipse.jgit.ignore.internal.PathMatcher.createPathMatcher(PathMatcher.java:135)
	at org.eclipse.jgit.ignore.FastIgnoreRule.<init>(FastIgnoreRule.java:129)
	at org.eclipse.jgit.ignore.IgnoreNode.parse(IgnoreNode.java:115)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator$PerDirectoryIgnoreNode.load(WorkingTreeIterator.java:1346)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator$RootIgnoreNode.load(WorkingTreeIterator.java:1365)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.getIgnoreNode(WorkingTreeIterator.java:771)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isDirectoryIgnored(WorkingTreeIterator.java:1611)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isDirectoryIgnored(WorkingTreeIterator.java:1589)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isEntryIgnored(WorkingTreeIterator.java:753)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isEntryIgnored(WorkingTreeIterator.java:713)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isEntryIgnored(WorkingTreeIterator.java:700)
	at org.eclipse.jgit.treewalk.filter.IndexDiffFilter.include(IndexDiffFilter.java:170)
	at org.eclipse.jgit.treewalk.filter.TreeFilter.matchFilter(TreeFilter.java:228)
	at org.eclipse.jgit.treewalk.filter.AndTreeFilter$List.matchFilter(AndTreeFilter.java:190)
	at org.eclipse.jgit.treewalk.TreeWalk.next(TreeWalk.java:853)
	at org.eclipse.jgit.lib.IndexDiff.diff(IndexDiff.java:446)
	at org.eclipse.egit.core.internal.indexdiff.IndexDiffCacheEntry.calcIndexDiffDataIncremental(IndexDiffCacheEntry.java:625)
	at org.eclipse.egit.core.internal.indexdiff.IndexDiffCacheEntry.access$13(IndexDiffCacheEntry.java:604)
	at org.eclipse.egit.core.internal.indexdiff.IndexDiffCacheEntry$5.updateIndexDiff(IndexDiffCacheEntry.java:550)
	at org.eclipse.egit.core.internal.indexdiff.IndexDiffUpdateJob.run(IndexDiffUpdateJob.java:77)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.m2e.logback.appender 4 0 2020-05-06 10:48:09.456
!MESSAGE Not closed bracket?
!STACK 0
org.eclipse.jgit.errors.InvalidPatternException: Not closed bracket?
	at org.eclipse.jgit.ignore.internal.Strings.convertGlob(Strings.java:444)
	at org.eclipse.jgit.ignore.internal.WildCardMatcher.<init>(WildCardMatcher.java:64)
	at org.eclipse.jgit.ignore.internal.PathMatcher.createNameMatcher0(PathMatcher.java:178)
	at org.eclipse.jgit.ignore.internal.PathMatcher.createMatchers(PathMatcher.java:99)
	at org.eclipse.jgit.ignore.internal.PathMatcher.<init>(PathMatcher.java:84)
	at org.eclipse.jgit.ignore.internal.PathMatcher.createPathMatcher(PathMatcher.java:135)
	at org.eclipse.jgit.ignore.FastIgnoreRule.<init>(FastIgnoreRule.java:129)
	at org.eclipse.jgit.ignore.IgnoreNode.parse(IgnoreNode.java:115)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator$PerDirectoryIgnoreNode.load(WorkingTreeIterator.java:1346)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator$RootIgnoreNode.load(WorkingTreeIterator.java:1365)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.getIgnoreNode(WorkingTreeIterator.java:771)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isDirectoryIgnored(WorkingTreeIterator.java:1611)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isDirectoryIgnored(WorkingTreeIterator.java:1589)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isEntryIgnored(WorkingTreeIterator.java:753)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isEntryIgnored(WorkingTreeIterator.java:713)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isEntryIgnored(WorkingTreeIterator.java:700)
	at org.eclipse.jgit.treewalk.filter.IndexDiffFilter.include(IndexDiffFilter.java:170)
	at org.eclipse.jgit.treewalk.filter.TreeFilter.matchFilter(TreeFilter.java:228)
	at org.eclipse.jgit.treewalk.filter.AndTreeFilter$List.matchFilter(AndTreeFilter.java:190)
	at org.eclipse.jgit.treewalk.TreeWalk.next(TreeWalk.java:853)
	at org.eclipse.jgit.lib.IndexDiff.diff(IndexDiff.java:446)
	at org.eclipse.egit.core.internal.indexdiff.IndexDiffCacheEntry.calcIndexDiffDataIncremental(IndexDiffCacheEntry.java:625)
	at org.eclipse.egit.core.internal.indexdiff.IndexDiffCacheEntry.access$13(IndexDiffCacheEntry.java:604)
	at org.eclipse.egit.core.internal.indexdiff.IndexDiffCacheEntry$5.updateIndexDiff(IndexDiffCacheEntry.java:550)
	at org.eclipse.egit.core.internal.indexdiff.IndexDiffUpdateJob.run(IndexDiffUpdateJob.java:77)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-06 10:48:09.575
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-06 10:48:09.576
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 4 0 2020-05-06 10:48:09.579
!MESSAGE Not closed bracket?
!STACK 0
org.eclipse.jgit.errors.InvalidPatternException: Not closed bracket?
	at org.eclipse.jgit.ignore.internal.Strings.convertGlob(Strings.java:444)
	at org.eclipse.jgit.ignore.internal.WildCardMatcher.<init>(WildCardMatcher.java:64)
	at org.eclipse.jgit.ignore.internal.PathMatcher.createNameMatcher0(PathMatcher.java:178)
	at org.eclipse.jgit.ignore.internal.PathMatcher.createMatchers(PathMatcher.java:99)
	at org.eclipse.jgit.ignore.internal.PathMatcher.<init>(PathMatcher.java:84)
	at org.eclipse.jgit.ignore.internal.PathMatcher.createPathMatcher(PathMatcher.java:135)
	at org.eclipse.jgit.ignore.FastIgnoreRule.<init>(FastIgnoreRule.java:129)
	at org.eclipse.jgit.ignore.IgnoreNode.parse(IgnoreNode.java:115)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator$PerDirectoryIgnoreNode.load(WorkingTreeIterator.java:1346)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator$RootIgnoreNode.load(WorkingTreeIterator.java:1365)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.getIgnoreNode(WorkingTreeIterator.java:771)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isDirectoryIgnored(WorkingTreeIterator.java:1611)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isDirectoryIgnored(WorkingTreeIterator.java:1589)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isEntryIgnored(WorkingTreeIterator.java:753)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isEntryIgnored(WorkingTreeIterator.java:713)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isEntryIgnored(WorkingTreeIterator.java:700)
	at org.eclipse.jgit.treewalk.FileTreeIterator.createSubtreeIterator(FileTreeIterator.java:215)
	at org.eclipse.jgit.treewalk.AbstractTreeIterator.createSubtreeIterator(AbstractTreeIterator.java:594)
	at org.eclipse.jgit.treewalk.TreeWalk.enterSubtree(TreeWalk.java:1303)
	at org.eclipse.egit.core.RepositoryUtil.canBeAutoIgnored(RepositoryUtil.java:773)
	at org.eclipse.egit.core.Activator$IgnoreDerivedResources$1.visit(Activator.java:835)
	at org.eclipse.core.internal.events.ResourceDelta.accept(ResourceDelta.java:67)
	at org.eclipse.core.internal.events.ResourceDelta.accept(ResourceDelta.java:77)
	at org.eclipse.core.internal.events.ResourceDelta.accept(ResourceDelta.java:77)
	at org.eclipse.core.internal.events.ResourceDelta.accept(ResourceDelta.java:51)
	at org.eclipse.egit.core.Activator$IgnoreDerivedResources.resourceChanged(Activator.java:811)
	at org.eclipse.core.internal.events.NotificationManager$1.run(NotificationManager.java:305)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.core.internal.events.NotificationManager.notify(NotificationManager.java:295)
	at org.eclipse.core.internal.events.NotificationManager.broadcastChanges(NotificationManager.java:158)
	at org.eclipse.core.internal.resources.Workspace.broadcastPostChange(Workspace.java:379)
	at org.eclipse.core.internal.resources.Workspace.endOperation(Workspace.java:1502)
	at org.eclipse.core.internal.events.AutoBuildJob.doBuild(AutoBuildJob.java:169)
	at org.eclipse.core.internal.events.AutoBuildJob.run(AutoBuildJob.java:244)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.m2e.logback.appender 4 0 2020-05-06 10:48:09.672
!MESSAGE Not closed bracket?
!STACK 0
org.eclipse.jgit.errors.InvalidPatternException: Not closed bracket?
	at org.eclipse.jgit.ignore.internal.Strings.convertGlob(Strings.java:444)
	at org.eclipse.jgit.ignore.internal.WildCardMatcher.<init>(WildCardMatcher.java:64)
	at org.eclipse.jgit.ignore.internal.PathMatcher.createNameMatcher0(PathMatcher.java:178)
	at org.eclipse.jgit.ignore.internal.PathMatcher.createMatchers(PathMatcher.java:99)
	at org.eclipse.jgit.ignore.internal.PathMatcher.<init>(PathMatcher.java:84)
	at org.eclipse.jgit.ignore.internal.PathMatcher.createPathMatcher(PathMatcher.java:135)
	at org.eclipse.jgit.ignore.FastIgnoreRule.<init>(FastIgnoreRule.java:129)
	at org.eclipse.jgit.ignore.IgnoreNode.parse(IgnoreNode.java:115)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator$PerDirectoryIgnoreNode.load(WorkingTreeIterator.java:1346)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator$RootIgnoreNode.load(WorkingTreeIterator.java:1365)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.getIgnoreNode(WorkingTreeIterator.java:771)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isDirectoryIgnored(WorkingTreeIterator.java:1611)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isDirectoryIgnored(WorkingTreeIterator.java:1589)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isEntryIgnored(WorkingTreeIterator.java:753)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isEntryIgnored(WorkingTreeIterator.java:713)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isEntryIgnored(WorkingTreeIterator.java:700)
	at org.eclipse.jgit.treewalk.filter.IndexDiffFilter.include(IndexDiffFilter.java:170)
	at org.eclipse.jgit.treewalk.filter.TreeFilter.matchFilter(TreeFilter.java:228)
	at org.eclipse.jgit.treewalk.filter.AndTreeFilter$List.matchFilter(AndTreeFilter.java:190)
	at org.eclipse.jgit.treewalk.TreeWalk.next(TreeWalk.java:853)
	at org.eclipse.jgit.lib.IndexDiff.diff(IndexDiff.java:446)
	at org.eclipse.egit.core.internal.indexdiff.IndexDiffCacheEntry.calcIndexDiffDataIncremental(IndexDiffCacheEntry.java:625)
	at org.eclipse.egit.core.internal.indexdiff.IndexDiffCacheEntry.access$13(IndexDiffCacheEntry.java:604)
	at org.eclipse.egit.core.internal.indexdiff.IndexDiffCacheEntry$5.updateIndexDiff(IndexDiffCacheEntry.java:550)
	at org.eclipse.egit.core.internal.indexdiff.IndexDiffUpdateJob.run(IndexDiffUpdateJob.java:77)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.m2e.logback.appender 4 0 2020-05-06 10:48:58.365
!MESSAGE Not closed bracket?
!STACK 0
org.eclipse.jgit.errors.InvalidPatternException: Not closed bracket?
	at org.eclipse.jgit.ignore.internal.Strings.convertGlob(Strings.java:444)
	at org.eclipse.jgit.ignore.internal.WildCardMatcher.<init>(WildCardMatcher.java:64)
	at org.eclipse.jgit.ignore.internal.PathMatcher.createNameMatcher0(PathMatcher.java:178)
	at org.eclipse.jgit.ignore.internal.PathMatcher.createMatchers(PathMatcher.java:99)
	at org.eclipse.jgit.ignore.internal.PathMatcher.<init>(PathMatcher.java:84)
	at org.eclipse.jgit.ignore.internal.PathMatcher.createPathMatcher(PathMatcher.java:135)
	at org.eclipse.jgit.ignore.FastIgnoreRule.<init>(FastIgnoreRule.java:129)
	at org.eclipse.jgit.ignore.IgnoreNode.parse(IgnoreNode.java:115)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator$PerDirectoryIgnoreNode.load(WorkingTreeIterator.java:1346)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator$RootIgnoreNode.load(WorkingTreeIterator.java:1365)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.getIgnoreNode(WorkingTreeIterator.java:771)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isDirectoryIgnored(WorkingTreeIterator.java:1611)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isDirectoryIgnored(WorkingTreeIterator.java:1589)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isEntryIgnored(WorkingTreeIterator.java:753)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isEntryIgnored(WorkingTreeIterator.java:713)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isEntryIgnored(WorkingTreeIterator.java:700)
	at org.eclipse.jgit.treewalk.filter.IndexDiffFilter.include(IndexDiffFilter.java:170)
	at org.eclipse.jgit.treewalk.filter.TreeFilter.matchFilter(TreeFilter.java:228)
	at org.eclipse.jgit.treewalk.filter.AndTreeFilter$List.matchFilter(AndTreeFilter.java:190)
	at org.eclipse.jgit.treewalk.TreeWalk.next(TreeWalk.java:853)
	at org.eclipse.jgit.lib.IndexDiff.diff(IndexDiff.java:446)
	at org.eclipse.egit.core.internal.indexdiff.IndexDiffCacheEntry.calcIndexDiffDataIncremental(IndexDiffCacheEntry.java:625)
	at org.eclipse.egit.core.internal.indexdiff.IndexDiffCacheEntry.access$13(IndexDiffCacheEntry.java:604)
	at org.eclipse.egit.core.internal.indexdiff.IndexDiffCacheEntry$5.updateIndexDiff(IndexDiffCacheEntry.java:550)
	at org.eclipse.egit.core.internal.indexdiff.IndexDiffUpdateJob.run(IndexDiffUpdateJob.java:77)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-06 10:48:59.119
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-06 10:48:59.121
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 4 0 2020-05-06 11:01:19.076
!MESSAGE Not closed bracket?
!STACK 0
org.eclipse.jgit.errors.InvalidPatternException: Not closed bracket?
	at org.eclipse.jgit.ignore.internal.Strings.convertGlob(Strings.java:444)
	at org.eclipse.jgit.ignore.internal.WildCardMatcher.<init>(WildCardMatcher.java:64)
	at org.eclipse.jgit.ignore.internal.PathMatcher.createNameMatcher0(PathMatcher.java:178)
	at org.eclipse.jgit.ignore.internal.PathMatcher.createMatchers(PathMatcher.java:99)
	at org.eclipse.jgit.ignore.internal.PathMatcher.<init>(PathMatcher.java:84)
	at org.eclipse.jgit.ignore.internal.PathMatcher.createPathMatcher(PathMatcher.java:135)
	at org.eclipse.jgit.ignore.FastIgnoreRule.<init>(FastIgnoreRule.java:129)
	at org.eclipse.jgit.ignore.IgnoreNode.parse(IgnoreNode.java:115)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator$PerDirectoryIgnoreNode.load(WorkingTreeIterator.java:1346)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator$RootIgnoreNode.load(WorkingTreeIterator.java:1365)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.getIgnoreNode(WorkingTreeIterator.java:771)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isDirectoryIgnored(WorkingTreeIterator.java:1611)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isDirectoryIgnored(WorkingTreeIterator.java:1589)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isEntryIgnored(WorkingTreeIterator.java:753)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isEntryIgnored(WorkingTreeIterator.java:713)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isEntryIgnored(WorkingTreeIterator.java:700)
	at org.eclipse.jgit.treewalk.filter.IndexDiffFilter.include(IndexDiffFilter.java:170)
	at org.eclipse.jgit.treewalk.filter.TreeFilter.matchFilter(TreeFilter.java:228)
	at org.eclipse.jgit.treewalk.filter.AndTreeFilter$List.matchFilter(AndTreeFilter.java:190)
	at org.eclipse.jgit.treewalk.TreeWalk.next(TreeWalk.java:853)
	at org.eclipse.jgit.lib.IndexDiff.diff(IndexDiff.java:446)
	at org.eclipse.egit.core.internal.indexdiff.IndexDiffCacheEntry.calcIndexDiffDataIncremental(IndexDiffCacheEntry.java:625)
	at org.eclipse.egit.core.internal.indexdiff.IndexDiffCacheEntry.access$13(IndexDiffCacheEntry.java:604)
	at org.eclipse.egit.core.internal.indexdiff.IndexDiffCacheEntry$5.updateIndexDiff(IndexDiffCacheEntry.java:550)
	at org.eclipse.egit.core.internal.indexdiff.IndexDiffUpdateJob.run(IndexDiffUpdateJob.java:77)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-06 11:01:19.234
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-06 11:01:19.236
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 4 0 2020-05-06 11:01:23.624
!MESSAGE Not closed bracket?
!STACK 0
org.eclipse.jgit.errors.InvalidPatternException: Not closed bracket?
	at org.eclipse.jgit.ignore.internal.Strings.convertGlob(Strings.java:444)
	at org.eclipse.jgit.ignore.internal.WildCardMatcher.<init>(WildCardMatcher.java:64)
	at org.eclipse.jgit.ignore.internal.PathMatcher.createNameMatcher0(PathMatcher.java:178)
	at org.eclipse.jgit.ignore.internal.PathMatcher.createMatchers(PathMatcher.java:99)
	at org.eclipse.jgit.ignore.internal.PathMatcher.<init>(PathMatcher.java:84)
	at org.eclipse.jgit.ignore.internal.PathMatcher.createPathMatcher(PathMatcher.java:135)
	at org.eclipse.jgit.ignore.FastIgnoreRule.<init>(FastIgnoreRule.java:129)
	at org.eclipse.jgit.ignore.IgnoreNode.parse(IgnoreNode.java:115)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator$PerDirectoryIgnoreNode.load(WorkingTreeIterator.java:1346)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator$RootIgnoreNode.load(WorkingTreeIterator.java:1365)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.getIgnoreNode(WorkingTreeIterator.java:771)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isDirectoryIgnored(WorkingTreeIterator.java:1611)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isDirectoryIgnored(WorkingTreeIterator.java:1589)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isEntryIgnored(WorkingTreeIterator.java:753)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isEntryIgnored(WorkingTreeIterator.java:713)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isEntryIgnored(WorkingTreeIterator.java:700)
	at org.eclipse.jgit.treewalk.filter.IndexDiffFilter.include(IndexDiffFilter.java:170)
	at org.eclipse.jgit.treewalk.filter.TreeFilter.matchFilter(TreeFilter.java:228)
	at org.eclipse.jgit.treewalk.filter.AndTreeFilter$List.matchFilter(AndTreeFilter.java:190)
	at org.eclipse.jgit.treewalk.TreeWalk.next(TreeWalk.java:853)
	at org.eclipse.jgit.lib.IndexDiff.diff(IndexDiff.java:446)
	at org.eclipse.egit.core.internal.indexdiff.IndexDiffCacheEntry.calcIndexDiffDataIncremental(IndexDiffCacheEntry.java:625)
	at org.eclipse.egit.core.internal.indexdiff.IndexDiffCacheEntry.access$13(IndexDiffCacheEntry.java:604)
	at org.eclipse.egit.core.internal.indexdiff.IndexDiffCacheEntry$5.updateIndexDiff(IndexDiffCacheEntry.java:550)
	at org.eclipse.egit.core.internal.indexdiff.IndexDiffUpdateJob.run(IndexDiffUpdateJob.java:77)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-06 11:01:23.727
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-06 11:01:23.729
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 4 0 2020-05-06 11:03:08.288
!MESSAGE Not closed bracket?
!STACK 0
org.eclipse.jgit.errors.InvalidPatternException: Not closed bracket?
	at org.eclipse.jgit.ignore.internal.Strings.convertGlob(Strings.java:444)
	at org.eclipse.jgit.ignore.internal.WildCardMatcher.<init>(WildCardMatcher.java:64)
	at org.eclipse.jgit.ignore.internal.PathMatcher.createNameMatcher0(PathMatcher.java:178)
	at org.eclipse.jgit.ignore.internal.PathMatcher.createMatchers(PathMatcher.java:99)
	at org.eclipse.jgit.ignore.internal.PathMatcher.<init>(PathMatcher.java:84)
	at org.eclipse.jgit.ignore.internal.PathMatcher.createPathMatcher(PathMatcher.java:135)
	at org.eclipse.jgit.ignore.FastIgnoreRule.<init>(FastIgnoreRule.java:129)
	at org.eclipse.jgit.ignore.IgnoreNode.parse(IgnoreNode.java:115)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator$PerDirectoryIgnoreNode.load(WorkingTreeIterator.java:1346)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator$RootIgnoreNode.load(WorkingTreeIterator.java:1365)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.getIgnoreNode(WorkingTreeIterator.java:771)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isDirectoryIgnored(WorkingTreeIterator.java:1611)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isDirectoryIgnored(WorkingTreeIterator.java:1589)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isEntryIgnored(WorkingTreeIterator.java:753)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isEntryIgnored(WorkingTreeIterator.java:713)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isEntryIgnored(WorkingTreeIterator.java:700)
	at org.eclipse.jgit.treewalk.filter.IndexDiffFilter.include(IndexDiffFilter.java:170)
	at org.eclipse.jgit.treewalk.filter.TreeFilter.matchFilter(TreeFilter.java:228)
	at org.eclipse.jgit.treewalk.filter.AndTreeFilter$List.matchFilter(AndTreeFilter.java:190)
	at org.eclipse.jgit.treewalk.TreeWalk.next(TreeWalk.java:853)
	at org.eclipse.jgit.lib.IndexDiff.diff(IndexDiff.java:446)
	at org.eclipse.egit.core.internal.indexdiff.IndexDiffCacheEntry.calcIndexDiffDataIncremental(IndexDiffCacheEntry.java:625)
	at org.eclipse.egit.core.internal.indexdiff.IndexDiffCacheEntry.access$13(IndexDiffCacheEntry.java:604)
	at org.eclipse.egit.core.internal.indexdiff.IndexDiffCacheEntry$5.updateIndexDiff(IndexDiffCacheEntry.java:550)
	at org.eclipse.egit.core.internal.indexdiff.IndexDiffUpdateJob.run(IndexDiffUpdateJob.java:77)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-06 11:03:08.446
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-06 11:03:08.447
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 4 0 2020-05-06 11:03:57.429
!MESSAGE Not closed bracket?
!STACK 0
org.eclipse.jgit.errors.InvalidPatternException: Not closed bracket?
	at org.eclipse.jgit.ignore.internal.Strings.convertGlob(Strings.java:444)
	at org.eclipse.jgit.ignore.internal.WildCardMatcher.<init>(WildCardMatcher.java:64)
	at org.eclipse.jgit.ignore.internal.PathMatcher.createNameMatcher0(PathMatcher.java:178)
	at org.eclipse.jgit.ignore.internal.PathMatcher.createMatchers(PathMatcher.java:99)
	at org.eclipse.jgit.ignore.internal.PathMatcher.<init>(PathMatcher.java:84)
	at org.eclipse.jgit.ignore.internal.PathMatcher.createPathMatcher(PathMatcher.java:135)
	at org.eclipse.jgit.ignore.FastIgnoreRule.<init>(FastIgnoreRule.java:129)
	at org.eclipse.jgit.ignore.IgnoreNode.parse(IgnoreNode.java:115)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator$PerDirectoryIgnoreNode.load(WorkingTreeIterator.java:1346)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator$RootIgnoreNode.load(WorkingTreeIterator.java:1365)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.getIgnoreNode(WorkingTreeIterator.java:771)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isDirectoryIgnored(WorkingTreeIterator.java:1611)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isDirectoryIgnored(WorkingTreeIterator.java:1589)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isEntryIgnored(WorkingTreeIterator.java:753)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isEntryIgnored(WorkingTreeIterator.java:713)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isEntryIgnored(WorkingTreeIterator.java:700)
	at org.eclipse.jgit.treewalk.filter.IndexDiffFilter.include(IndexDiffFilter.java:170)
	at org.eclipse.jgit.treewalk.filter.TreeFilter.matchFilter(TreeFilter.java:228)
	at org.eclipse.jgit.treewalk.filter.AndTreeFilter$List.matchFilter(AndTreeFilter.java:190)
	at org.eclipse.jgit.treewalk.TreeWalk.next(TreeWalk.java:853)
	at org.eclipse.jgit.lib.IndexDiff.diff(IndexDiff.java:446)
	at org.eclipse.egit.core.internal.indexdiff.IndexDiffCacheEntry.calcIndexDiffDataIncremental(IndexDiffCacheEntry.java:625)
	at org.eclipse.egit.core.internal.indexdiff.IndexDiffCacheEntry.access$13(IndexDiffCacheEntry.java:604)
	at org.eclipse.egit.core.internal.indexdiff.IndexDiffCacheEntry$5.updateIndexDiff(IndexDiffCacheEntry.java:550)
	at org.eclipse.egit.core.internal.indexdiff.IndexDiffUpdateJob.run(IndexDiffUpdateJob.java:77)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-06 11:03:57.480
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-06 11:03:57.482
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 4 0 2020-05-06 11:08:16.420
!MESSAGE Not closed bracket?
!STACK 0
org.eclipse.jgit.errors.InvalidPatternException: Not closed bracket?
	at org.eclipse.jgit.ignore.internal.Strings.convertGlob(Strings.java:444)
	at org.eclipse.jgit.ignore.internal.WildCardMatcher.<init>(WildCardMatcher.java:64)
	at org.eclipse.jgit.ignore.internal.PathMatcher.createNameMatcher0(PathMatcher.java:178)
	at org.eclipse.jgit.ignore.internal.PathMatcher.createMatchers(PathMatcher.java:99)
	at org.eclipse.jgit.ignore.internal.PathMatcher.<init>(PathMatcher.java:84)
	at org.eclipse.jgit.ignore.internal.PathMatcher.createPathMatcher(PathMatcher.java:135)
	at org.eclipse.jgit.ignore.FastIgnoreRule.<init>(FastIgnoreRule.java:129)
	at org.eclipse.jgit.ignore.IgnoreNode.parse(IgnoreNode.java:115)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator$PerDirectoryIgnoreNode.load(WorkingTreeIterator.java:1346)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator$RootIgnoreNode.load(WorkingTreeIterator.java:1365)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.getIgnoreNode(WorkingTreeIterator.java:771)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isDirectoryIgnored(WorkingTreeIterator.java:1611)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isDirectoryIgnored(WorkingTreeIterator.java:1589)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isEntryIgnored(WorkingTreeIterator.java:753)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isEntryIgnored(WorkingTreeIterator.java:713)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isEntryIgnored(WorkingTreeIterator.java:700)
	at org.eclipse.jgit.treewalk.filter.IndexDiffFilter.include(IndexDiffFilter.java:170)
	at org.eclipse.jgit.treewalk.filter.TreeFilter.matchFilter(TreeFilter.java:228)
	at org.eclipse.jgit.treewalk.filter.AndTreeFilter$List.matchFilter(AndTreeFilter.java:190)
	at org.eclipse.jgit.treewalk.TreeWalk.next(TreeWalk.java:853)
	at org.eclipse.jgit.lib.IndexDiff.diff(IndexDiff.java:446)
	at org.eclipse.egit.core.internal.indexdiff.IndexDiffCacheEntry.calcIndexDiffDataIncremental(IndexDiffCacheEntry.java:625)
	at org.eclipse.egit.core.internal.indexdiff.IndexDiffCacheEntry.access$13(IndexDiffCacheEntry.java:604)
	at org.eclipse.egit.core.internal.indexdiff.IndexDiffCacheEntry$5.updateIndexDiff(IndexDiffCacheEntry.java:550)
	at org.eclipse.egit.core.internal.indexdiff.IndexDiffUpdateJob.run(IndexDiffUpdateJob.java:77)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-06 11:08:16.520
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-06 11:08:16.522
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 4 0 2020-05-06 11:09:51.549
!MESSAGE Not closed bracket?
!STACK 0
org.eclipse.jgit.errors.InvalidPatternException: Not closed bracket?
	at org.eclipse.jgit.ignore.internal.Strings.convertGlob(Strings.java:444)
	at org.eclipse.jgit.ignore.internal.WildCardMatcher.<init>(WildCardMatcher.java:64)
	at org.eclipse.jgit.ignore.internal.PathMatcher.createNameMatcher0(PathMatcher.java:178)
	at org.eclipse.jgit.ignore.internal.PathMatcher.createMatchers(PathMatcher.java:99)
	at org.eclipse.jgit.ignore.internal.PathMatcher.<init>(PathMatcher.java:84)
	at org.eclipse.jgit.ignore.internal.PathMatcher.createPathMatcher(PathMatcher.java:135)
	at org.eclipse.jgit.ignore.FastIgnoreRule.<init>(FastIgnoreRule.java:129)
	at org.eclipse.jgit.ignore.IgnoreNode.parse(IgnoreNode.java:115)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator$PerDirectoryIgnoreNode.load(WorkingTreeIterator.java:1346)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator$RootIgnoreNode.load(WorkingTreeIterator.java:1365)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.getIgnoreNode(WorkingTreeIterator.java:771)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isDirectoryIgnored(WorkingTreeIterator.java:1611)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isDirectoryIgnored(WorkingTreeIterator.java:1589)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isEntryIgnored(WorkingTreeIterator.java:753)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isEntryIgnored(WorkingTreeIterator.java:713)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isEntryIgnored(WorkingTreeIterator.java:700)
	at org.eclipse.jgit.treewalk.filter.IndexDiffFilter.include(IndexDiffFilter.java:170)
	at org.eclipse.jgit.treewalk.filter.TreeFilter.matchFilter(TreeFilter.java:228)
	at org.eclipse.jgit.treewalk.filter.AndTreeFilter$List.matchFilter(AndTreeFilter.java:190)
	at org.eclipse.jgit.treewalk.TreeWalk.next(TreeWalk.java:853)
	at org.eclipse.jgit.lib.IndexDiff.diff(IndexDiff.java:446)
	at org.eclipse.egit.core.internal.indexdiff.IndexDiffCacheEntry.calcIndexDiffDataIncremental(IndexDiffCacheEntry.java:625)
	at org.eclipse.egit.core.internal.indexdiff.IndexDiffCacheEntry.access$13(IndexDiffCacheEntry.java:604)
	at org.eclipse.egit.core.internal.indexdiff.IndexDiffCacheEntry$5.updateIndexDiff(IndexDiffCacheEntry.java:550)
	at org.eclipse.egit.core.internal.indexdiff.IndexDiffUpdateJob.run(IndexDiffUpdateJob.java:77)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-06 11:09:51.650
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-06 11:09:51.651
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 4 0 2020-05-06 11:10:13.108
!MESSAGE Not closed bracket?
!STACK 0
org.eclipse.jgit.errors.InvalidPatternException: Not closed bracket?
	at org.eclipse.jgit.ignore.internal.Strings.convertGlob(Strings.java:444)
	at org.eclipse.jgit.ignore.internal.WildCardMatcher.<init>(WildCardMatcher.java:64)
	at org.eclipse.jgit.ignore.internal.PathMatcher.createNameMatcher0(PathMatcher.java:178)
	at org.eclipse.jgit.ignore.internal.PathMatcher.createMatchers(PathMatcher.java:99)
	at org.eclipse.jgit.ignore.internal.PathMatcher.<init>(PathMatcher.java:84)
	at org.eclipse.jgit.ignore.internal.PathMatcher.createPathMatcher(PathMatcher.java:135)
	at org.eclipse.jgit.ignore.FastIgnoreRule.<init>(FastIgnoreRule.java:129)
	at org.eclipse.jgit.ignore.IgnoreNode.parse(IgnoreNode.java:115)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator$PerDirectoryIgnoreNode.load(WorkingTreeIterator.java:1346)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator$RootIgnoreNode.load(WorkingTreeIterator.java:1365)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.getIgnoreNode(WorkingTreeIterator.java:771)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isDirectoryIgnored(WorkingTreeIterator.java:1611)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isDirectoryIgnored(WorkingTreeIterator.java:1589)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isEntryIgnored(WorkingTreeIterator.java:753)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isEntryIgnored(WorkingTreeIterator.java:713)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isEntryIgnored(WorkingTreeIterator.java:700)
	at org.eclipse.jgit.treewalk.filter.IndexDiffFilter.include(IndexDiffFilter.java:170)
	at org.eclipse.jgit.treewalk.filter.TreeFilter.matchFilter(TreeFilter.java:228)
	at org.eclipse.jgit.treewalk.filter.AndTreeFilter$List.matchFilter(AndTreeFilter.java:190)
	at org.eclipse.jgit.treewalk.TreeWalk.next(TreeWalk.java:853)
	at org.eclipse.jgit.lib.IndexDiff.diff(IndexDiff.java:446)
	at org.eclipse.egit.core.internal.indexdiff.IndexDiffCacheEntry.calcIndexDiffDataIncremental(IndexDiffCacheEntry.java:625)
	at org.eclipse.egit.core.internal.indexdiff.IndexDiffCacheEntry.access$13(IndexDiffCacheEntry.java:604)
	at org.eclipse.egit.core.internal.indexdiff.IndexDiffCacheEntry$5.updateIndexDiff(IndexDiffCacheEntry.java:550)
	at org.eclipse.egit.core.internal.indexdiff.IndexDiffUpdateJob.run(IndexDiffUpdateJob.java:77)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-06 11:10:13.251
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-06 11:10:13.252
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 4 0 2020-05-06 11:10:13.255
!MESSAGE Not closed bracket?
!STACK 0
org.eclipse.jgit.errors.InvalidPatternException: Not closed bracket?
	at org.eclipse.jgit.ignore.internal.Strings.convertGlob(Strings.java:444)
	at org.eclipse.jgit.ignore.internal.WildCardMatcher.<init>(WildCardMatcher.java:64)
	at org.eclipse.jgit.ignore.internal.PathMatcher.createNameMatcher0(PathMatcher.java:178)
	at org.eclipse.jgit.ignore.internal.PathMatcher.createMatchers(PathMatcher.java:99)
	at org.eclipse.jgit.ignore.internal.PathMatcher.<init>(PathMatcher.java:84)
	at org.eclipse.jgit.ignore.internal.PathMatcher.createPathMatcher(PathMatcher.java:135)
	at org.eclipse.jgit.ignore.FastIgnoreRule.<init>(FastIgnoreRule.java:129)
	at org.eclipse.jgit.ignore.IgnoreNode.parse(IgnoreNode.java:115)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator$PerDirectoryIgnoreNode.load(WorkingTreeIterator.java:1346)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator$RootIgnoreNode.load(WorkingTreeIterator.java:1365)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.getIgnoreNode(WorkingTreeIterator.java:771)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isDirectoryIgnored(WorkingTreeIterator.java:1611)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isDirectoryIgnored(WorkingTreeIterator.java:1589)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isEntryIgnored(WorkingTreeIterator.java:753)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isEntryIgnored(WorkingTreeIterator.java:713)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isEntryIgnored(WorkingTreeIterator.java:700)
	at org.eclipse.jgit.treewalk.FileTreeIterator.createSubtreeIterator(FileTreeIterator.java:215)
	at org.eclipse.jgit.treewalk.AbstractTreeIterator.createSubtreeIterator(AbstractTreeIterator.java:594)
	at org.eclipse.jgit.treewalk.TreeWalk.enterSubtree(TreeWalk.java:1303)
	at org.eclipse.egit.core.RepositoryUtil.canBeAutoIgnored(RepositoryUtil.java:773)
	at org.eclipse.egit.core.Activator$IgnoreDerivedResources$1.visit(Activator.java:835)
	at org.eclipse.core.internal.events.ResourceDelta.accept(ResourceDelta.java:67)
	at org.eclipse.core.internal.events.ResourceDelta.accept(ResourceDelta.java:77)
	at org.eclipse.core.internal.events.ResourceDelta.accept(ResourceDelta.java:77)
	at org.eclipse.core.internal.events.ResourceDelta.accept(ResourceDelta.java:51)
	at org.eclipse.egit.core.Activator$IgnoreDerivedResources.resourceChanged(Activator.java:811)
	at org.eclipse.core.internal.events.NotificationManager$1.run(NotificationManager.java:305)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.core.internal.events.NotificationManager.notify(NotificationManager.java:295)
	at org.eclipse.core.internal.events.NotificationManager.broadcastChanges(NotificationManager.java:158)
	at org.eclipse.core.internal.resources.Workspace.broadcastPostChange(Workspace.java:379)
	at org.eclipse.core.internal.resources.Workspace.endOperation(Workspace.java:1502)
	at org.eclipse.core.internal.events.AutoBuildJob.doBuild(AutoBuildJob.java:169)
	at org.eclipse.core.internal.events.AutoBuildJob.run(AutoBuildJob.java:244)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.m2e.logback.appender 4 0 2020-05-06 11:10:13.344
!MESSAGE Not closed bracket?
!STACK 0
org.eclipse.jgit.errors.InvalidPatternException: Not closed bracket?
	at org.eclipse.jgit.ignore.internal.Strings.convertGlob(Strings.java:444)
	at org.eclipse.jgit.ignore.internal.WildCardMatcher.<init>(WildCardMatcher.java:64)
	at org.eclipse.jgit.ignore.internal.PathMatcher.createNameMatcher0(PathMatcher.java:178)
	at org.eclipse.jgit.ignore.internal.PathMatcher.createMatchers(PathMatcher.java:99)
	at org.eclipse.jgit.ignore.internal.PathMatcher.<init>(PathMatcher.java:84)
	at org.eclipse.jgit.ignore.internal.PathMatcher.createPathMatcher(PathMatcher.java:135)
	at org.eclipse.jgit.ignore.FastIgnoreRule.<init>(FastIgnoreRule.java:129)
	at org.eclipse.jgit.ignore.IgnoreNode.parse(IgnoreNode.java:115)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator$PerDirectoryIgnoreNode.load(WorkingTreeIterator.java:1346)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator$RootIgnoreNode.load(WorkingTreeIterator.java:1365)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.getIgnoreNode(WorkingTreeIterator.java:771)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isDirectoryIgnored(WorkingTreeIterator.java:1611)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isDirectoryIgnored(WorkingTreeIterator.java:1589)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isEntryIgnored(WorkingTreeIterator.java:753)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isEntryIgnored(WorkingTreeIterator.java:713)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isEntryIgnored(WorkingTreeIterator.java:700)
	at org.eclipse.jgit.treewalk.filter.IndexDiffFilter.include(IndexDiffFilter.java:170)
	at org.eclipse.jgit.treewalk.filter.TreeFilter.matchFilter(TreeFilter.java:228)
	at org.eclipse.jgit.treewalk.filter.AndTreeFilter$List.matchFilter(AndTreeFilter.java:190)
	at org.eclipse.jgit.treewalk.TreeWalk.next(TreeWalk.java:853)
	at org.eclipse.jgit.lib.IndexDiff.diff(IndexDiff.java:446)
	at org.eclipse.egit.core.internal.indexdiff.IndexDiffCacheEntry.calcIndexDiffDataIncremental(IndexDiffCacheEntry.java:625)
	at org.eclipse.egit.core.internal.indexdiff.IndexDiffCacheEntry.access$13(IndexDiffCacheEntry.java:604)
	at org.eclipse.egit.core.internal.indexdiff.IndexDiffCacheEntry$5.updateIndexDiff(IndexDiffCacheEntry.java:550)
	at org.eclipse.egit.core.internal.indexdiff.IndexDiffUpdateJob.run(IndexDiffUpdateJob.java:77)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.m2e.logback.appender 4 0 2020-05-06 11:10:26.687
!MESSAGE Not closed bracket?
!STACK 0
org.eclipse.jgit.errors.InvalidPatternException: Not closed bracket?
	at org.eclipse.jgit.ignore.internal.Strings.convertGlob(Strings.java:444)
	at org.eclipse.jgit.ignore.internal.WildCardMatcher.<init>(WildCardMatcher.java:64)
	at org.eclipse.jgit.ignore.internal.PathMatcher.createNameMatcher0(PathMatcher.java:178)
	at org.eclipse.jgit.ignore.internal.PathMatcher.createMatchers(PathMatcher.java:99)
	at org.eclipse.jgit.ignore.internal.PathMatcher.<init>(PathMatcher.java:84)
	at org.eclipse.jgit.ignore.internal.PathMatcher.createPathMatcher(PathMatcher.java:135)
	at org.eclipse.jgit.ignore.FastIgnoreRule.<init>(FastIgnoreRule.java:129)
	at org.eclipse.jgit.ignore.IgnoreNode.parse(IgnoreNode.java:115)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator$PerDirectoryIgnoreNode.load(WorkingTreeIterator.java:1346)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator$RootIgnoreNode.load(WorkingTreeIterator.java:1365)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.getIgnoreNode(WorkingTreeIterator.java:771)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isDirectoryIgnored(WorkingTreeIterator.java:1611)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isDirectoryIgnored(WorkingTreeIterator.java:1589)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isEntryIgnored(WorkingTreeIterator.java:753)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isEntryIgnored(WorkingTreeIterator.java:713)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isEntryIgnored(WorkingTreeIterator.java:700)
	at org.eclipse.jgit.treewalk.filter.IndexDiffFilter.include(IndexDiffFilter.java:170)
	at org.eclipse.jgit.treewalk.filter.TreeFilter.matchFilter(TreeFilter.java:228)
	at org.eclipse.jgit.treewalk.filter.AndTreeFilter$List.matchFilter(AndTreeFilter.java:190)
	at org.eclipse.jgit.treewalk.TreeWalk.next(TreeWalk.java:853)
	at org.eclipse.jgit.lib.IndexDiff.diff(IndexDiff.java:446)
	at org.eclipse.egit.core.internal.indexdiff.IndexDiffCacheEntry.calcIndexDiffDataIncremental(IndexDiffCacheEntry.java:625)
	at org.eclipse.egit.core.internal.indexdiff.IndexDiffCacheEntry.access$13(IndexDiffCacheEntry.java:604)
	at org.eclipse.egit.core.internal.indexdiff.IndexDiffCacheEntry$5.updateIndexDiff(IndexDiffCacheEntry.java:550)
	at org.eclipse.egit.core.internal.indexdiff.IndexDiffUpdateJob.run(IndexDiffUpdateJob.java:77)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-06 11:10:26.840
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-06 11:10:26.841
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 4 0 2020-05-06 11:11:35.943
!MESSAGE Not closed bracket?
!STACK 0
org.eclipse.jgit.errors.InvalidPatternException: Not closed bracket?
	at org.eclipse.jgit.ignore.internal.Strings.convertGlob(Strings.java:444)
	at org.eclipse.jgit.ignore.internal.WildCardMatcher.<init>(WildCardMatcher.java:64)
	at org.eclipse.jgit.ignore.internal.PathMatcher.createNameMatcher0(PathMatcher.java:178)
	at org.eclipse.jgit.ignore.internal.PathMatcher.createMatchers(PathMatcher.java:99)
	at org.eclipse.jgit.ignore.internal.PathMatcher.<init>(PathMatcher.java:84)
	at org.eclipse.jgit.ignore.internal.PathMatcher.createPathMatcher(PathMatcher.java:135)
	at org.eclipse.jgit.ignore.FastIgnoreRule.<init>(FastIgnoreRule.java:129)
	at org.eclipse.jgit.ignore.IgnoreNode.parse(IgnoreNode.java:115)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator$PerDirectoryIgnoreNode.load(WorkingTreeIterator.java:1346)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator$RootIgnoreNode.load(WorkingTreeIterator.java:1365)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.getIgnoreNode(WorkingTreeIterator.java:771)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isDirectoryIgnored(WorkingTreeIterator.java:1611)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isDirectoryIgnored(WorkingTreeIterator.java:1589)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isEntryIgnored(WorkingTreeIterator.java:753)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isEntryIgnored(WorkingTreeIterator.java:713)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isEntryIgnored(WorkingTreeIterator.java:700)
	at org.eclipse.jgit.treewalk.filter.IndexDiffFilter.include(IndexDiffFilter.java:170)
	at org.eclipse.jgit.treewalk.filter.TreeFilter.matchFilter(TreeFilter.java:228)
	at org.eclipse.jgit.treewalk.filter.AndTreeFilter$List.matchFilter(AndTreeFilter.java:190)
	at org.eclipse.jgit.treewalk.TreeWalk.next(TreeWalk.java:853)
	at org.eclipse.jgit.lib.IndexDiff.diff(IndexDiff.java:446)
	at org.eclipse.egit.core.internal.indexdiff.IndexDiffCacheEntry.calcIndexDiffDataIncremental(IndexDiffCacheEntry.java:625)
	at org.eclipse.egit.core.internal.indexdiff.IndexDiffCacheEntry.access$13(IndexDiffCacheEntry.java:604)
	at org.eclipse.egit.core.internal.indexdiff.IndexDiffCacheEntry$5.updateIndexDiff(IndexDiffCacheEntry.java:550)
	at org.eclipse.egit.core.internal.indexdiff.IndexDiffUpdateJob.run(IndexDiffUpdateJob.java:77)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-06 11:11:35.997
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-06 11:11:35.999
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 4 0 2020-05-06 11:11:49.975
!MESSAGE Not closed bracket?
!STACK 0
org.eclipse.jgit.errors.InvalidPatternException: Not closed bracket?
	at org.eclipse.jgit.ignore.internal.Strings.convertGlob(Strings.java:444)
	at org.eclipse.jgit.ignore.internal.WildCardMatcher.<init>(WildCardMatcher.java:64)
	at org.eclipse.jgit.ignore.internal.PathMatcher.createNameMatcher0(PathMatcher.java:178)
	at org.eclipse.jgit.ignore.internal.PathMatcher.createMatchers(PathMatcher.java:99)
	at org.eclipse.jgit.ignore.internal.PathMatcher.<init>(PathMatcher.java:84)
	at org.eclipse.jgit.ignore.internal.PathMatcher.createPathMatcher(PathMatcher.java:135)
	at org.eclipse.jgit.ignore.FastIgnoreRule.<init>(FastIgnoreRule.java:129)
	at org.eclipse.jgit.ignore.IgnoreNode.parse(IgnoreNode.java:115)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator$PerDirectoryIgnoreNode.load(WorkingTreeIterator.java:1346)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator$RootIgnoreNode.load(WorkingTreeIterator.java:1365)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.getIgnoreNode(WorkingTreeIterator.java:771)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isDirectoryIgnored(WorkingTreeIterator.java:1611)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isDirectoryIgnored(WorkingTreeIterator.java:1589)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isEntryIgnored(WorkingTreeIterator.java:753)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isEntryIgnored(WorkingTreeIterator.java:713)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isEntryIgnored(WorkingTreeIterator.java:700)
	at org.eclipse.jgit.treewalk.filter.IndexDiffFilter.include(IndexDiffFilter.java:170)
	at org.eclipse.jgit.treewalk.filter.TreeFilter.matchFilter(TreeFilter.java:228)
	at org.eclipse.jgit.treewalk.filter.AndTreeFilter$List.matchFilter(AndTreeFilter.java:190)
	at org.eclipse.jgit.treewalk.TreeWalk.next(TreeWalk.java:853)
	at org.eclipse.jgit.lib.IndexDiff.diff(IndexDiff.java:446)
	at org.eclipse.egit.core.internal.indexdiff.IndexDiffCacheEntry.calcIndexDiffDataIncremental(IndexDiffCacheEntry.java:625)
	at org.eclipse.egit.core.internal.indexdiff.IndexDiffCacheEntry.access$13(IndexDiffCacheEntry.java:604)
	at org.eclipse.egit.core.internal.indexdiff.IndexDiffCacheEntry$5.updateIndexDiff(IndexDiffCacheEntry.java:550)
	at org.eclipse.egit.core.internal.indexdiff.IndexDiffUpdateJob.run(IndexDiffUpdateJob.java:77)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-06 11:11:50.098
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-06 11:11:50.102
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 4 0 2020-05-06 11:13:38.424
!MESSAGE Not closed bracket?
!STACK 0
org.eclipse.jgit.errors.InvalidPatternException: Not closed bracket?
	at org.eclipse.jgit.ignore.internal.Strings.convertGlob(Strings.java:444)
	at org.eclipse.jgit.ignore.internal.WildCardMatcher.<init>(WildCardMatcher.java:64)
	at org.eclipse.jgit.ignore.internal.PathMatcher.createNameMatcher0(PathMatcher.java:178)
	at org.eclipse.jgit.ignore.internal.PathMatcher.createMatchers(PathMatcher.java:99)
	at org.eclipse.jgit.ignore.internal.PathMatcher.<init>(PathMatcher.java:84)
	at org.eclipse.jgit.ignore.internal.PathMatcher.createPathMatcher(PathMatcher.java:135)
	at org.eclipse.jgit.ignore.FastIgnoreRule.<init>(FastIgnoreRule.java:129)
	at org.eclipse.jgit.ignore.IgnoreNode.parse(IgnoreNode.java:115)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator$PerDirectoryIgnoreNode.load(WorkingTreeIterator.java:1346)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator$RootIgnoreNode.load(WorkingTreeIterator.java:1365)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.getIgnoreNode(WorkingTreeIterator.java:771)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isDirectoryIgnored(WorkingTreeIterator.java:1611)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isDirectoryIgnored(WorkingTreeIterator.java:1589)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isEntryIgnored(WorkingTreeIterator.java:753)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isEntryIgnored(WorkingTreeIterator.java:713)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isEntryIgnored(WorkingTreeIterator.java:700)
	at org.eclipse.jgit.treewalk.filter.IndexDiffFilter.include(IndexDiffFilter.java:170)
	at org.eclipse.jgit.treewalk.filter.TreeFilter.matchFilter(TreeFilter.java:228)
	at org.eclipse.jgit.treewalk.filter.AndTreeFilter$List.matchFilter(AndTreeFilter.java:190)
	at org.eclipse.jgit.treewalk.TreeWalk.next(TreeWalk.java:853)
	at org.eclipse.jgit.lib.IndexDiff.diff(IndexDiff.java:446)
	at org.eclipse.egit.core.internal.indexdiff.IndexDiffCacheEntry.calcIndexDiffDataIncremental(IndexDiffCacheEntry.java:625)
	at org.eclipse.egit.core.internal.indexdiff.IndexDiffCacheEntry.access$13(IndexDiffCacheEntry.java:604)
	at org.eclipse.egit.core.internal.indexdiff.IndexDiffCacheEntry$5.updateIndexDiff(IndexDiffCacheEntry.java:550)
	at org.eclipse.egit.core.internal.indexdiff.IndexDiffUpdateJob.run(IndexDiffUpdateJob.java:77)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-06 11:13:38.477
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-06 11:13:38.478
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 4 0 2020-05-06 11:16:41.726
!MESSAGE Not closed bracket?
!STACK 0
org.eclipse.jgit.errors.InvalidPatternException: Not closed bracket?
	at org.eclipse.jgit.ignore.internal.Strings.convertGlob(Strings.java:444)
	at org.eclipse.jgit.ignore.internal.WildCardMatcher.<init>(WildCardMatcher.java:64)
	at org.eclipse.jgit.ignore.internal.PathMatcher.createNameMatcher0(PathMatcher.java:178)
	at org.eclipse.jgit.ignore.internal.PathMatcher.createMatchers(PathMatcher.java:99)
	at org.eclipse.jgit.ignore.internal.PathMatcher.<init>(PathMatcher.java:84)
	at org.eclipse.jgit.ignore.internal.PathMatcher.createPathMatcher(PathMatcher.java:135)
	at org.eclipse.jgit.ignore.FastIgnoreRule.<init>(FastIgnoreRule.java:129)
	at org.eclipse.jgit.ignore.IgnoreNode.parse(IgnoreNode.java:115)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator$PerDirectoryIgnoreNode.load(WorkingTreeIterator.java:1346)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator$RootIgnoreNode.load(WorkingTreeIterator.java:1365)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.getIgnoreNode(WorkingTreeIterator.java:771)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isDirectoryIgnored(WorkingTreeIterator.java:1611)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isDirectoryIgnored(WorkingTreeIterator.java:1589)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isEntryIgnored(WorkingTreeIterator.java:753)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isEntryIgnored(WorkingTreeIterator.java:713)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isEntryIgnored(WorkingTreeIterator.java:700)
	at org.eclipse.jgit.treewalk.filter.IndexDiffFilter.include(IndexDiffFilter.java:170)
	at org.eclipse.jgit.treewalk.filter.TreeFilter.matchFilter(TreeFilter.java:228)
	at org.eclipse.jgit.treewalk.filter.AndTreeFilter$List.matchFilter(AndTreeFilter.java:190)
	at org.eclipse.jgit.treewalk.TreeWalk.next(TreeWalk.java:853)
	at org.eclipse.jgit.lib.IndexDiff.diff(IndexDiff.java:446)
	at org.eclipse.egit.core.internal.indexdiff.IndexDiffCacheEntry.calcIndexDiffDataIncremental(IndexDiffCacheEntry.java:625)
	at org.eclipse.egit.core.internal.indexdiff.IndexDiffCacheEntry.access$13(IndexDiffCacheEntry.java:604)
	at org.eclipse.egit.core.internal.indexdiff.IndexDiffCacheEntry$5.updateIndexDiff(IndexDiffCacheEntry.java:550)
	at org.eclipse.egit.core.internal.indexdiff.IndexDiffUpdateJob.run(IndexDiffUpdateJob.java:77)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-06 11:16:41.890
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-06 11:16:41.891
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 4 0 2020-05-06 11:17:26.387
!MESSAGE Not closed bracket?
!STACK 0
org.eclipse.jgit.errors.InvalidPatternException: Not closed bracket?
	at org.eclipse.jgit.ignore.internal.Strings.convertGlob(Strings.java:444)
	at org.eclipse.jgit.ignore.internal.WildCardMatcher.<init>(WildCardMatcher.java:64)
	at org.eclipse.jgit.ignore.internal.PathMatcher.createNameMatcher0(PathMatcher.java:178)
	at org.eclipse.jgit.ignore.internal.PathMatcher.createMatchers(PathMatcher.java:99)
	at org.eclipse.jgit.ignore.internal.PathMatcher.<init>(PathMatcher.java:84)
	at org.eclipse.jgit.ignore.internal.PathMatcher.createPathMatcher(PathMatcher.java:135)
	at org.eclipse.jgit.ignore.FastIgnoreRule.<init>(FastIgnoreRule.java:129)
	at org.eclipse.jgit.ignore.IgnoreNode.parse(IgnoreNode.java:115)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator$PerDirectoryIgnoreNode.load(WorkingTreeIterator.java:1346)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator$RootIgnoreNode.load(WorkingTreeIterator.java:1365)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.getIgnoreNode(WorkingTreeIterator.java:771)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isDirectoryIgnored(WorkingTreeIterator.java:1611)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isDirectoryIgnored(WorkingTreeIterator.java:1589)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isEntryIgnored(WorkingTreeIterator.java:753)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isEntryIgnored(WorkingTreeIterator.java:713)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isEntryIgnored(WorkingTreeIterator.java:700)
	at org.eclipse.jgit.treewalk.filter.IndexDiffFilter.include(IndexDiffFilter.java:170)
	at org.eclipse.jgit.treewalk.filter.TreeFilter.matchFilter(TreeFilter.java:228)
	at org.eclipse.jgit.treewalk.filter.AndTreeFilter$List.matchFilter(AndTreeFilter.java:190)
	at org.eclipse.jgit.treewalk.TreeWalk.next(TreeWalk.java:853)
	at org.eclipse.jgit.lib.IndexDiff.diff(IndexDiff.java:446)
	at org.eclipse.egit.core.internal.indexdiff.IndexDiffCacheEntry.calcIndexDiffDataIncremental(IndexDiffCacheEntry.java:625)
	at org.eclipse.egit.core.internal.indexdiff.IndexDiffCacheEntry.access$13(IndexDiffCacheEntry.java:604)
	at org.eclipse.egit.core.internal.indexdiff.IndexDiffCacheEntry$5.updateIndexDiff(IndexDiffCacheEntry.java:550)
	at org.eclipse.egit.core.internal.indexdiff.IndexDiffUpdateJob.run(IndexDiffUpdateJob.java:77)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-06 11:17:26.541
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-06 11:17:26.542
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 4 0 2020-05-06 11:18:15.580
!MESSAGE Not closed bracket?
!STACK 0
org.eclipse.jgit.errors.InvalidPatternException: Not closed bracket?
	at org.eclipse.jgit.ignore.internal.Strings.convertGlob(Strings.java:444)
	at org.eclipse.jgit.ignore.internal.WildCardMatcher.<init>(WildCardMatcher.java:64)
	at org.eclipse.jgit.ignore.internal.PathMatcher.createNameMatcher0(PathMatcher.java:178)
	at org.eclipse.jgit.ignore.internal.PathMatcher.createMatchers(PathMatcher.java:99)
	at org.eclipse.jgit.ignore.internal.PathMatcher.<init>(PathMatcher.java:84)
	at org.eclipse.jgit.ignore.internal.PathMatcher.createPathMatcher(PathMatcher.java:135)
	at org.eclipse.jgit.ignore.FastIgnoreRule.<init>(FastIgnoreRule.java:129)
	at org.eclipse.jgit.ignore.IgnoreNode.parse(IgnoreNode.java:115)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator$PerDirectoryIgnoreNode.load(WorkingTreeIterator.java:1346)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator$RootIgnoreNode.load(WorkingTreeIterator.java:1365)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.getIgnoreNode(WorkingTreeIterator.java:771)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isDirectoryIgnored(WorkingTreeIterator.java:1611)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isDirectoryIgnored(WorkingTreeIterator.java:1589)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isEntryIgnored(WorkingTreeIterator.java:753)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isEntryIgnored(WorkingTreeIterator.java:713)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isEntryIgnored(WorkingTreeIterator.java:700)
	at org.eclipse.jgit.treewalk.filter.IndexDiffFilter.include(IndexDiffFilter.java:170)
	at org.eclipse.jgit.treewalk.filter.TreeFilter.matchFilter(TreeFilter.java:228)
	at org.eclipse.jgit.treewalk.filter.AndTreeFilter$List.matchFilter(AndTreeFilter.java:190)
	at org.eclipse.jgit.treewalk.TreeWalk.next(TreeWalk.java:853)
	at org.eclipse.jgit.lib.IndexDiff.diff(IndexDiff.java:446)
	at org.eclipse.egit.core.internal.indexdiff.IndexDiffCacheEntry.calcIndexDiffDataIncremental(IndexDiffCacheEntry.java:625)
	at org.eclipse.egit.core.internal.indexdiff.IndexDiffCacheEntry.access$13(IndexDiffCacheEntry.java:604)
	at org.eclipse.egit.core.internal.indexdiff.IndexDiffCacheEntry$5.updateIndexDiff(IndexDiffCacheEntry.java:550)
	at org.eclipse.egit.core.internal.indexdiff.IndexDiffUpdateJob.run(IndexDiffUpdateJob.java:77)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-06 11:18:15.741
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-06 11:18:15.743
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 4 0 2020-05-06 11:18:23.597
!MESSAGE Not closed bracket?
!STACK 0
org.eclipse.jgit.errors.InvalidPatternException: Not closed bracket?
	at org.eclipse.jgit.ignore.internal.Strings.convertGlob(Strings.java:444)
	at org.eclipse.jgit.ignore.internal.WildCardMatcher.<init>(WildCardMatcher.java:64)
	at org.eclipse.jgit.ignore.internal.PathMatcher.createNameMatcher0(PathMatcher.java:178)
	at org.eclipse.jgit.ignore.internal.PathMatcher.createMatchers(PathMatcher.java:99)
	at org.eclipse.jgit.ignore.internal.PathMatcher.<init>(PathMatcher.java:84)
	at org.eclipse.jgit.ignore.internal.PathMatcher.createPathMatcher(PathMatcher.java:135)
	at org.eclipse.jgit.ignore.FastIgnoreRule.<init>(FastIgnoreRule.java:129)
	at org.eclipse.jgit.ignore.IgnoreNode.parse(IgnoreNode.java:115)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator$PerDirectoryIgnoreNode.load(WorkingTreeIterator.java:1346)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator$RootIgnoreNode.load(WorkingTreeIterator.java:1365)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.getIgnoreNode(WorkingTreeIterator.java:771)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isDirectoryIgnored(WorkingTreeIterator.java:1611)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isDirectoryIgnored(WorkingTreeIterator.java:1589)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isEntryIgnored(WorkingTreeIterator.java:753)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isEntryIgnored(WorkingTreeIterator.java:713)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isEntryIgnored(WorkingTreeIterator.java:700)
	at org.eclipse.jgit.treewalk.filter.IndexDiffFilter.include(IndexDiffFilter.java:170)
	at org.eclipse.jgit.treewalk.filter.TreeFilter.matchFilter(TreeFilter.java:228)
	at org.eclipse.jgit.treewalk.filter.AndTreeFilter$List.matchFilter(AndTreeFilter.java:190)
	at org.eclipse.jgit.treewalk.TreeWalk.next(TreeWalk.java:853)
	at org.eclipse.jgit.lib.IndexDiff.diff(IndexDiff.java:446)
	at org.eclipse.egit.core.internal.indexdiff.IndexDiffCacheEntry.calcIndexDiffDataIncremental(IndexDiffCacheEntry.java:625)
	at org.eclipse.egit.core.internal.indexdiff.IndexDiffCacheEntry.access$13(IndexDiffCacheEntry.java:604)
	at org.eclipse.egit.core.internal.indexdiff.IndexDiffCacheEntry$5.updateIndexDiff(IndexDiffCacheEntry.java:550)
	at org.eclipse.egit.core.internal.indexdiff.IndexDiffUpdateJob.run(IndexDiffUpdateJob.java:77)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-06 11:18:23.754
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-06 11:18:23.756
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 4 0 2020-05-06 11:18:50.234
!MESSAGE Not closed bracket?
!STACK 0
org.eclipse.jgit.errors.InvalidPatternException: Not closed bracket?
	at org.eclipse.jgit.ignore.internal.Strings.convertGlob(Strings.java:444)
	at org.eclipse.jgit.ignore.internal.WildCardMatcher.<init>(WildCardMatcher.java:64)
	at org.eclipse.jgit.ignore.internal.PathMatcher.createNameMatcher0(PathMatcher.java:178)
	at org.eclipse.jgit.ignore.internal.PathMatcher.createMatchers(PathMatcher.java:99)
	at org.eclipse.jgit.ignore.internal.PathMatcher.<init>(PathMatcher.java:84)
	at org.eclipse.jgit.ignore.internal.PathMatcher.createPathMatcher(PathMatcher.java:135)
	at org.eclipse.jgit.ignore.FastIgnoreRule.<init>(FastIgnoreRule.java:129)
	at org.eclipse.jgit.ignore.IgnoreNode.parse(IgnoreNode.java:115)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator$PerDirectoryIgnoreNode.load(WorkingTreeIterator.java:1346)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator$RootIgnoreNode.load(WorkingTreeIterator.java:1365)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.getIgnoreNode(WorkingTreeIterator.java:771)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isDirectoryIgnored(WorkingTreeIterator.java:1611)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isDirectoryIgnored(WorkingTreeIterator.java:1589)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isEntryIgnored(WorkingTreeIterator.java:753)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isEntryIgnored(WorkingTreeIterator.java:713)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isEntryIgnored(WorkingTreeIterator.java:700)
	at org.eclipse.jgit.treewalk.filter.IndexDiffFilter.include(IndexDiffFilter.java:170)
	at org.eclipse.jgit.treewalk.filter.TreeFilter.matchFilter(TreeFilter.java:228)
	at org.eclipse.jgit.treewalk.filter.AndTreeFilter$List.matchFilter(AndTreeFilter.java:190)
	at org.eclipse.jgit.treewalk.TreeWalk.next(TreeWalk.java:853)
	at org.eclipse.jgit.lib.IndexDiff.diff(IndexDiff.java:446)
	at org.eclipse.egit.core.internal.indexdiff.IndexDiffCacheEntry.calcIndexDiffDataIncremental(IndexDiffCacheEntry.java:625)
	at org.eclipse.egit.core.internal.indexdiff.IndexDiffCacheEntry.access$13(IndexDiffCacheEntry.java:604)
	at org.eclipse.egit.core.internal.indexdiff.IndexDiffCacheEntry$5.updateIndexDiff(IndexDiffCacheEntry.java:550)
	at org.eclipse.egit.core.internal.indexdiff.IndexDiffUpdateJob.run(IndexDiffUpdateJob.java:77)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-06 11:18:50.335
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-06 11:18:50.337
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 4 0 2020-05-06 11:19:05.254
!MESSAGE Not closed bracket?
!STACK 0
org.eclipse.jgit.errors.InvalidPatternException: Not closed bracket?
	at org.eclipse.jgit.ignore.internal.Strings.convertGlob(Strings.java:444)
	at org.eclipse.jgit.ignore.internal.WildCardMatcher.<init>(WildCardMatcher.java:64)
	at org.eclipse.jgit.ignore.internal.PathMatcher.createNameMatcher0(PathMatcher.java:178)
	at org.eclipse.jgit.ignore.internal.PathMatcher.createMatchers(PathMatcher.java:99)
	at org.eclipse.jgit.ignore.internal.PathMatcher.<init>(PathMatcher.java:84)
	at org.eclipse.jgit.ignore.internal.PathMatcher.createPathMatcher(PathMatcher.java:135)
	at org.eclipse.jgit.ignore.FastIgnoreRule.<init>(FastIgnoreRule.java:129)
	at org.eclipse.jgit.ignore.IgnoreNode.parse(IgnoreNode.java:115)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator$PerDirectoryIgnoreNode.load(WorkingTreeIterator.java:1346)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator$RootIgnoreNode.load(WorkingTreeIterator.java:1365)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.getIgnoreNode(WorkingTreeIterator.java:771)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isDirectoryIgnored(WorkingTreeIterator.java:1611)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isDirectoryIgnored(WorkingTreeIterator.java:1589)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isEntryIgnored(WorkingTreeIterator.java:753)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isEntryIgnored(WorkingTreeIterator.java:713)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isEntryIgnored(WorkingTreeIterator.java:700)
	at org.eclipse.jgit.treewalk.filter.IndexDiffFilter.include(IndexDiffFilter.java:170)
	at org.eclipse.jgit.treewalk.filter.TreeFilter.matchFilter(TreeFilter.java:228)
	at org.eclipse.jgit.treewalk.filter.AndTreeFilter$List.matchFilter(AndTreeFilter.java:190)
	at org.eclipse.jgit.treewalk.TreeWalk.next(TreeWalk.java:853)
	at org.eclipse.jgit.lib.IndexDiff.diff(IndexDiff.java:446)
	at org.eclipse.egit.core.internal.indexdiff.IndexDiffCacheEntry.calcIndexDiffDataIncremental(IndexDiffCacheEntry.java:625)
	at org.eclipse.egit.core.internal.indexdiff.IndexDiffCacheEntry.access$13(IndexDiffCacheEntry.java:604)
	at org.eclipse.egit.core.internal.indexdiff.IndexDiffCacheEntry$5.updateIndexDiff(IndexDiffCacheEntry.java:550)
	at org.eclipse.egit.core.internal.indexdiff.IndexDiffUpdateJob.run(IndexDiffUpdateJob.java:77)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-06 11:19:05.355
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-06 11:19:05.356
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 4 0 2020-05-06 11:19:22.085
!MESSAGE Not closed bracket?
!STACK 0
org.eclipse.jgit.errors.InvalidPatternException: Not closed bracket?
	at org.eclipse.jgit.ignore.internal.Strings.convertGlob(Strings.java:444)
	at org.eclipse.jgit.ignore.internal.WildCardMatcher.<init>(WildCardMatcher.java:64)
	at org.eclipse.jgit.ignore.internal.PathMatcher.createNameMatcher0(PathMatcher.java:178)
	at org.eclipse.jgit.ignore.internal.PathMatcher.createMatchers(PathMatcher.java:99)
	at org.eclipse.jgit.ignore.internal.PathMatcher.<init>(PathMatcher.java:84)
	at org.eclipse.jgit.ignore.internal.PathMatcher.createPathMatcher(PathMatcher.java:135)
	at org.eclipse.jgit.ignore.FastIgnoreRule.<init>(FastIgnoreRule.java:129)
	at org.eclipse.jgit.ignore.IgnoreNode.parse(IgnoreNode.java:115)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator$PerDirectoryIgnoreNode.load(WorkingTreeIterator.java:1346)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator$RootIgnoreNode.load(WorkingTreeIterator.java:1365)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.getIgnoreNode(WorkingTreeIterator.java:771)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isDirectoryIgnored(WorkingTreeIterator.java:1611)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isDirectoryIgnored(WorkingTreeIterator.java:1589)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isEntryIgnored(WorkingTreeIterator.java:753)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isEntryIgnored(WorkingTreeIterator.java:713)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isEntryIgnored(WorkingTreeIterator.java:700)
	at org.eclipse.jgit.treewalk.filter.IndexDiffFilter.include(IndexDiffFilter.java:170)
	at org.eclipse.jgit.treewalk.filter.TreeFilter.matchFilter(TreeFilter.java:228)
	at org.eclipse.jgit.treewalk.filter.AndTreeFilter$List.matchFilter(AndTreeFilter.java:190)
	at org.eclipse.jgit.treewalk.TreeWalk.next(TreeWalk.java:853)
	at org.eclipse.jgit.lib.IndexDiff.diff(IndexDiff.java:446)
	at org.eclipse.egit.core.internal.indexdiff.IndexDiffCacheEntry.calcIndexDiffDataIncremental(IndexDiffCacheEntry.java:625)
	at org.eclipse.egit.core.internal.indexdiff.IndexDiffCacheEntry.access$13(IndexDiffCacheEntry.java:604)
	at org.eclipse.egit.core.internal.indexdiff.IndexDiffCacheEntry$5.updateIndexDiff(IndexDiffCacheEntry.java:550)
	at org.eclipse.egit.core.internal.indexdiff.IndexDiffUpdateJob.run(IndexDiffUpdateJob.java:77)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-06 11:19:22.187
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-06 11:19:22.188
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 4 0 2020-05-06 11:20:10.933
!MESSAGE Not closed bracket?
!STACK 0
org.eclipse.jgit.errors.InvalidPatternException: Not closed bracket?
	at org.eclipse.jgit.ignore.internal.Strings.convertGlob(Strings.java:444)
	at org.eclipse.jgit.ignore.internal.WildCardMatcher.<init>(WildCardMatcher.java:64)
	at org.eclipse.jgit.ignore.internal.PathMatcher.createNameMatcher0(PathMatcher.java:178)
	at org.eclipse.jgit.ignore.internal.PathMatcher.createMatchers(PathMatcher.java:99)
	at org.eclipse.jgit.ignore.internal.PathMatcher.<init>(PathMatcher.java:84)
	at org.eclipse.jgit.ignore.internal.PathMatcher.createPathMatcher(PathMatcher.java:135)
	at org.eclipse.jgit.ignore.FastIgnoreRule.<init>(FastIgnoreRule.java:129)
	at org.eclipse.jgit.ignore.IgnoreNode.parse(IgnoreNode.java:115)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator$PerDirectoryIgnoreNode.load(WorkingTreeIterator.java:1346)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator$RootIgnoreNode.load(WorkingTreeIterator.java:1365)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.getIgnoreNode(WorkingTreeIterator.java:771)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isDirectoryIgnored(WorkingTreeIterator.java:1611)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isDirectoryIgnored(WorkingTreeIterator.java:1589)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isEntryIgnored(WorkingTreeIterator.java:753)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isEntryIgnored(WorkingTreeIterator.java:713)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isEntryIgnored(WorkingTreeIterator.java:700)
	at org.eclipse.jgit.treewalk.filter.IndexDiffFilter.include(IndexDiffFilter.java:170)
	at org.eclipse.jgit.treewalk.filter.TreeFilter.matchFilter(TreeFilter.java:228)
	at org.eclipse.jgit.treewalk.filter.AndTreeFilter$List.matchFilter(AndTreeFilter.java:190)
	at org.eclipse.jgit.treewalk.TreeWalk.next(TreeWalk.java:853)
	at org.eclipse.jgit.lib.IndexDiff.diff(IndexDiff.java:446)
	at org.eclipse.egit.core.internal.indexdiff.IndexDiffCacheEntry.calcIndexDiffDataIncremental(IndexDiffCacheEntry.java:625)
	at org.eclipse.egit.core.internal.indexdiff.IndexDiffCacheEntry.access$13(IndexDiffCacheEntry.java:604)
	at org.eclipse.egit.core.internal.indexdiff.IndexDiffCacheEntry$5.updateIndexDiff(IndexDiffCacheEntry.java:550)
	at org.eclipse.egit.core.internal.indexdiff.IndexDiffUpdateJob.run(IndexDiffUpdateJob.java:77)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-06 11:20:10.999
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-06 11:20:11.000
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 4 0 2020-05-06 11:22:30.441
!MESSAGE Not closed bracket?
!STACK 0
org.eclipse.jgit.errors.InvalidPatternException: Not closed bracket?
	at org.eclipse.jgit.ignore.internal.Strings.convertGlob(Strings.java:444)
	at org.eclipse.jgit.ignore.internal.WildCardMatcher.<init>(WildCardMatcher.java:64)
	at org.eclipse.jgit.ignore.internal.PathMatcher.createNameMatcher0(PathMatcher.java:178)
	at org.eclipse.jgit.ignore.internal.PathMatcher.createMatchers(PathMatcher.java:99)
	at org.eclipse.jgit.ignore.internal.PathMatcher.<init>(PathMatcher.java:84)
	at org.eclipse.jgit.ignore.internal.PathMatcher.createPathMatcher(PathMatcher.java:135)
	at org.eclipse.jgit.ignore.FastIgnoreRule.<init>(FastIgnoreRule.java:129)
	at org.eclipse.jgit.ignore.IgnoreNode.parse(IgnoreNode.java:115)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator$PerDirectoryIgnoreNode.load(WorkingTreeIterator.java:1346)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator$RootIgnoreNode.load(WorkingTreeIterator.java:1365)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.getIgnoreNode(WorkingTreeIterator.java:771)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isDirectoryIgnored(WorkingTreeIterator.java:1611)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isDirectoryIgnored(WorkingTreeIterator.java:1589)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isEntryIgnored(WorkingTreeIterator.java:753)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isEntryIgnored(WorkingTreeIterator.java:713)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isEntryIgnored(WorkingTreeIterator.java:700)
	at org.eclipse.jgit.treewalk.filter.IndexDiffFilter.include(IndexDiffFilter.java:170)
	at org.eclipse.jgit.treewalk.filter.TreeFilter.matchFilter(TreeFilter.java:228)
	at org.eclipse.jgit.treewalk.filter.AndTreeFilter$List.matchFilter(AndTreeFilter.java:190)
	at org.eclipse.jgit.treewalk.TreeWalk.next(TreeWalk.java:853)
	at org.eclipse.jgit.lib.IndexDiff.diff(IndexDiff.java:446)
	at org.eclipse.egit.core.internal.indexdiff.IndexDiffCacheEntry.calcIndexDiffDataIncremental(IndexDiffCacheEntry.java:625)
	at org.eclipse.egit.core.internal.indexdiff.IndexDiffCacheEntry.access$13(IndexDiffCacheEntry.java:604)
	at org.eclipse.egit.core.internal.indexdiff.IndexDiffCacheEntry$5.updateIndexDiff(IndexDiffCacheEntry.java:550)
	at org.eclipse.egit.core.internal.indexdiff.IndexDiffUpdateJob.run(IndexDiffUpdateJob.java:77)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-06 11:22:30.564
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-06 11:22:30.566
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 4 0 2020-05-06 11:22:41.828
!MESSAGE Not closed bracket?
!STACK 0
org.eclipse.jgit.errors.InvalidPatternException: Not closed bracket?
	at org.eclipse.jgit.ignore.internal.Strings.convertGlob(Strings.java:444)
	at org.eclipse.jgit.ignore.internal.WildCardMatcher.<init>(WildCardMatcher.java:64)
	at org.eclipse.jgit.ignore.internal.PathMatcher.createNameMatcher0(PathMatcher.java:178)
	at org.eclipse.jgit.ignore.internal.PathMatcher.createMatchers(PathMatcher.java:99)
	at org.eclipse.jgit.ignore.internal.PathMatcher.<init>(PathMatcher.java:84)
	at org.eclipse.jgit.ignore.internal.PathMatcher.createPathMatcher(PathMatcher.java:135)
	at org.eclipse.jgit.ignore.FastIgnoreRule.<init>(FastIgnoreRule.java:129)
	at org.eclipse.jgit.ignore.IgnoreNode.parse(IgnoreNode.java:115)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator$PerDirectoryIgnoreNode.load(WorkingTreeIterator.java:1346)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator$RootIgnoreNode.load(WorkingTreeIterator.java:1365)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.getIgnoreNode(WorkingTreeIterator.java:771)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isDirectoryIgnored(WorkingTreeIterator.java:1611)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isDirectoryIgnored(WorkingTreeIterator.java:1589)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isEntryIgnored(WorkingTreeIterator.java:753)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isEntryIgnored(WorkingTreeIterator.java:713)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isEntryIgnored(WorkingTreeIterator.java:700)
	at org.eclipse.jgit.treewalk.filter.IndexDiffFilter.include(IndexDiffFilter.java:170)
	at org.eclipse.jgit.treewalk.filter.TreeFilter.matchFilter(TreeFilter.java:228)
	at org.eclipse.jgit.treewalk.filter.AndTreeFilter$List.matchFilter(AndTreeFilter.java:190)
	at org.eclipse.jgit.treewalk.TreeWalk.next(TreeWalk.java:853)
	at org.eclipse.jgit.lib.IndexDiff.diff(IndexDiff.java:446)
	at org.eclipse.egit.core.internal.indexdiff.IndexDiffCacheEntry.calcIndexDiffDataIncremental(IndexDiffCacheEntry.java:625)
	at org.eclipse.egit.core.internal.indexdiff.IndexDiffCacheEntry.access$13(IndexDiffCacheEntry.java:604)
	at org.eclipse.egit.core.internal.indexdiff.IndexDiffCacheEntry$5.updateIndexDiff(IndexDiffCacheEntry.java:550)
	at org.eclipse.egit.core.internal.indexdiff.IndexDiffUpdateJob.run(IndexDiffUpdateJob.java:77)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-06 11:22:41.986
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-06 11:22:41.987
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 4 0 2020-05-06 11:24:48.869
!MESSAGE Not closed bracket?
!STACK 0
org.eclipse.jgit.errors.InvalidPatternException: Not closed bracket?
	at org.eclipse.jgit.ignore.internal.Strings.convertGlob(Strings.java:444)
	at org.eclipse.jgit.ignore.internal.WildCardMatcher.<init>(WildCardMatcher.java:64)
	at org.eclipse.jgit.ignore.internal.PathMatcher.createNameMatcher0(PathMatcher.java:178)
	at org.eclipse.jgit.ignore.internal.PathMatcher.createMatchers(PathMatcher.java:99)
	at org.eclipse.jgit.ignore.internal.PathMatcher.<init>(PathMatcher.java:84)
	at org.eclipse.jgit.ignore.internal.PathMatcher.createPathMatcher(PathMatcher.java:135)
	at org.eclipse.jgit.ignore.FastIgnoreRule.<init>(FastIgnoreRule.java:129)
	at org.eclipse.jgit.ignore.IgnoreNode.parse(IgnoreNode.java:115)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator$PerDirectoryIgnoreNode.load(WorkingTreeIterator.java:1346)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator$RootIgnoreNode.load(WorkingTreeIterator.java:1365)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.getIgnoreNode(WorkingTreeIterator.java:771)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isDirectoryIgnored(WorkingTreeIterator.java:1611)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isDirectoryIgnored(WorkingTreeIterator.java:1589)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isEntryIgnored(WorkingTreeIterator.java:753)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isEntryIgnored(WorkingTreeIterator.java:713)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isEntryIgnored(WorkingTreeIterator.java:700)
	at org.eclipse.jgit.treewalk.filter.IndexDiffFilter.include(IndexDiffFilter.java:170)
	at org.eclipse.jgit.treewalk.filter.TreeFilter.matchFilter(TreeFilter.java:228)
	at org.eclipse.jgit.treewalk.filter.AndTreeFilter$List.matchFilter(AndTreeFilter.java:190)
	at org.eclipse.jgit.treewalk.TreeWalk.next(TreeWalk.java:853)
	at org.eclipse.jgit.lib.IndexDiff.diff(IndexDiff.java:446)
	at org.eclipse.egit.core.internal.indexdiff.IndexDiffCacheEntry.calcIndexDiffDataIncremental(IndexDiffCacheEntry.java:625)
	at org.eclipse.egit.core.internal.indexdiff.IndexDiffCacheEntry.access$13(IndexDiffCacheEntry.java:604)
	at org.eclipse.egit.core.internal.indexdiff.IndexDiffCacheEntry$5.updateIndexDiff(IndexDiffCacheEntry.java:550)
	at org.eclipse.egit.core.internal.indexdiff.IndexDiffUpdateJob.run(IndexDiffUpdateJob.java:77)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-06 11:24:49.021
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-06 11:24:49.022
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 4 0 2020-05-06 11:26:14.805
!MESSAGE Not closed bracket?
!STACK 0
org.eclipse.jgit.errors.InvalidPatternException: Not closed bracket?
	at org.eclipse.jgit.ignore.internal.Strings.convertGlob(Strings.java:444)
	at org.eclipse.jgit.ignore.internal.WildCardMatcher.<init>(WildCardMatcher.java:64)
	at org.eclipse.jgit.ignore.internal.PathMatcher.createNameMatcher0(PathMatcher.java:178)
	at org.eclipse.jgit.ignore.internal.PathMatcher.createMatchers(PathMatcher.java:99)
	at org.eclipse.jgit.ignore.internal.PathMatcher.<init>(PathMatcher.java:84)
	at org.eclipse.jgit.ignore.internal.PathMatcher.createPathMatcher(PathMatcher.java:135)
	at org.eclipse.jgit.ignore.FastIgnoreRule.<init>(FastIgnoreRule.java:129)
	at org.eclipse.jgit.ignore.IgnoreNode.parse(IgnoreNode.java:115)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator$PerDirectoryIgnoreNode.load(WorkingTreeIterator.java:1346)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator$RootIgnoreNode.load(WorkingTreeIterator.java:1365)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.getIgnoreNode(WorkingTreeIterator.java:771)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isDirectoryIgnored(WorkingTreeIterator.java:1611)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isDirectoryIgnored(WorkingTreeIterator.java:1589)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isEntryIgnored(WorkingTreeIterator.java:753)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isEntryIgnored(WorkingTreeIterator.java:713)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isEntryIgnored(WorkingTreeIterator.java:700)
	at org.eclipse.jgit.treewalk.filter.IndexDiffFilter.include(IndexDiffFilter.java:170)
	at org.eclipse.jgit.treewalk.filter.TreeFilter.matchFilter(TreeFilter.java:228)
	at org.eclipse.jgit.treewalk.filter.AndTreeFilter$List.matchFilter(AndTreeFilter.java:190)
	at org.eclipse.jgit.treewalk.TreeWalk.next(TreeWalk.java:853)
	at org.eclipse.jgit.lib.IndexDiff.diff(IndexDiff.java:446)
	at org.eclipse.egit.core.internal.indexdiff.IndexDiffCacheEntry.calcIndexDiffDataIncremental(IndexDiffCacheEntry.java:625)
	at org.eclipse.egit.core.internal.indexdiff.IndexDiffCacheEntry.access$13(IndexDiffCacheEntry.java:604)
	at org.eclipse.egit.core.internal.indexdiff.IndexDiffCacheEntry$5.updateIndexDiff(IndexDiffCacheEntry.java:550)
	at org.eclipse.egit.core.internal.indexdiff.IndexDiffUpdateJob.run(IndexDiffUpdateJob.java:77)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-06 11:26:14.957
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-06 11:26:14.959
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 4 0 2020-05-06 11:26:53.086
!MESSAGE Not closed bracket?
!STACK 0
org.eclipse.jgit.errors.InvalidPatternException: Not closed bracket?
	at org.eclipse.jgit.ignore.internal.Strings.convertGlob(Strings.java:444)
	at org.eclipse.jgit.ignore.internal.WildCardMatcher.<init>(WildCardMatcher.java:64)
	at org.eclipse.jgit.ignore.internal.PathMatcher.createNameMatcher0(PathMatcher.java:178)
	at org.eclipse.jgit.ignore.internal.PathMatcher.createMatchers(PathMatcher.java:99)
	at org.eclipse.jgit.ignore.internal.PathMatcher.<init>(PathMatcher.java:84)
	at org.eclipse.jgit.ignore.internal.PathMatcher.createPathMatcher(PathMatcher.java:135)
	at org.eclipse.jgit.ignore.FastIgnoreRule.<init>(FastIgnoreRule.java:129)
	at org.eclipse.jgit.ignore.IgnoreNode.parse(IgnoreNode.java:115)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator$PerDirectoryIgnoreNode.load(WorkingTreeIterator.java:1346)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator$RootIgnoreNode.load(WorkingTreeIterator.java:1365)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.getIgnoreNode(WorkingTreeIterator.java:771)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isDirectoryIgnored(WorkingTreeIterator.java:1611)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isDirectoryIgnored(WorkingTreeIterator.java:1589)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isEntryIgnored(WorkingTreeIterator.java:753)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isEntryIgnored(WorkingTreeIterator.java:713)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isEntryIgnored(WorkingTreeIterator.java:700)
	at org.eclipse.jgit.treewalk.filter.IndexDiffFilter.include(IndexDiffFilter.java:170)
	at org.eclipse.jgit.treewalk.filter.TreeFilter.matchFilter(TreeFilter.java:228)
	at org.eclipse.jgit.treewalk.filter.AndTreeFilter$List.matchFilter(AndTreeFilter.java:190)
	at org.eclipse.jgit.treewalk.TreeWalk.next(TreeWalk.java:853)
	at org.eclipse.jgit.lib.IndexDiff.diff(IndexDiff.java:446)
	at org.eclipse.egit.core.internal.indexdiff.IndexDiffCacheEntry.calcIndexDiffDataIncremental(IndexDiffCacheEntry.java:625)
	at org.eclipse.egit.core.internal.indexdiff.IndexDiffCacheEntry.access$13(IndexDiffCacheEntry.java:604)
	at org.eclipse.egit.core.internal.indexdiff.IndexDiffCacheEntry$5.updateIndexDiff(IndexDiffCacheEntry.java:550)
	at org.eclipse.egit.core.internal.indexdiff.IndexDiffUpdateJob.run(IndexDiffUpdateJob.java:77)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-06 11:26:53.187
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-06 11:26:53.189
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 4 0 2020-05-06 11:27:25.201
!MESSAGE Not closed bracket?
!STACK 0
org.eclipse.jgit.errors.InvalidPatternException: Not closed bracket?
	at org.eclipse.jgit.ignore.internal.Strings.convertGlob(Strings.java:444)
	at org.eclipse.jgit.ignore.internal.WildCardMatcher.<init>(WildCardMatcher.java:64)
	at org.eclipse.jgit.ignore.internal.PathMatcher.createNameMatcher0(PathMatcher.java:178)
	at org.eclipse.jgit.ignore.internal.PathMatcher.createMatchers(PathMatcher.java:99)
	at org.eclipse.jgit.ignore.internal.PathMatcher.<init>(PathMatcher.java:84)
	at org.eclipse.jgit.ignore.internal.PathMatcher.createPathMatcher(PathMatcher.java:135)
	at org.eclipse.jgit.ignore.FastIgnoreRule.<init>(FastIgnoreRule.java:129)
	at org.eclipse.jgit.ignore.IgnoreNode.parse(IgnoreNode.java:115)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator$PerDirectoryIgnoreNode.load(WorkingTreeIterator.java:1346)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator$RootIgnoreNode.load(WorkingTreeIterator.java:1365)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.getIgnoreNode(WorkingTreeIterator.java:771)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isDirectoryIgnored(WorkingTreeIterator.java:1611)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isDirectoryIgnored(WorkingTreeIterator.java:1589)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isEntryIgnored(WorkingTreeIterator.java:753)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isEntryIgnored(WorkingTreeIterator.java:713)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isEntryIgnored(WorkingTreeIterator.java:700)
	at org.eclipse.jgit.treewalk.filter.IndexDiffFilter.include(IndexDiffFilter.java:170)
	at org.eclipse.jgit.treewalk.filter.TreeFilter.matchFilter(TreeFilter.java:228)
	at org.eclipse.jgit.treewalk.filter.AndTreeFilter$List.matchFilter(AndTreeFilter.java:190)
	at org.eclipse.jgit.treewalk.TreeWalk.next(TreeWalk.java:853)
	at org.eclipse.jgit.lib.IndexDiff.diff(IndexDiff.java:446)
	at org.eclipse.egit.core.internal.indexdiff.IndexDiffCacheEntry.calcIndexDiffDataIncremental(IndexDiffCacheEntry.java:625)
	at org.eclipse.egit.core.internal.indexdiff.IndexDiffCacheEntry.access$13(IndexDiffCacheEntry.java:604)
	at org.eclipse.egit.core.internal.indexdiff.IndexDiffCacheEntry$5.updateIndexDiff(IndexDiffCacheEntry.java:550)
	at org.eclipse.egit.core.internal.indexdiff.IndexDiffUpdateJob.run(IndexDiffUpdateJob.java:77)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-06 11:27:25.304
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-06 11:27:25.306
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 4 0 2020-05-06 11:28:07.660
!MESSAGE Not closed bracket?
!STACK 0
org.eclipse.jgit.errors.InvalidPatternException: Not closed bracket?
	at org.eclipse.jgit.ignore.internal.Strings.convertGlob(Strings.java:444)
	at org.eclipse.jgit.ignore.internal.WildCardMatcher.<init>(WildCardMatcher.java:64)
	at org.eclipse.jgit.ignore.internal.PathMatcher.createNameMatcher0(PathMatcher.java:178)
	at org.eclipse.jgit.ignore.internal.PathMatcher.createMatchers(PathMatcher.java:99)
	at org.eclipse.jgit.ignore.internal.PathMatcher.<init>(PathMatcher.java:84)
	at org.eclipse.jgit.ignore.internal.PathMatcher.createPathMatcher(PathMatcher.java:135)
	at org.eclipse.jgit.ignore.FastIgnoreRule.<init>(FastIgnoreRule.java:129)
	at org.eclipse.jgit.ignore.IgnoreNode.parse(IgnoreNode.java:115)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator$PerDirectoryIgnoreNode.load(WorkingTreeIterator.java:1346)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator$RootIgnoreNode.load(WorkingTreeIterator.java:1365)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.getIgnoreNode(WorkingTreeIterator.java:771)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isDirectoryIgnored(WorkingTreeIterator.java:1611)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isDirectoryIgnored(WorkingTreeIterator.java:1589)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isEntryIgnored(WorkingTreeIterator.java:753)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isEntryIgnored(WorkingTreeIterator.java:713)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isEntryIgnored(WorkingTreeIterator.java:700)
	at org.eclipse.jgit.treewalk.filter.IndexDiffFilter.include(IndexDiffFilter.java:170)
	at org.eclipse.jgit.treewalk.filter.TreeFilter.matchFilter(TreeFilter.java:228)
	at org.eclipse.jgit.treewalk.filter.AndTreeFilter$List.matchFilter(AndTreeFilter.java:190)
	at org.eclipse.jgit.treewalk.TreeWalk.next(TreeWalk.java:853)
	at org.eclipse.jgit.lib.IndexDiff.diff(IndexDiff.java:446)
	at org.eclipse.egit.core.internal.indexdiff.IndexDiffCacheEntry.calcIndexDiffDataIncremental(IndexDiffCacheEntry.java:625)
	at org.eclipse.egit.core.internal.indexdiff.IndexDiffCacheEntry.access$13(IndexDiffCacheEntry.java:604)
	at org.eclipse.egit.core.internal.indexdiff.IndexDiffCacheEntry$5.updateIndexDiff(IndexDiffCacheEntry.java:550)
	at org.eclipse.egit.core.internal.indexdiff.IndexDiffUpdateJob.run(IndexDiffUpdateJob.java:77)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-06 11:28:07.765
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-06 11:28:07.767
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 4 0 2020-05-06 11:28:43.955
!MESSAGE Not closed bracket?
!STACK 0
org.eclipse.jgit.errors.InvalidPatternException: Not closed bracket?
	at org.eclipse.jgit.ignore.internal.Strings.convertGlob(Strings.java:444)
	at org.eclipse.jgit.ignore.internal.WildCardMatcher.<init>(WildCardMatcher.java:64)
	at org.eclipse.jgit.ignore.internal.PathMatcher.createNameMatcher0(PathMatcher.java:178)
	at org.eclipse.jgit.ignore.internal.PathMatcher.createMatchers(PathMatcher.java:99)
	at org.eclipse.jgit.ignore.internal.PathMatcher.<init>(PathMatcher.java:84)
	at org.eclipse.jgit.ignore.internal.PathMatcher.createPathMatcher(PathMatcher.java:135)
	at org.eclipse.jgit.ignore.FastIgnoreRule.<init>(FastIgnoreRule.java:129)
	at org.eclipse.jgit.ignore.IgnoreNode.parse(IgnoreNode.java:115)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator$PerDirectoryIgnoreNode.load(WorkingTreeIterator.java:1346)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator$RootIgnoreNode.load(WorkingTreeIterator.java:1365)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.getIgnoreNode(WorkingTreeIterator.java:771)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isDirectoryIgnored(WorkingTreeIterator.java:1611)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isDirectoryIgnored(WorkingTreeIterator.java:1589)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isEntryIgnored(WorkingTreeIterator.java:753)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isEntryIgnored(WorkingTreeIterator.java:713)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isEntryIgnored(WorkingTreeIterator.java:700)
	at org.eclipse.jgit.treewalk.filter.IndexDiffFilter.include(IndexDiffFilter.java:170)
	at org.eclipse.jgit.treewalk.filter.TreeFilter.matchFilter(TreeFilter.java:228)
	at org.eclipse.jgit.treewalk.filter.AndTreeFilter$List.matchFilter(AndTreeFilter.java:190)
	at org.eclipse.jgit.treewalk.TreeWalk.next(TreeWalk.java:853)
	at org.eclipse.jgit.lib.IndexDiff.diff(IndexDiff.java:446)
	at org.eclipse.egit.core.internal.indexdiff.IndexDiffCacheEntry.calcIndexDiffDataIncremental(IndexDiffCacheEntry.java:625)
	at org.eclipse.egit.core.internal.indexdiff.IndexDiffCacheEntry.access$13(IndexDiffCacheEntry.java:604)
	at org.eclipse.egit.core.internal.indexdiff.IndexDiffCacheEntry$5.updateIndexDiff(IndexDiffCacheEntry.java:550)
	at org.eclipse.egit.core.internal.indexdiff.IndexDiffUpdateJob.run(IndexDiffUpdateJob.java:77)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-06 11:28:44.056
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-06 11:28:44.057
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 4 0 2020-05-06 11:29:15.968
!MESSAGE Not closed bracket?
!STACK 0
org.eclipse.jgit.errors.InvalidPatternException: Not closed bracket?
	at org.eclipse.jgit.ignore.internal.Strings.convertGlob(Strings.java:444)
	at org.eclipse.jgit.ignore.internal.WildCardMatcher.<init>(WildCardMatcher.java:64)
	at org.eclipse.jgit.ignore.internal.PathMatcher.createNameMatcher0(PathMatcher.java:178)
	at org.eclipse.jgit.ignore.internal.PathMatcher.createMatchers(PathMatcher.java:99)
	at org.eclipse.jgit.ignore.internal.PathMatcher.<init>(PathMatcher.java:84)
	at org.eclipse.jgit.ignore.internal.PathMatcher.createPathMatcher(PathMatcher.java:135)
	at org.eclipse.jgit.ignore.FastIgnoreRule.<init>(FastIgnoreRule.java:129)
	at org.eclipse.jgit.ignore.IgnoreNode.parse(IgnoreNode.java:115)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator$PerDirectoryIgnoreNode.load(WorkingTreeIterator.java:1346)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator$RootIgnoreNode.load(WorkingTreeIterator.java:1365)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.getIgnoreNode(WorkingTreeIterator.java:771)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isDirectoryIgnored(WorkingTreeIterator.java:1611)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isDirectoryIgnored(WorkingTreeIterator.java:1589)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isEntryIgnored(WorkingTreeIterator.java:753)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isEntryIgnored(WorkingTreeIterator.java:713)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isEntryIgnored(WorkingTreeIterator.java:700)
	at org.eclipse.jgit.treewalk.filter.IndexDiffFilter.include(IndexDiffFilter.java:170)
	at org.eclipse.jgit.treewalk.filter.TreeFilter.matchFilter(TreeFilter.java:228)
	at org.eclipse.jgit.treewalk.filter.AndTreeFilter$List.matchFilter(AndTreeFilter.java:190)
	at org.eclipse.jgit.treewalk.TreeWalk.next(TreeWalk.java:853)
	at org.eclipse.jgit.lib.IndexDiff.diff(IndexDiff.java:446)
	at org.eclipse.egit.core.internal.indexdiff.IndexDiffCacheEntry.calcIndexDiffDataIncremental(IndexDiffCacheEntry.java:625)
	at org.eclipse.egit.core.internal.indexdiff.IndexDiffCacheEntry.access$13(IndexDiffCacheEntry.java:604)
	at org.eclipse.egit.core.internal.indexdiff.IndexDiffCacheEntry$5.updateIndexDiff(IndexDiffCacheEntry.java:550)
	at org.eclipse.egit.core.internal.indexdiff.IndexDiffUpdateJob.run(IndexDiffUpdateJob.java:77)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-06 11:29:16.070
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-06 11:29:16.071
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 4 0 2020-05-06 11:29:49.496
!MESSAGE Not closed bracket?
!STACK 0
org.eclipse.jgit.errors.InvalidPatternException: Not closed bracket?
	at org.eclipse.jgit.ignore.internal.Strings.convertGlob(Strings.java:444)
	at org.eclipse.jgit.ignore.internal.WildCardMatcher.<init>(WildCardMatcher.java:64)
	at org.eclipse.jgit.ignore.internal.PathMatcher.createNameMatcher0(PathMatcher.java:178)
	at org.eclipse.jgit.ignore.internal.PathMatcher.createMatchers(PathMatcher.java:99)
	at org.eclipse.jgit.ignore.internal.PathMatcher.<init>(PathMatcher.java:84)
	at org.eclipse.jgit.ignore.internal.PathMatcher.createPathMatcher(PathMatcher.java:135)
	at org.eclipse.jgit.ignore.FastIgnoreRule.<init>(FastIgnoreRule.java:129)
	at org.eclipse.jgit.ignore.IgnoreNode.parse(IgnoreNode.java:115)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator$PerDirectoryIgnoreNode.load(WorkingTreeIterator.java:1346)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator$RootIgnoreNode.load(WorkingTreeIterator.java:1365)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.getIgnoreNode(WorkingTreeIterator.java:771)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isDirectoryIgnored(WorkingTreeIterator.java:1611)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isDirectoryIgnored(WorkingTreeIterator.java:1589)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isEntryIgnored(WorkingTreeIterator.java:753)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isEntryIgnored(WorkingTreeIterator.java:713)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isEntryIgnored(WorkingTreeIterator.java:700)
	at org.eclipse.jgit.treewalk.filter.IndexDiffFilter.include(IndexDiffFilter.java:170)
	at org.eclipse.jgit.treewalk.filter.TreeFilter.matchFilter(TreeFilter.java:228)
	at org.eclipse.jgit.treewalk.filter.AndTreeFilter$List.matchFilter(AndTreeFilter.java:190)
	at org.eclipse.jgit.treewalk.TreeWalk.next(TreeWalk.java:853)
	at org.eclipse.jgit.lib.IndexDiff.diff(IndexDiff.java:446)
	at org.eclipse.egit.core.internal.indexdiff.IndexDiffCacheEntry.calcIndexDiffDataIncremental(IndexDiffCacheEntry.java:625)
	at org.eclipse.egit.core.internal.indexdiff.IndexDiffCacheEntry.access$13(IndexDiffCacheEntry.java:604)
	at org.eclipse.egit.core.internal.indexdiff.IndexDiffCacheEntry$5.updateIndexDiff(IndexDiffCacheEntry.java:550)
	at org.eclipse.egit.core.internal.indexdiff.IndexDiffUpdateJob.run(IndexDiffUpdateJob.java:77)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-06 11:29:50.001
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-06 11:29:50.003
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 4 0 2020-05-06 11:31:46.820
!MESSAGE Not closed bracket?
!STACK 0
org.eclipse.jgit.errors.InvalidPatternException: Not closed bracket?
	at org.eclipse.jgit.ignore.internal.Strings.convertGlob(Strings.java:444)
	at org.eclipse.jgit.ignore.internal.WildCardMatcher.<init>(WildCardMatcher.java:64)
	at org.eclipse.jgit.ignore.internal.PathMatcher.createNameMatcher0(PathMatcher.java:178)
	at org.eclipse.jgit.ignore.internal.PathMatcher.createMatchers(PathMatcher.java:99)
	at org.eclipse.jgit.ignore.internal.PathMatcher.<init>(PathMatcher.java:84)
	at org.eclipse.jgit.ignore.internal.PathMatcher.createPathMatcher(PathMatcher.java:135)
	at org.eclipse.jgit.ignore.FastIgnoreRule.<init>(FastIgnoreRule.java:129)
	at org.eclipse.jgit.ignore.IgnoreNode.parse(IgnoreNode.java:115)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator$PerDirectoryIgnoreNode.load(WorkingTreeIterator.java:1346)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator$RootIgnoreNode.load(WorkingTreeIterator.java:1365)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.getIgnoreNode(WorkingTreeIterator.java:771)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isDirectoryIgnored(WorkingTreeIterator.java:1611)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isDirectoryIgnored(WorkingTreeIterator.java:1589)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isEntryIgnored(WorkingTreeIterator.java:753)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isEntryIgnored(WorkingTreeIterator.java:713)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isEntryIgnored(WorkingTreeIterator.java:700)
	at org.eclipse.jgit.treewalk.filter.IndexDiffFilter.include(IndexDiffFilter.java:170)
	at org.eclipse.jgit.treewalk.filter.TreeFilter.matchFilter(TreeFilter.java:228)
	at org.eclipse.jgit.treewalk.filter.AndTreeFilter$List.matchFilter(AndTreeFilter.java:190)
	at org.eclipse.jgit.treewalk.TreeWalk.next(TreeWalk.java:853)
	at org.eclipse.jgit.lib.IndexDiff.diff(IndexDiff.java:446)
	at org.eclipse.egit.core.internal.indexdiff.IndexDiffCacheEntry.calcIndexDiffDataIncremental(IndexDiffCacheEntry.java:625)
	at org.eclipse.egit.core.internal.indexdiff.IndexDiffCacheEntry.access$13(IndexDiffCacheEntry.java:604)
	at org.eclipse.egit.core.internal.indexdiff.IndexDiffCacheEntry$5.updateIndexDiff(IndexDiffCacheEntry.java:550)
	at org.eclipse.egit.core.internal.indexdiff.IndexDiffUpdateJob.run(IndexDiffUpdateJob.java:77)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-06 11:31:46.973
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-06 11:31:46.974
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 4 0 2020-05-06 11:32:14.736
!MESSAGE Not closed bracket?
!STACK 0
org.eclipse.jgit.errors.InvalidPatternException: Not closed bracket?
	at org.eclipse.jgit.ignore.internal.Strings.convertGlob(Strings.java:444)
	at org.eclipse.jgit.ignore.internal.WildCardMatcher.<init>(WildCardMatcher.java:64)
	at org.eclipse.jgit.ignore.internal.PathMatcher.createNameMatcher0(PathMatcher.java:178)
	at org.eclipse.jgit.ignore.internal.PathMatcher.createMatchers(PathMatcher.java:99)
	at org.eclipse.jgit.ignore.internal.PathMatcher.<init>(PathMatcher.java:84)
	at org.eclipse.jgit.ignore.internal.PathMatcher.createPathMatcher(PathMatcher.java:135)
	at org.eclipse.jgit.ignore.FastIgnoreRule.<init>(FastIgnoreRule.java:129)
	at org.eclipse.jgit.ignore.IgnoreNode.parse(IgnoreNode.java:115)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator$PerDirectoryIgnoreNode.load(WorkingTreeIterator.java:1346)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator$RootIgnoreNode.load(WorkingTreeIterator.java:1365)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.getIgnoreNode(WorkingTreeIterator.java:771)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isDirectoryIgnored(WorkingTreeIterator.java:1611)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isDirectoryIgnored(WorkingTreeIterator.java:1589)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isEntryIgnored(WorkingTreeIterator.java:753)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isEntryIgnored(WorkingTreeIterator.java:713)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isEntryIgnored(WorkingTreeIterator.java:700)
	at org.eclipse.jgit.treewalk.filter.IndexDiffFilter.include(IndexDiffFilter.java:170)
	at org.eclipse.jgit.treewalk.filter.TreeFilter.matchFilter(TreeFilter.java:228)
	at org.eclipse.jgit.treewalk.filter.AndTreeFilter$List.matchFilter(AndTreeFilter.java:190)
	at org.eclipse.jgit.treewalk.TreeWalk.next(TreeWalk.java:853)
	at org.eclipse.jgit.lib.IndexDiff.diff(IndexDiff.java:446)
	at org.eclipse.egit.core.internal.indexdiff.IndexDiffCacheEntry.calcIndexDiffDataIncremental(IndexDiffCacheEntry.java:625)
	at org.eclipse.egit.core.internal.indexdiff.IndexDiffCacheEntry.access$13(IndexDiffCacheEntry.java:604)
	at org.eclipse.egit.core.internal.indexdiff.IndexDiffCacheEntry$5.updateIndexDiff(IndexDiffCacheEntry.java:550)
	at org.eclipse.egit.core.internal.indexdiff.IndexDiffUpdateJob.run(IndexDiffUpdateJob.java:77)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-06 11:32:14.837
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-06 11:32:14.838
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 4 0 2020-05-06 11:33:48.360
!MESSAGE Not closed bracket?
!STACK 0
org.eclipse.jgit.errors.InvalidPatternException: Not closed bracket?
	at org.eclipse.jgit.ignore.internal.Strings.convertGlob(Strings.java:444)
	at org.eclipse.jgit.ignore.internal.WildCardMatcher.<init>(WildCardMatcher.java:64)
	at org.eclipse.jgit.ignore.internal.PathMatcher.createNameMatcher0(PathMatcher.java:178)
	at org.eclipse.jgit.ignore.internal.PathMatcher.createMatchers(PathMatcher.java:99)
	at org.eclipse.jgit.ignore.internal.PathMatcher.<init>(PathMatcher.java:84)
	at org.eclipse.jgit.ignore.internal.PathMatcher.createPathMatcher(PathMatcher.java:135)
	at org.eclipse.jgit.ignore.FastIgnoreRule.<init>(FastIgnoreRule.java:129)
	at org.eclipse.jgit.ignore.IgnoreNode.parse(IgnoreNode.java:115)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator$PerDirectoryIgnoreNode.load(WorkingTreeIterator.java:1346)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator$RootIgnoreNode.load(WorkingTreeIterator.java:1365)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.getIgnoreNode(WorkingTreeIterator.java:771)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isDirectoryIgnored(WorkingTreeIterator.java:1611)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isDirectoryIgnored(WorkingTreeIterator.java:1589)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isEntryIgnored(WorkingTreeIterator.java:753)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isEntryIgnored(WorkingTreeIterator.java:713)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isEntryIgnored(WorkingTreeIterator.java:700)
	at org.eclipse.jgit.treewalk.filter.IndexDiffFilter.include(IndexDiffFilter.java:170)
	at org.eclipse.jgit.treewalk.filter.TreeFilter.matchFilter(TreeFilter.java:228)
	at org.eclipse.jgit.treewalk.filter.AndTreeFilter$List.matchFilter(AndTreeFilter.java:190)
	at org.eclipse.jgit.treewalk.TreeWalk.next(TreeWalk.java:853)
	at org.eclipse.jgit.lib.IndexDiff.diff(IndexDiff.java:446)
	at org.eclipse.egit.core.internal.indexdiff.IndexDiffCacheEntry.calcIndexDiffDataIncremental(IndexDiffCacheEntry.java:625)
	at org.eclipse.egit.core.internal.indexdiff.IndexDiffCacheEntry.access$13(IndexDiffCacheEntry.java:604)
	at org.eclipse.egit.core.internal.indexdiff.IndexDiffCacheEntry$5.updateIndexDiff(IndexDiffCacheEntry.java:550)
	at org.eclipse.egit.core.internal.indexdiff.IndexDiffUpdateJob.run(IndexDiffUpdateJob.java:77)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-06 11:33:48.523
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-06 11:33:48.524
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 4 0 2020-05-06 11:36:38.721
!MESSAGE Not closed bracket?
!STACK 0
org.eclipse.jgit.errors.InvalidPatternException: Not closed bracket?
	at org.eclipse.jgit.ignore.internal.Strings.convertGlob(Strings.java:444)
	at org.eclipse.jgit.ignore.internal.WildCardMatcher.<init>(WildCardMatcher.java:64)
	at org.eclipse.jgit.ignore.internal.PathMatcher.createNameMatcher0(PathMatcher.java:178)
	at org.eclipse.jgit.ignore.internal.PathMatcher.createMatchers(PathMatcher.java:99)
	at org.eclipse.jgit.ignore.internal.PathMatcher.<init>(PathMatcher.java:84)
	at org.eclipse.jgit.ignore.internal.PathMatcher.createPathMatcher(PathMatcher.java:135)
	at org.eclipse.jgit.ignore.FastIgnoreRule.<init>(FastIgnoreRule.java:129)
	at org.eclipse.jgit.ignore.IgnoreNode.parse(IgnoreNode.java:115)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator$PerDirectoryIgnoreNode.load(WorkingTreeIterator.java:1346)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator$RootIgnoreNode.load(WorkingTreeIterator.java:1365)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.getIgnoreNode(WorkingTreeIterator.java:771)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isDirectoryIgnored(WorkingTreeIterator.java:1611)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isDirectoryIgnored(WorkingTreeIterator.java:1589)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isEntryIgnored(WorkingTreeIterator.java:753)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isEntryIgnored(WorkingTreeIterator.java:713)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isEntryIgnored(WorkingTreeIterator.java:700)
	at org.eclipse.jgit.treewalk.filter.IndexDiffFilter.include(IndexDiffFilter.java:170)
	at org.eclipse.jgit.treewalk.filter.TreeFilter.matchFilter(TreeFilter.java:228)
	at org.eclipse.jgit.treewalk.filter.AndTreeFilter$List.matchFilter(AndTreeFilter.java:190)
	at org.eclipse.jgit.treewalk.TreeWalk.next(TreeWalk.java:853)
	at org.eclipse.jgit.lib.IndexDiff.diff(IndexDiff.java:446)
	at org.eclipse.egit.core.internal.indexdiff.IndexDiffCacheEntry.calcIndexDiffDataIncremental(IndexDiffCacheEntry.java:625)
	at org.eclipse.egit.core.internal.indexdiff.IndexDiffCacheEntry.access$13(IndexDiffCacheEntry.java:604)
	at org.eclipse.egit.core.internal.indexdiff.IndexDiffCacheEntry$5.updateIndexDiff(IndexDiffCacheEntry.java:550)
	at org.eclipse.egit.core.internal.indexdiff.IndexDiffUpdateJob.run(IndexDiffUpdateJob.java:77)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-06 11:36:38.882
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-06 11:36:38.884
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 4 0 2020-05-06 11:36:38.888
!MESSAGE Not closed bracket?
!STACK 0
org.eclipse.jgit.errors.InvalidPatternException: Not closed bracket?
	at org.eclipse.jgit.ignore.internal.Strings.convertGlob(Strings.java:444)
	at org.eclipse.jgit.ignore.internal.WildCardMatcher.<init>(WildCardMatcher.java:64)
	at org.eclipse.jgit.ignore.internal.PathMatcher.createNameMatcher0(PathMatcher.java:178)
	at org.eclipse.jgit.ignore.internal.PathMatcher.createMatchers(PathMatcher.java:99)
	at org.eclipse.jgit.ignore.internal.PathMatcher.<init>(PathMatcher.java:84)
	at org.eclipse.jgit.ignore.internal.PathMatcher.createPathMatcher(PathMatcher.java:135)
	at org.eclipse.jgit.ignore.FastIgnoreRule.<init>(FastIgnoreRule.java:129)
	at org.eclipse.jgit.ignore.IgnoreNode.parse(IgnoreNode.java:115)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator$PerDirectoryIgnoreNode.load(WorkingTreeIterator.java:1346)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator$RootIgnoreNode.load(WorkingTreeIterator.java:1365)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.getIgnoreNode(WorkingTreeIterator.java:771)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isDirectoryIgnored(WorkingTreeIterator.java:1611)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isDirectoryIgnored(WorkingTreeIterator.java:1589)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isEntryIgnored(WorkingTreeIterator.java:753)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isEntryIgnored(WorkingTreeIterator.java:713)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isEntryIgnored(WorkingTreeIterator.java:700)
	at org.eclipse.jgit.treewalk.FileTreeIterator.createSubtreeIterator(FileTreeIterator.java:215)
	at org.eclipse.jgit.treewalk.AbstractTreeIterator.createSubtreeIterator(AbstractTreeIterator.java:594)
	at org.eclipse.jgit.treewalk.TreeWalk.enterSubtree(TreeWalk.java:1303)
	at org.eclipse.egit.core.RepositoryUtil.canBeAutoIgnored(RepositoryUtil.java:773)
	at org.eclipse.egit.core.Activator$IgnoreDerivedResources$1.visit(Activator.java:835)
	at org.eclipse.core.internal.events.ResourceDelta.accept(ResourceDelta.java:67)
	at org.eclipse.core.internal.events.ResourceDelta.accept(ResourceDelta.java:77)
	at org.eclipse.core.internal.events.ResourceDelta.accept(ResourceDelta.java:77)
	at org.eclipse.core.internal.events.ResourceDelta.accept(ResourceDelta.java:51)
	at org.eclipse.egit.core.Activator$IgnoreDerivedResources.resourceChanged(Activator.java:811)
	at org.eclipse.core.internal.events.NotificationManager$1.run(NotificationManager.java:305)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.core.internal.events.NotificationManager.notify(NotificationManager.java:295)
	at org.eclipse.core.internal.events.NotificationManager.broadcastChanges(NotificationManager.java:158)
	at org.eclipse.core.internal.resources.Workspace.broadcastPostChange(Workspace.java:379)
	at org.eclipse.core.internal.resources.Workspace.endOperation(Workspace.java:1502)
	at org.eclipse.core.internal.events.AutoBuildJob.doBuild(AutoBuildJob.java:169)
	at org.eclipse.core.internal.events.AutoBuildJob.run(AutoBuildJob.java:244)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.m2e.logback.appender 4 0 2020-05-06 11:36:38.982
!MESSAGE Not closed bracket?
!STACK 0
org.eclipse.jgit.errors.InvalidPatternException: Not closed bracket?
	at org.eclipse.jgit.ignore.internal.Strings.convertGlob(Strings.java:444)
	at org.eclipse.jgit.ignore.internal.WildCardMatcher.<init>(WildCardMatcher.java:64)
	at org.eclipse.jgit.ignore.internal.PathMatcher.createNameMatcher0(PathMatcher.java:178)
	at org.eclipse.jgit.ignore.internal.PathMatcher.createMatchers(PathMatcher.java:99)
	at org.eclipse.jgit.ignore.internal.PathMatcher.<init>(PathMatcher.java:84)
	at org.eclipse.jgit.ignore.internal.PathMatcher.createPathMatcher(PathMatcher.java:135)
	at org.eclipse.jgit.ignore.FastIgnoreRule.<init>(FastIgnoreRule.java:129)
	at org.eclipse.jgit.ignore.IgnoreNode.parse(IgnoreNode.java:115)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator$PerDirectoryIgnoreNode.load(WorkingTreeIterator.java:1346)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator$RootIgnoreNode.load(WorkingTreeIterator.java:1365)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.getIgnoreNode(WorkingTreeIterator.java:771)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isDirectoryIgnored(WorkingTreeIterator.java:1611)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isDirectoryIgnored(WorkingTreeIterator.java:1589)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isEntryIgnored(WorkingTreeIterator.java:753)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isEntryIgnored(WorkingTreeIterator.java:713)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isEntryIgnored(WorkingTreeIterator.java:700)
	at org.eclipse.jgit.treewalk.filter.IndexDiffFilter.include(IndexDiffFilter.java:170)
	at org.eclipse.jgit.treewalk.filter.TreeFilter.matchFilter(TreeFilter.java:228)
	at org.eclipse.jgit.treewalk.filter.AndTreeFilter$List.matchFilter(AndTreeFilter.java:190)
	at org.eclipse.jgit.treewalk.TreeWalk.next(TreeWalk.java:853)
	at org.eclipse.jgit.lib.IndexDiff.diff(IndexDiff.java:446)
	at org.eclipse.egit.core.internal.indexdiff.IndexDiffCacheEntry.calcIndexDiffDataIncremental(IndexDiffCacheEntry.java:625)
	at org.eclipse.egit.core.internal.indexdiff.IndexDiffCacheEntry.access$13(IndexDiffCacheEntry.java:604)
	at org.eclipse.egit.core.internal.indexdiff.IndexDiffCacheEntry$5.updateIndexDiff(IndexDiffCacheEntry.java:550)
	at org.eclipse.egit.core.internal.indexdiff.IndexDiffUpdateJob.run(IndexDiffUpdateJob.java:77)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.m2e.logback.appender 4 0 2020-05-06 13:20:29.295
!MESSAGE Not closed bracket?
!STACK 0
org.eclipse.jgit.errors.InvalidPatternException: Not closed bracket?
	at org.eclipse.jgit.ignore.internal.Strings.convertGlob(Strings.java:444)
	at org.eclipse.jgit.ignore.internal.WildCardMatcher.<init>(WildCardMatcher.java:64)
	at org.eclipse.jgit.ignore.internal.PathMatcher.createNameMatcher0(PathMatcher.java:178)
	at org.eclipse.jgit.ignore.internal.PathMatcher.createMatchers(PathMatcher.java:99)
	at org.eclipse.jgit.ignore.internal.PathMatcher.<init>(PathMatcher.java:84)
	at org.eclipse.jgit.ignore.internal.PathMatcher.createPathMatcher(PathMatcher.java:135)
	at org.eclipse.jgit.ignore.FastIgnoreRule.<init>(FastIgnoreRule.java:129)
	at org.eclipse.jgit.ignore.IgnoreNode.parse(IgnoreNode.java:115)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator$PerDirectoryIgnoreNode.load(WorkingTreeIterator.java:1346)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator$RootIgnoreNode.load(WorkingTreeIterator.java:1365)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.getIgnoreNode(WorkingTreeIterator.java:771)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isDirectoryIgnored(WorkingTreeIterator.java:1611)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isDirectoryIgnored(WorkingTreeIterator.java:1589)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isEntryIgnored(WorkingTreeIterator.java:753)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isEntryIgnored(WorkingTreeIterator.java:713)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isEntryIgnored(WorkingTreeIterator.java:700)
	at org.eclipse.jgit.treewalk.filter.IndexDiffFilter.include(IndexDiffFilter.java:170)
	at org.eclipse.jgit.treewalk.filter.TreeFilter.matchFilter(TreeFilter.java:228)
	at org.eclipse.jgit.treewalk.filter.AndTreeFilter$List.matchFilter(AndTreeFilter.java:190)
	at org.eclipse.jgit.treewalk.TreeWalk.next(TreeWalk.java:853)
	at org.eclipse.jgit.lib.IndexDiff.diff(IndexDiff.java:446)
	at org.eclipse.egit.core.internal.indexdiff.IndexDiffCacheEntry.calcIndexDiffDataIncremental(IndexDiffCacheEntry.java:625)
	at org.eclipse.egit.core.internal.indexdiff.IndexDiffCacheEntry.access$13(IndexDiffCacheEntry.java:604)
	at org.eclipse.egit.core.internal.indexdiff.IndexDiffCacheEntry$5.updateIndexDiff(IndexDiffCacheEntry.java:550)
	at org.eclipse.egit.core.internal.indexdiff.IndexDiffUpdateJob.run(IndexDiffUpdateJob.java:77)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-06 13:20:29.483
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-06 13:20:29.485
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 4 0 2020-05-06 13:20:29.489
!MESSAGE Not closed bracket?
!STACK 0
org.eclipse.jgit.errors.InvalidPatternException: Not closed bracket?
	at org.eclipse.jgit.ignore.internal.Strings.convertGlob(Strings.java:444)
	at org.eclipse.jgit.ignore.internal.WildCardMatcher.<init>(WildCardMatcher.java:64)
	at org.eclipse.jgit.ignore.internal.PathMatcher.createNameMatcher0(PathMatcher.java:178)
	at org.eclipse.jgit.ignore.internal.PathMatcher.createMatchers(PathMatcher.java:99)
	at org.eclipse.jgit.ignore.internal.PathMatcher.<init>(PathMatcher.java:84)
	at org.eclipse.jgit.ignore.internal.PathMatcher.createPathMatcher(PathMatcher.java:135)
	at org.eclipse.jgit.ignore.FastIgnoreRule.<init>(FastIgnoreRule.java:129)
	at org.eclipse.jgit.ignore.IgnoreNode.parse(IgnoreNode.java:115)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator$PerDirectoryIgnoreNode.load(WorkingTreeIterator.java:1346)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator$RootIgnoreNode.load(WorkingTreeIterator.java:1365)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.getIgnoreNode(WorkingTreeIterator.java:771)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isDirectoryIgnored(WorkingTreeIterator.java:1611)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isDirectoryIgnored(WorkingTreeIterator.java:1589)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isEntryIgnored(WorkingTreeIterator.java:753)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isEntryIgnored(WorkingTreeIterator.java:713)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isEntryIgnored(WorkingTreeIterator.java:700)
	at org.eclipse.jgit.treewalk.FileTreeIterator.createSubtreeIterator(FileTreeIterator.java:215)
	at org.eclipse.jgit.treewalk.AbstractTreeIterator.createSubtreeIterator(AbstractTreeIterator.java:594)
	at org.eclipse.jgit.treewalk.TreeWalk.enterSubtree(TreeWalk.java:1303)
	at org.eclipse.egit.core.RepositoryUtil.canBeAutoIgnored(RepositoryUtil.java:773)
	at org.eclipse.egit.core.Activator$IgnoreDerivedResources$1.visit(Activator.java:835)
	at org.eclipse.core.internal.events.ResourceDelta.accept(ResourceDelta.java:67)
	at org.eclipse.core.internal.events.ResourceDelta.accept(ResourceDelta.java:77)
	at org.eclipse.core.internal.events.ResourceDelta.accept(ResourceDelta.java:77)
	at org.eclipse.core.internal.events.ResourceDelta.accept(ResourceDelta.java:51)
	at org.eclipse.egit.core.Activator$IgnoreDerivedResources.resourceChanged(Activator.java:811)
	at org.eclipse.core.internal.events.NotificationManager$1.run(NotificationManager.java:305)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.core.internal.events.NotificationManager.notify(NotificationManager.java:295)
	at org.eclipse.core.internal.events.NotificationManager.broadcastChanges(NotificationManager.java:158)
	at org.eclipse.core.internal.resources.Workspace.broadcastPostChange(Workspace.java:379)
	at org.eclipse.core.internal.resources.Workspace.endOperation(Workspace.java:1502)
	at org.eclipse.core.internal.events.AutoBuildJob.doBuild(AutoBuildJob.java:169)
	at org.eclipse.core.internal.events.AutoBuildJob.run(AutoBuildJob.java:244)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.m2e.logback.appender 4 0 2020-05-06 13:20:29.706
!MESSAGE Not closed bracket?
!STACK 0
org.eclipse.jgit.errors.InvalidPatternException: Not closed bracket?
	at org.eclipse.jgit.ignore.internal.Strings.convertGlob(Strings.java:444)
	at org.eclipse.jgit.ignore.internal.WildCardMatcher.<init>(WildCardMatcher.java:64)
	at org.eclipse.jgit.ignore.internal.PathMatcher.createNameMatcher0(PathMatcher.java:178)
	at org.eclipse.jgit.ignore.internal.PathMatcher.createMatchers(PathMatcher.java:99)
	at org.eclipse.jgit.ignore.internal.PathMatcher.<init>(PathMatcher.java:84)
	at org.eclipse.jgit.ignore.internal.PathMatcher.createPathMatcher(PathMatcher.java:135)
	at org.eclipse.jgit.ignore.FastIgnoreRule.<init>(FastIgnoreRule.java:129)
	at org.eclipse.jgit.ignore.IgnoreNode.parse(IgnoreNode.java:115)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator$PerDirectoryIgnoreNode.load(WorkingTreeIterator.java:1346)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator$RootIgnoreNode.load(WorkingTreeIterator.java:1365)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.getIgnoreNode(WorkingTreeIterator.java:771)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isDirectoryIgnored(WorkingTreeIterator.java:1611)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isDirectoryIgnored(WorkingTreeIterator.java:1589)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isEntryIgnored(WorkingTreeIterator.java:753)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isEntryIgnored(WorkingTreeIterator.java:713)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isEntryIgnored(WorkingTreeIterator.java:700)
	at org.eclipse.jgit.treewalk.filter.IndexDiffFilter.include(IndexDiffFilter.java:170)
	at org.eclipse.jgit.treewalk.filter.TreeFilter.matchFilter(TreeFilter.java:228)
	at org.eclipse.jgit.treewalk.filter.AndTreeFilter$List.matchFilter(AndTreeFilter.java:190)
	at org.eclipse.jgit.treewalk.TreeWalk.next(TreeWalk.java:853)
	at org.eclipse.jgit.lib.IndexDiff.diff(IndexDiff.java:446)
	at org.eclipse.egit.core.internal.indexdiff.IndexDiffCacheEntry.calcIndexDiffDataIncremental(IndexDiffCacheEntry.java:625)
	at org.eclipse.egit.core.internal.indexdiff.IndexDiffCacheEntry.access$13(IndexDiffCacheEntry.java:604)
	at org.eclipse.egit.core.internal.indexdiff.IndexDiffCacheEntry$5.updateIndexDiff(IndexDiffCacheEntry.java:550)
	at org.eclipse.egit.core.internal.indexdiff.IndexDiffUpdateJob.run(IndexDiffUpdateJob.java:77)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.m2e.logback.appender 4 0 2020-05-06 13:21:29.581
!MESSAGE Not closed bracket?
!STACK 0
org.eclipse.jgit.errors.InvalidPatternException: Not closed bracket?
	at org.eclipse.jgit.ignore.internal.Strings.convertGlob(Strings.java:444)
	at org.eclipse.jgit.ignore.internal.WildCardMatcher.<init>(WildCardMatcher.java:64)
	at org.eclipse.jgit.ignore.internal.PathMatcher.createNameMatcher0(PathMatcher.java:178)
	at org.eclipse.jgit.ignore.internal.PathMatcher.createMatchers(PathMatcher.java:99)
	at org.eclipse.jgit.ignore.internal.PathMatcher.<init>(PathMatcher.java:84)
	at org.eclipse.jgit.ignore.internal.PathMatcher.createPathMatcher(PathMatcher.java:135)
	at org.eclipse.jgit.ignore.FastIgnoreRule.<init>(FastIgnoreRule.java:129)
	at org.eclipse.jgit.ignore.IgnoreNode.parse(IgnoreNode.java:115)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator$PerDirectoryIgnoreNode.load(WorkingTreeIterator.java:1346)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator$RootIgnoreNode.load(WorkingTreeIterator.java:1365)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.getIgnoreNode(WorkingTreeIterator.java:771)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isDirectoryIgnored(WorkingTreeIterator.java:1611)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isDirectoryIgnored(WorkingTreeIterator.java:1589)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isEntryIgnored(WorkingTreeIterator.java:753)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isEntryIgnored(WorkingTreeIterator.java:713)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isEntryIgnored(WorkingTreeIterator.java:700)
	at org.eclipse.jgit.treewalk.filter.IndexDiffFilter.include(IndexDiffFilter.java:170)
	at org.eclipse.jgit.treewalk.filter.TreeFilter.matchFilter(TreeFilter.java:228)
	at org.eclipse.jgit.treewalk.filter.AndTreeFilter$List.matchFilter(AndTreeFilter.java:190)
	at org.eclipse.jgit.treewalk.TreeWalk.next(TreeWalk.java:853)
	at org.eclipse.jgit.lib.IndexDiff.diff(IndexDiff.java:446)
	at org.eclipse.egit.core.internal.indexdiff.IndexDiffCacheEntry.calcIndexDiffDataIncremental(IndexDiffCacheEntry.java:625)
	at org.eclipse.egit.core.internal.indexdiff.IndexDiffCacheEntry.access$13(IndexDiffCacheEntry.java:604)
	at org.eclipse.egit.core.internal.indexdiff.IndexDiffCacheEntry$5.updateIndexDiff(IndexDiffCacheEntry.java:550)
	at org.eclipse.egit.core.internal.indexdiff.IndexDiffUpdateJob.run(IndexDiffUpdateJob.java:77)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-06 13:21:29.704
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-06 13:21:29.705
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 4 0 2020-05-06 13:21:29.707
!MESSAGE Not closed bracket?
!STACK 0
org.eclipse.jgit.errors.InvalidPatternException: Not closed bracket?
	at org.eclipse.jgit.ignore.internal.Strings.convertGlob(Strings.java:444)
	at org.eclipse.jgit.ignore.internal.WildCardMatcher.<init>(WildCardMatcher.java:64)
	at org.eclipse.jgit.ignore.internal.PathMatcher.createNameMatcher0(PathMatcher.java:178)
	at org.eclipse.jgit.ignore.internal.PathMatcher.createMatchers(PathMatcher.java:99)
	at org.eclipse.jgit.ignore.internal.PathMatcher.<init>(PathMatcher.java:84)
	at org.eclipse.jgit.ignore.internal.PathMatcher.createPathMatcher(PathMatcher.java:135)
	at org.eclipse.jgit.ignore.FastIgnoreRule.<init>(FastIgnoreRule.java:129)
	at org.eclipse.jgit.ignore.IgnoreNode.parse(IgnoreNode.java:115)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator$PerDirectoryIgnoreNode.load(WorkingTreeIterator.java:1346)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator$RootIgnoreNode.load(WorkingTreeIterator.java:1365)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.getIgnoreNode(WorkingTreeIterator.java:771)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isDirectoryIgnored(WorkingTreeIterator.java:1611)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isDirectoryIgnored(WorkingTreeIterator.java:1589)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isEntryIgnored(WorkingTreeIterator.java:753)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isEntryIgnored(WorkingTreeIterator.java:713)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isEntryIgnored(WorkingTreeIterator.java:700)
	at org.eclipse.jgit.treewalk.FileTreeIterator.createSubtreeIterator(FileTreeIterator.java:215)
	at org.eclipse.jgit.treewalk.AbstractTreeIterator.createSubtreeIterator(AbstractTreeIterator.java:594)
	at org.eclipse.jgit.treewalk.TreeWalk.enterSubtree(TreeWalk.java:1303)
	at org.eclipse.egit.core.RepositoryUtil.canBeAutoIgnored(RepositoryUtil.java:773)
	at org.eclipse.egit.core.Activator$IgnoreDerivedResources$1.visit(Activator.java:835)
	at org.eclipse.core.internal.events.ResourceDelta.accept(ResourceDelta.java:67)
	at org.eclipse.core.internal.events.ResourceDelta.accept(ResourceDelta.java:77)
	at org.eclipse.core.internal.events.ResourceDelta.accept(ResourceDelta.java:77)
	at org.eclipse.core.internal.events.ResourceDelta.accept(ResourceDelta.java:51)
	at org.eclipse.egit.core.Activator$IgnoreDerivedResources.resourceChanged(Activator.java:811)
	at org.eclipse.core.internal.events.NotificationManager$1.run(NotificationManager.java:305)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.core.internal.events.NotificationManager.notify(NotificationManager.java:295)
	at org.eclipse.core.internal.events.NotificationManager.broadcastChanges(NotificationManager.java:158)
	at org.eclipse.core.internal.resources.Workspace.broadcastPostChange(Workspace.java:379)
	at org.eclipse.core.internal.resources.Workspace.endOperation(Workspace.java:1502)
	at org.eclipse.core.internal.events.AutoBuildJob.doBuild(AutoBuildJob.java:169)
	at org.eclipse.core.internal.events.AutoBuildJob.run(AutoBuildJob.java:244)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.m2e.logback.appender 4 0 2020-05-06 13:21:29.860
!MESSAGE Not closed bracket?
!STACK 0
org.eclipse.jgit.errors.InvalidPatternException: Not closed bracket?
	at org.eclipse.jgit.ignore.internal.Strings.convertGlob(Strings.java:444)
	at org.eclipse.jgit.ignore.internal.WildCardMatcher.<init>(WildCardMatcher.java:64)
	at org.eclipse.jgit.ignore.internal.PathMatcher.createNameMatcher0(PathMatcher.java:178)
	at org.eclipse.jgit.ignore.internal.PathMatcher.createMatchers(PathMatcher.java:99)
	at org.eclipse.jgit.ignore.internal.PathMatcher.<init>(PathMatcher.java:84)
	at org.eclipse.jgit.ignore.internal.PathMatcher.createPathMatcher(PathMatcher.java:135)
	at org.eclipse.jgit.ignore.FastIgnoreRule.<init>(FastIgnoreRule.java:129)
	at org.eclipse.jgit.ignore.IgnoreNode.parse(IgnoreNode.java:115)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator$PerDirectoryIgnoreNode.load(WorkingTreeIterator.java:1346)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator$RootIgnoreNode.load(WorkingTreeIterator.java:1365)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.getIgnoreNode(WorkingTreeIterator.java:771)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isDirectoryIgnored(WorkingTreeIterator.java:1611)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isDirectoryIgnored(WorkingTreeIterator.java:1589)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isEntryIgnored(WorkingTreeIterator.java:753)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isEntryIgnored(WorkingTreeIterator.java:713)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isEntryIgnored(WorkingTreeIterator.java:700)
	at org.eclipse.jgit.treewalk.filter.IndexDiffFilter.include(IndexDiffFilter.java:170)
	at org.eclipse.jgit.treewalk.filter.TreeFilter.matchFilter(TreeFilter.java:228)
	at org.eclipse.jgit.treewalk.filter.AndTreeFilter$List.matchFilter(AndTreeFilter.java:190)
	at org.eclipse.jgit.treewalk.TreeWalk.next(TreeWalk.java:853)
	at org.eclipse.jgit.lib.IndexDiff.diff(IndexDiff.java:446)
	at org.eclipse.egit.core.internal.indexdiff.IndexDiffCacheEntry.calcIndexDiffDataIncremental(IndexDiffCacheEntry.java:625)
	at org.eclipse.egit.core.internal.indexdiff.IndexDiffCacheEntry.access$13(IndexDiffCacheEntry.java:604)
	at org.eclipse.egit.core.internal.indexdiff.IndexDiffCacheEntry$5.updateIndexDiff(IndexDiffCacheEntry.java:550)
	at org.eclipse.egit.core.internal.indexdiff.IndexDiffUpdateJob.run(IndexDiffUpdateJob.java:77)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.m2e.logback.appender 4 0 2020-05-06 13:22:58.529
!MESSAGE Not closed bracket?
!STACK 0
org.eclipse.jgit.errors.InvalidPatternException: Not closed bracket?
	at org.eclipse.jgit.ignore.internal.Strings.convertGlob(Strings.java:444)
	at org.eclipse.jgit.ignore.internal.WildCardMatcher.<init>(WildCardMatcher.java:64)
	at org.eclipse.jgit.ignore.internal.PathMatcher.createNameMatcher0(PathMatcher.java:178)
	at org.eclipse.jgit.ignore.internal.PathMatcher.createMatchers(PathMatcher.java:99)
	at org.eclipse.jgit.ignore.internal.PathMatcher.<init>(PathMatcher.java:84)
	at org.eclipse.jgit.ignore.internal.PathMatcher.createPathMatcher(PathMatcher.java:135)
	at org.eclipse.jgit.ignore.FastIgnoreRule.<init>(FastIgnoreRule.java:129)
	at org.eclipse.jgit.ignore.IgnoreNode.parse(IgnoreNode.java:115)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator$PerDirectoryIgnoreNode.load(WorkingTreeIterator.java:1346)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator$RootIgnoreNode.load(WorkingTreeIterator.java:1365)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.getIgnoreNode(WorkingTreeIterator.java:771)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isDirectoryIgnored(WorkingTreeIterator.java:1611)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isDirectoryIgnored(WorkingTreeIterator.java:1589)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isEntryIgnored(WorkingTreeIterator.java:753)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isEntryIgnored(WorkingTreeIterator.java:713)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isEntryIgnored(WorkingTreeIterator.java:700)
	at org.eclipse.jgit.treewalk.filter.IndexDiffFilter.include(IndexDiffFilter.java:170)
	at org.eclipse.jgit.treewalk.filter.TreeFilter.matchFilter(TreeFilter.java:228)
	at org.eclipse.jgit.treewalk.filter.AndTreeFilter$List.matchFilter(AndTreeFilter.java:190)
	at org.eclipse.jgit.treewalk.TreeWalk.next(TreeWalk.java:853)
	at org.eclipse.jgit.lib.IndexDiff.diff(IndexDiff.java:446)
	at org.eclipse.egit.core.internal.indexdiff.IndexDiffCacheEntry.calcIndexDiffDataIncremental(IndexDiffCacheEntry.java:625)
	at org.eclipse.egit.core.internal.indexdiff.IndexDiffCacheEntry.access$13(IndexDiffCacheEntry.java:604)
	at org.eclipse.egit.core.internal.indexdiff.IndexDiffCacheEntry$5.updateIndexDiff(IndexDiffCacheEntry.java:550)
	at org.eclipse.egit.core.internal.indexdiff.IndexDiffUpdateJob.run(IndexDiffUpdateJob.java:77)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-06 13:22:58.632
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-06 13:22:58.633
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 4 0 2020-05-06 13:24:16.725
!MESSAGE Not closed bracket?
!STACK 0
org.eclipse.jgit.errors.InvalidPatternException: Not closed bracket?
	at org.eclipse.jgit.ignore.internal.Strings.convertGlob(Strings.java:444)
	at org.eclipse.jgit.ignore.internal.WildCardMatcher.<init>(WildCardMatcher.java:64)
	at org.eclipse.jgit.ignore.internal.PathMatcher.createNameMatcher0(PathMatcher.java:178)
	at org.eclipse.jgit.ignore.internal.PathMatcher.createMatchers(PathMatcher.java:99)
	at org.eclipse.jgit.ignore.internal.PathMatcher.<init>(PathMatcher.java:84)
	at org.eclipse.jgit.ignore.internal.PathMatcher.createPathMatcher(PathMatcher.java:135)
	at org.eclipse.jgit.ignore.FastIgnoreRule.<init>(FastIgnoreRule.java:129)
	at org.eclipse.jgit.ignore.IgnoreNode.parse(IgnoreNode.java:115)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator$PerDirectoryIgnoreNode.load(WorkingTreeIterator.java:1346)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator$RootIgnoreNode.load(WorkingTreeIterator.java:1365)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.getIgnoreNode(WorkingTreeIterator.java:771)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isDirectoryIgnored(WorkingTreeIterator.java:1611)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isDirectoryIgnored(WorkingTreeIterator.java:1589)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isEntryIgnored(WorkingTreeIterator.java:753)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isEntryIgnored(WorkingTreeIterator.java:713)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isEntryIgnored(WorkingTreeIterator.java:700)
	at org.eclipse.jgit.treewalk.filter.IndexDiffFilter.include(IndexDiffFilter.java:170)
	at org.eclipse.jgit.treewalk.filter.TreeFilter.matchFilter(TreeFilter.java:228)
	at org.eclipse.jgit.treewalk.filter.AndTreeFilter$List.matchFilter(AndTreeFilter.java:190)
	at org.eclipse.jgit.treewalk.TreeWalk.next(TreeWalk.java:853)
	at org.eclipse.jgit.lib.IndexDiff.diff(IndexDiff.java:446)
	at org.eclipse.egit.core.internal.indexdiff.IndexDiffCacheEntry.calcIndexDiffDataIncremental(IndexDiffCacheEntry.java:625)
	at org.eclipse.egit.core.internal.indexdiff.IndexDiffCacheEntry.access$13(IndexDiffCacheEntry.java:604)
	at org.eclipse.egit.core.internal.indexdiff.IndexDiffCacheEntry$5.updateIndexDiff(IndexDiffCacheEntry.java:550)
	at org.eclipse.egit.core.internal.indexdiff.IndexDiffUpdateJob.run(IndexDiffUpdateJob.java:77)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-06 13:24:16.835
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-06 13:24:16.836
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 4 0 2020-05-06 13:25:44.564
!MESSAGE Not closed bracket?
!STACK 0
org.eclipse.jgit.errors.InvalidPatternException: Not closed bracket?
	at org.eclipse.jgit.ignore.internal.Strings.convertGlob(Strings.java:444)
	at org.eclipse.jgit.ignore.internal.WildCardMatcher.<init>(WildCardMatcher.java:64)
	at org.eclipse.jgit.ignore.internal.PathMatcher.createNameMatcher0(PathMatcher.java:178)
	at org.eclipse.jgit.ignore.internal.PathMatcher.createMatchers(PathMatcher.java:99)
	at org.eclipse.jgit.ignore.internal.PathMatcher.<init>(PathMatcher.java:84)
	at org.eclipse.jgit.ignore.internal.PathMatcher.createPathMatcher(PathMatcher.java:135)
	at org.eclipse.jgit.ignore.FastIgnoreRule.<init>(FastIgnoreRule.java:129)
	at org.eclipse.jgit.ignore.IgnoreNode.parse(IgnoreNode.java:115)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator$PerDirectoryIgnoreNode.load(WorkingTreeIterator.java:1346)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator$RootIgnoreNode.load(WorkingTreeIterator.java:1365)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.getIgnoreNode(WorkingTreeIterator.java:771)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isDirectoryIgnored(WorkingTreeIterator.java:1611)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isDirectoryIgnored(WorkingTreeIterator.java:1589)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isEntryIgnored(WorkingTreeIterator.java:753)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isEntryIgnored(WorkingTreeIterator.java:713)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isEntryIgnored(WorkingTreeIterator.java:700)
	at org.eclipse.jgit.treewalk.filter.IndexDiffFilter.include(IndexDiffFilter.java:170)
	at org.eclipse.jgit.treewalk.filter.TreeFilter.matchFilter(TreeFilter.java:228)
	at org.eclipse.jgit.treewalk.filter.AndTreeFilter$List.matchFilter(AndTreeFilter.java:190)
	at org.eclipse.jgit.treewalk.TreeWalk.next(TreeWalk.java:853)
	at org.eclipse.jgit.lib.IndexDiff.diff(IndexDiff.java:446)
	at org.eclipse.egit.core.internal.indexdiff.IndexDiffCacheEntry.calcIndexDiffDataIncremental(IndexDiffCacheEntry.java:625)
	at org.eclipse.egit.core.internal.indexdiff.IndexDiffCacheEntry.access$13(IndexDiffCacheEntry.java:604)
	at org.eclipse.egit.core.internal.indexdiff.IndexDiffCacheEntry$5.updateIndexDiff(IndexDiffCacheEntry.java:550)
	at org.eclipse.egit.core.internal.indexdiff.IndexDiffUpdateJob.run(IndexDiffUpdateJob.java:77)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-06 13:25:44.636
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-06 13:25:44.637
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 4 0 2020-05-06 13:26:24.607
!MESSAGE Not closed bracket?
!STACK 0
org.eclipse.jgit.errors.InvalidPatternException: Not closed bracket?
	at org.eclipse.jgit.ignore.internal.Strings.convertGlob(Strings.java:444)
	at org.eclipse.jgit.ignore.internal.WildCardMatcher.<init>(WildCardMatcher.java:64)
	at org.eclipse.jgit.ignore.internal.PathMatcher.createNameMatcher0(PathMatcher.java:178)
	at org.eclipse.jgit.ignore.internal.PathMatcher.createMatchers(PathMatcher.java:99)
	at org.eclipse.jgit.ignore.internal.PathMatcher.<init>(PathMatcher.java:84)
	at org.eclipse.jgit.ignore.internal.PathMatcher.createPathMatcher(PathMatcher.java:135)
	at org.eclipse.jgit.ignore.FastIgnoreRule.<init>(FastIgnoreRule.java:129)
	at org.eclipse.jgit.ignore.IgnoreNode.parse(IgnoreNode.java:115)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator$PerDirectoryIgnoreNode.load(WorkingTreeIterator.java:1346)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator$RootIgnoreNode.load(WorkingTreeIterator.java:1365)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.getIgnoreNode(WorkingTreeIterator.java:771)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isDirectoryIgnored(WorkingTreeIterator.java:1611)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isDirectoryIgnored(WorkingTreeIterator.java:1589)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isEntryIgnored(WorkingTreeIterator.java:753)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isEntryIgnored(WorkingTreeIterator.java:713)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isEntryIgnored(WorkingTreeIterator.java:700)
	at org.eclipse.jgit.treewalk.filter.IndexDiffFilter.include(IndexDiffFilter.java:170)
	at org.eclipse.jgit.treewalk.filter.TreeFilter.matchFilter(TreeFilter.java:228)
	at org.eclipse.jgit.treewalk.filter.AndTreeFilter$List.matchFilter(AndTreeFilter.java:190)
	at org.eclipse.jgit.treewalk.TreeWalk.next(TreeWalk.java:853)
	at org.eclipse.jgit.lib.IndexDiff.diff(IndexDiff.java:446)
	at org.eclipse.egit.core.internal.indexdiff.IndexDiffCacheEntry.calcIndexDiffDataIncremental(IndexDiffCacheEntry.java:625)
	at org.eclipse.egit.core.internal.indexdiff.IndexDiffCacheEntry.access$13(IndexDiffCacheEntry.java:604)
	at org.eclipse.egit.core.internal.indexdiff.IndexDiffCacheEntry$5.updateIndexDiff(IndexDiffCacheEntry.java:550)
	at org.eclipse.egit.core.internal.indexdiff.IndexDiffUpdateJob.run(IndexDiffUpdateJob.java:77)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-06 13:26:24.676
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-06 13:26:24.677
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 4 0 2020-05-06 13:26:29.046
!MESSAGE Not closed bracket?
!STACK 0
org.eclipse.jgit.errors.InvalidPatternException: Not closed bracket?
	at org.eclipse.jgit.ignore.internal.Strings.convertGlob(Strings.java:444)
	at org.eclipse.jgit.ignore.internal.WildCardMatcher.<init>(WildCardMatcher.java:64)
	at org.eclipse.jgit.ignore.internal.PathMatcher.createNameMatcher0(PathMatcher.java:178)
	at org.eclipse.jgit.ignore.internal.PathMatcher.createMatchers(PathMatcher.java:99)
	at org.eclipse.jgit.ignore.internal.PathMatcher.<init>(PathMatcher.java:84)
	at org.eclipse.jgit.ignore.internal.PathMatcher.createPathMatcher(PathMatcher.java:135)
	at org.eclipse.jgit.ignore.FastIgnoreRule.<init>(FastIgnoreRule.java:129)
	at org.eclipse.jgit.ignore.IgnoreNode.parse(IgnoreNode.java:115)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator$PerDirectoryIgnoreNode.load(WorkingTreeIterator.java:1346)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator$RootIgnoreNode.load(WorkingTreeIterator.java:1365)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.getIgnoreNode(WorkingTreeIterator.java:771)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isDirectoryIgnored(WorkingTreeIterator.java:1611)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isDirectoryIgnored(WorkingTreeIterator.java:1589)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isEntryIgnored(WorkingTreeIterator.java:753)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isEntryIgnored(WorkingTreeIterator.java:713)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isEntryIgnored(WorkingTreeIterator.java:700)
	at org.eclipse.jgit.treewalk.filter.IndexDiffFilter.include(IndexDiffFilter.java:170)
	at org.eclipse.jgit.treewalk.filter.TreeFilter.matchFilter(TreeFilter.java:228)
	at org.eclipse.jgit.treewalk.filter.AndTreeFilter$List.matchFilter(AndTreeFilter.java:190)
	at org.eclipse.jgit.treewalk.TreeWalk.next(TreeWalk.java:853)
	at org.eclipse.jgit.lib.IndexDiff.diff(IndexDiff.java:446)
	at org.eclipse.egit.core.internal.indexdiff.IndexDiffCacheEntry.calcIndexDiffDataIncremental(IndexDiffCacheEntry.java:625)
	at org.eclipse.egit.core.internal.indexdiff.IndexDiffCacheEntry.access$13(IndexDiffCacheEntry.java:604)
	at org.eclipse.egit.core.internal.indexdiff.IndexDiffCacheEntry$5.updateIndexDiff(IndexDiffCacheEntry.java:550)
	at org.eclipse.egit.core.internal.indexdiff.IndexDiffUpdateJob.run(IndexDiffUpdateJob.java:77)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-06 13:26:29.146
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-06 13:26:29.147
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 4 0 2020-05-06 17:39:06.268
!MESSAGE Not closed bracket?
!STACK 0
org.eclipse.jgit.errors.InvalidPatternException: Not closed bracket?
	at org.eclipse.jgit.ignore.internal.Strings.convertGlob(Strings.java:444)
	at org.eclipse.jgit.ignore.internal.WildCardMatcher.<init>(WildCardMatcher.java:64)
	at org.eclipse.jgit.ignore.internal.PathMatcher.createNameMatcher0(PathMatcher.java:178)
	at org.eclipse.jgit.ignore.internal.PathMatcher.createMatchers(PathMatcher.java:99)
	at org.eclipse.jgit.ignore.internal.PathMatcher.<init>(PathMatcher.java:84)
	at org.eclipse.jgit.ignore.internal.PathMatcher.createPathMatcher(PathMatcher.java:135)
	at org.eclipse.jgit.ignore.FastIgnoreRule.<init>(FastIgnoreRule.java:129)
	at org.eclipse.jgit.ignore.IgnoreNode.parse(IgnoreNode.java:115)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator$PerDirectoryIgnoreNode.load(WorkingTreeIterator.java:1346)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator$RootIgnoreNode.load(WorkingTreeIterator.java:1365)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.getIgnoreNode(WorkingTreeIterator.java:771)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isDirectoryIgnored(WorkingTreeIterator.java:1611)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isDirectoryIgnored(WorkingTreeIterator.java:1589)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isEntryIgnored(WorkingTreeIterator.java:753)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isEntryIgnored(WorkingTreeIterator.java:713)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isEntryIgnored(WorkingTreeIterator.java:700)
	at org.eclipse.jgit.treewalk.filter.IndexDiffFilter.include(IndexDiffFilter.java:170)
	at org.eclipse.jgit.treewalk.filter.TreeFilter.matchFilter(TreeFilter.java:228)
	at org.eclipse.jgit.treewalk.filter.AndTreeFilter$List.matchFilter(AndTreeFilter.java:190)
	at org.eclipse.jgit.treewalk.TreeWalk.next(TreeWalk.java:853)
	at org.eclipse.jgit.lib.IndexDiff.diff(IndexDiff.java:446)
	at org.eclipse.egit.core.internal.indexdiff.IndexDiffCacheEntry.calcIndexDiffDataIncremental(IndexDiffCacheEntry.java:625)
	at org.eclipse.egit.core.internal.indexdiff.IndexDiffCacheEntry.access$13(IndexDiffCacheEntry.java:604)
	at org.eclipse.egit.core.internal.indexdiff.IndexDiffCacheEntry$5.updateIndexDiff(IndexDiffCacheEntry.java:550)
	at org.eclipse.egit.core.internal.indexdiff.IndexDiffUpdateJob.run(IndexDiffUpdateJob.java:77)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-06 17:39:06.334
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-06 17:39:06.336
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 4 0 2020-05-06 17:39:06.339
!MESSAGE Not closed bracket?
!STACK 0
org.eclipse.jgit.errors.InvalidPatternException: Not closed bracket?
	at org.eclipse.jgit.ignore.internal.Strings.convertGlob(Strings.java:444)
	at org.eclipse.jgit.ignore.internal.WildCardMatcher.<init>(WildCardMatcher.java:64)
	at org.eclipse.jgit.ignore.internal.PathMatcher.createNameMatcher0(PathMatcher.java:178)
	at org.eclipse.jgit.ignore.internal.PathMatcher.createMatchers(PathMatcher.java:99)
	at org.eclipse.jgit.ignore.internal.PathMatcher.<init>(PathMatcher.java:84)
	at org.eclipse.jgit.ignore.internal.PathMatcher.createPathMatcher(PathMatcher.java:135)
	at org.eclipse.jgit.ignore.FastIgnoreRule.<init>(FastIgnoreRule.java:129)
	at org.eclipse.jgit.ignore.IgnoreNode.parse(IgnoreNode.java:115)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator$PerDirectoryIgnoreNode.load(WorkingTreeIterator.java:1346)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator$RootIgnoreNode.load(WorkingTreeIterator.java:1365)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.getIgnoreNode(WorkingTreeIterator.java:771)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isDirectoryIgnored(WorkingTreeIterator.java:1611)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isDirectoryIgnored(WorkingTreeIterator.java:1589)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isEntryIgnored(WorkingTreeIterator.java:753)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isEntryIgnored(WorkingTreeIterator.java:713)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isEntryIgnored(WorkingTreeIterator.java:700)
	at org.eclipse.jgit.treewalk.FileTreeIterator.createSubtreeIterator(FileTreeIterator.java:215)
	at org.eclipse.jgit.treewalk.AbstractTreeIterator.createSubtreeIterator(AbstractTreeIterator.java:594)
	at org.eclipse.jgit.treewalk.TreeWalk.enterSubtree(TreeWalk.java:1303)
	at org.eclipse.egit.core.RepositoryUtil.canBeAutoIgnored(RepositoryUtil.java:773)
	at org.eclipse.egit.core.Activator$IgnoreDerivedResources$1.visit(Activator.java:835)
	at org.eclipse.core.internal.events.ResourceDelta.accept(ResourceDelta.java:67)
	at org.eclipse.core.internal.events.ResourceDelta.accept(ResourceDelta.java:77)
	at org.eclipse.core.internal.events.ResourceDelta.accept(ResourceDelta.java:77)
	at org.eclipse.core.internal.events.ResourceDelta.accept(ResourceDelta.java:51)
	at org.eclipse.egit.core.Activator$IgnoreDerivedResources.resourceChanged(Activator.java:811)
	at org.eclipse.core.internal.events.NotificationManager$1.run(NotificationManager.java:305)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.core.internal.events.NotificationManager.notify(NotificationManager.java:295)
	at org.eclipse.core.internal.events.NotificationManager.broadcastChanges(NotificationManager.java:158)
	at org.eclipse.core.internal.resources.Workspace.broadcastPostChange(Workspace.java:379)
	at org.eclipse.core.internal.resources.Workspace.endOperation(Workspace.java:1502)
	at org.eclipse.core.internal.events.AutoBuildJob.doBuild(AutoBuildJob.java:169)
	at org.eclipse.core.internal.events.AutoBuildJob.run(AutoBuildJob.java:244)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.m2e.logback.appender 4 0 2020-05-06 17:39:06.436
!MESSAGE Not closed bracket?
!STACK 0
org.eclipse.jgit.errors.InvalidPatternException: Not closed bracket?
	at org.eclipse.jgit.ignore.internal.Strings.convertGlob(Strings.java:444)
	at org.eclipse.jgit.ignore.internal.WildCardMatcher.<init>(WildCardMatcher.java:64)
	at org.eclipse.jgit.ignore.internal.PathMatcher.createNameMatcher0(PathMatcher.java:178)
	at org.eclipse.jgit.ignore.internal.PathMatcher.createMatchers(PathMatcher.java:99)
	at org.eclipse.jgit.ignore.internal.PathMatcher.<init>(PathMatcher.java:84)
	at org.eclipse.jgit.ignore.internal.PathMatcher.createPathMatcher(PathMatcher.java:135)
	at org.eclipse.jgit.ignore.FastIgnoreRule.<init>(FastIgnoreRule.java:129)
	at org.eclipse.jgit.ignore.IgnoreNode.parse(IgnoreNode.java:115)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator$PerDirectoryIgnoreNode.load(WorkingTreeIterator.java:1346)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator$RootIgnoreNode.load(WorkingTreeIterator.java:1365)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.getIgnoreNode(WorkingTreeIterator.java:771)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isDirectoryIgnored(WorkingTreeIterator.java:1611)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isDirectoryIgnored(WorkingTreeIterator.java:1589)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isEntryIgnored(WorkingTreeIterator.java:753)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isEntryIgnored(WorkingTreeIterator.java:713)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isEntryIgnored(WorkingTreeIterator.java:700)
	at org.eclipse.jgit.treewalk.filter.IndexDiffFilter.include(IndexDiffFilter.java:170)
	at org.eclipse.jgit.treewalk.filter.TreeFilter.matchFilter(TreeFilter.java:228)
	at org.eclipse.jgit.treewalk.filter.AndTreeFilter$List.matchFilter(AndTreeFilter.java:190)
	at org.eclipse.jgit.treewalk.TreeWalk.next(TreeWalk.java:853)
	at org.eclipse.jgit.lib.IndexDiff.diff(IndexDiff.java:446)
	at org.eclipse.egit.core.internal.indexdiff.IndexDiffCacheEntry.calcIndexDiffDataIncremental(IndexDiffCacheEntry.java:625)
	at org.eclipse.egit.core.internal.indexdiff.IndexDiffCacheEntry.access$13(IndexDiffCacheEntry.java:604)
	at org.eclipse.egit.core.internal.indexdiff.IndexDiffCacheEntry$5.updateIndexDiff(IndexDiffCacheEntry.java:550)
	at org.eclipse.egit.core.internal.indexdiff.IndexDiffUpdateJob.run(IndexDiffUpdateJob.java:77)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.m2e.logback.appender 4 0 2020-05-06 17:39:27.961
!MESSAGE Not closed bracket?
!STACK 0
org.eclipse.jgit.errors.InvalidPatternException: Not closed bracket?
	at org.eclipse.jgit.ignore.internal.Strings.convertGlob(Strings.java:444)
	at org.eclipse.jgit.ignore.internal.WildCardMatcher.<init>(WildCardMatcher.java:64)
	at org.eclipse.jgit.ignore.internal.PathMatcher.createNameMatcher0(PathMatcher.java:178)
	at org.eclipse.jgit.ignore.internal.PathMatcher.createMatchers(PathMatcher.java:99)
	at org.eclipse.jgit.ignore.internal.PathMatcher.<init>(PathMatcher.java:84)
	at org.eclipse.jgit.ignore.internal.PathMatcher.createPathMatcher(PathMatcher.java:135)
	at org.eclipse.jgit.ignore.FastIgnoreRule.<init>(FastIgnoreRule.java:129)
	at org.eclipse.jgit.ignore.IgnoreNode.parse(IgnoreNode.java:115)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator$PerDirectoryIgnoreNode.load(WorkingTreeIterator.java:1346)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator$RootIgnoreNode.load(WorkingTreeIterator.java:1365)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.getIgnoreNode(WorkingTreeIterator.java:771)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isDirectoryIgnored(WorkingTreeIterator.java:1611)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isDirectoryIgnored(WorkingTreeIterator.java:1589)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isEntryIgnored(WorkingTreeIterator.java:753)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isEntryIgnored(WorkingTreeIterator.java:713)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isEntryIgnored(WorkingTreeIterator.java:700)
	at org.eclipse.jgit.treewalk.filter.IndexDiffFilter.include(IndexDiffFilter.java:170)
	at org.eclipse.jgit.treewalk.filter.TreeFilter.matchFilter(TreeFilter.java:228)
	at org.eclipse.jgit.treewalk.filter.AndTreeFilter$List.matchFilter(AndTreeFilter.java:190)
	at org.eclipse.jgit.treewalk.TreeWalk.next(TreeWalk.java:853)
	at org.eclipse.jgit.lib.IndexDiff.diff(IndexDiff.java:446)
	at org.eclipse.egit.core.internal.indexdiff.IndexDiffCacheEntry.calcIndexDiffDataIncremental(IndexDiffCacheEntry.java:625)
	at org.eclipse.egit.core.internal.indexdiff.IndexDiffCacheEntry.access$13(IndexDiffCacheEntry.java:604)
	at org.eclipse.egit.core.internal.indexdiff.IndexDiffCacheEntry$5.updateIndexDiff(IndexDiffCacheEntry.java:550)
	at org.eclipse.egit.core.internal.indexdiff.IndexDiffUpdateJob.run(IndexDiffUpdateJob.java:77)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-06 17:39:28.582
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-06 17:39:28.583
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 4 0 2020-05-06 17:39:28.607
!MESSAGE Not closed bracket?
!STACK 0
org.eclipse.jgit.errors.InvalidPatternException: Not closed bracket?
	at org.eclipse.jgit.ignore.internal.Strings.convertGlob(Strings.java:444)
	at org.eclipse.jgit.ignore.internal.WildCardMatcher.<init>(WildCardMatcher.java:64)
	at org.eclipse.jgit.ignore.internal.PathMatcher.createNameMatcher0(PathMatcher.java:178)
	at org.eclipse.jgit.ignore.internal.PathMatcher.createMatchers(PathMatcher.java:99)
	at org.eclipse.jgit.ignore.internal.PathMatcher.<init>(PathMatcher.java:84)
	at org.eclipse.jgit.ignore.internal.PathMatcher.createPathMatcher(PathMatcher.java:135)
	at org.eclipse.jgit.ignore.FastIgnoreRule.<init>(FastIgnoreRule.java:129)
	at org.eclipse.jgit.ignore.IgnoreNode.parse(IgnoreNode.java:115)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator$PerDirectoryIgnoreNode.load(WorkingTreeIterator.java:1346)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator$RootIgnoreNode.load(WorkingTreeIterator.java:1365)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.getIgnoreNode(WorkingTreeIterator.java:771)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isDirectoryIgnored(WorkingTreeIterator.java:1611)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isDirectoryIgnored(WorkingTreeIterator.java:1589)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isEntryIgnored(WorkingTreeIterator.java:753)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isEntryIgnored(WorkingTreeIterator.java:713)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isEntryIgnored(WorkingTreeIterator.java:700)
	at org.eclipse.jgit.treewalk.FileTreeIterator.createSubtreeIterator(FileTreeIterator.java:215)
	at org.eclipse.jgit.treewalk.AbstractTreeIterator.createSubtreeIterator(AbstractTreeIterator.java:594)
	at org.eclipse.jgit.treewalk.TreeWalk.enterSubtree(TreeWalk.java:1303)
	at org.eclipse.egit.core.RepositoryUtil.canBeAutoIgnored(RepositoryUtil.java:773)
	at org.eclipse.egit.core.Activator$IgnoreDerivedResources$1.visit(Activator.java:835)
	at org.eclipse.core.internal.events.ResourceDelta.accept(ResourceDelta.java:67)
	at org.eclipse.core.internal.events.ResourceDelta.accept(ResourceDelta.java:77)
	at org.eclipse.core.internal.events.ResourceDelta.accept(ResourceDelta.java:77)
	at org.eclipse.core.internal.events.ResourceDelta.accept(ResourceDelta.java:51)
	at org.eclipse.egit.core.Activator$IgnoreDerivedResources.resourceChanged(Activator.java:811)
	at org.eclipse.core.internal.events.NotificationManager$1.run(NotificationManager.java:305)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.core.internal.events.NotificationManager.notify(NotificationManager.java:295)
	at org.eclipse.core.internal.events.NotificationManager.broadcastChanges(NotificationManager.java:158)
	at org.eclipse.core.internal.resources.Workspace.broadcastPostChange(Workspace.java:379)
	at org.eclipse.core.internal.resources.Workspace.endOperation(Workspace.java:1502)
	at org.eclipse.core.internal.events.AutoBuildJob.doBuild(AutoBuildJob.java:169)
	at org.eclipse.core.internal.events.AutoBuildJob.run(AutoBuildJob.java:244)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.m2e.logback.appender 4 0 2020-05-06 17:39:28.695
!MESSAGE Not closed bracket?
!STACK 0
org.eclipse.jgit.errors.InvalidPatternException: Not closed bracket?
	at org.eclipse.jgit.ignore.internal.Strings.convertGlob(Strings.java:444)
	at org.eclipse.jgit.ignore.internal.WildCardMatcher.<init>(WildCardMatcher.java:64)
	at org.eclipse.jgit.ignore.internal.PathMatcher.createNameMatcher0(PathMatcher.java:178)
	at org.eclipse.jgit.ignore.internal.PathMatcher.createMatchers(PathMatcher.java:99)
	at org.eclipse.jgit.ignore.internal.PathMatcher.<init>(PathMatcher.java:84)
	at org.eclipse.jgit.ignore.internal.PathMatcher.createPathMatcher(PathMatcher.java:135)
	at org.eclipse.jgit.ignore.FastIgnoreRule.<init>(FastIgnoreRule.java:129)
	at org.eclipse.jgit.ignore.IgnoreNode.parse(IgnoreNode.java:115)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator$PerDirectoryIgnoreNode.load(WorkingTreeIterator.java:1346)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator$RootIgnoreNode.load(WorkingTreeIterator.java:1365)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.getIgnoreNode(WorkingTreeIterator.java:771)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isDirectoryIgnored(WorkingTreeIterator.java:1611)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isDirectoryIgnored(WorkingTreeIterator.java:1589)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isEntryIgnored(WorkingTreeIterator.java:753)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isEntryIgnored(WorkingTreeIterator.java:713)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isEntryIgnored(WorkingTreeIterator.java:700)
	at org.eclipse.jgit.treewalk.filter.IndexDiffFilter.include(IndexDiffFilter.java:170)
	at org.eclipse.jgit.treewalk.filter.TreeFilter.matchFilter(TreeFilter.java:228)
	at org.eclipse.jgit.treewalk.filter.AndTreeFilter$List.matchFilter(AndTreeFilter.java:190)
	at org.eclipse.jgit.treewalk.TreeWalk.next(TreeWalk.java:853)
	at org.eclipse.jgit.lib.IndexDiff.diff(IndexDiff.java:446)
	at org.eclipse.egit.core.internal.indexdiff.IndexDiffCacheEntry.calcIndexDiffDataIncremental(IndexDiffCacheEntry.java:625)
	at org.eclipse.egit.core.internal.indexdiff.IndexDiffCacheEntry.access$13(IndexDiffCacheEntry.java:604)
	at org.eclipse.egit.core.internal.indexdiff.IndexDiffCacheEntry$5.updateIndexDiff(IndexDiffCacheEntry.java:550)
	at org.eclipse.egit.core.internal.indexdiff.IndexDiffUpdateJob.run(IndexDiffUpdateJob.java:77)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.m2e.logback.appender 4 0 2020-05-06 17:43:35.537
!MESSAGE Not closed bracket?
!STACK 0
org.eclipse.jgit.errors.InvalidPatternException: Not closed bracket?
	at org.eclipse.jgit.ignore.internal.Strings.convertGlob(Strings.java:444)
	at org.eclipse.jgit.ignore.internal.WildCardMatcher.<init>(WildCardMatcher.java:64)
	at org.eclipse.jgit.ignore.internal.PathMatcher.createNameMatcher0(PathMatcher.java:178)
	at org.eclipse.jgit.ignore.internal.PathMatcher.createMatchers(PathMatcher.java:99)
	at org.eclipse.jgit.ignore.internal.PathMatcher.<init>(PathMatcher.java:84)
	at org.eclipse.jgit.ignore.internal.PathMatcher.createPathMatcher(PathMatcher.java:135)
	at org.eclipse.jgit.ignore.FastIgnoreRule.<init>(FastIgnoreRule.java:129)
	at org.eclipse.jgit.ignore.IgnoreNode.parse(IgnoreNode.java:115)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator$PerDirectoryIgnoreNode.load(WorkingTreeIterator.java:1346)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator$RootIgnoreNode.load(WorkingTreeIterator.java:1365)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.getIgnoreNode(WorkingTreeIterator.java:771)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isDirectoryIgnored(WorkingTreeIterator.java:1611)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isDirectoryIgnored(WorkingTreeIterator.java:1589)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isEntryIgnored(WorkingTreeIterator.java:753)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isEntryIgnored(WorkingTreeIterator.java:713)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isEntryIgnored(WorkingTreeIterator.java:700)
	at org.eclipse.jgit.treewalk.filter.IndexDiffFilter.include(IndexDiffFilter.java:170)
	at org.eclipse.jgit.treewalk.filter.TreeFilter.matchFilter(TreeFilter.java:228)
	at org.eclipse.jgit.treewalk.filter.AndTreeFilter$List.matchFilter(AndTreeFilter.java:190)
	at org.eclipse.jgit.treewalk.TreeWalk.next(TreeWalk.java:853)
	at org.eclipse.jgit.lib.IndexDiff.diff(IndexDiff.java:446)
	at org.eclipse.egit.core.internal.indexdiff.IndexDiffCacheEntry.calcIndexDiffDataIncremental(IndexDiffCacheEntry.java:625)
	at org.eclipse.egit.core.internal.indexdiff.IndexDiffCacheEntry.access$13(IndexDiffCacheEntry.java:604)
	at org.eclipse.egit.core.internal.indexdiff.IndexDiffCacheEntry$5.updateIndexDiff(IndexDiffCacheEntry.java:550)
	at org.eclipse.egit.core.internal.indexdiff.IndexDiffUpdateJob.run(IndexDiffUpdateJob.java:77)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-06 17:43:35.657
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-06 17:43:35.658
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 4 0 2020-05-06 17:43:35.660
!MESSAGE Not closed bracket?
!STACK 0
org.eclipse.jgit.errors.InvalidPatternException: Not closed bracket?
	at org.eclipse.jgit.ignore.internal.Strings.convertGlob(Strings.java:444)
	at org.eclipse.jgit.ignore.internal.WildCardMatcher.<init>(WildCardMatcher.java:64)
	at org.eclipse.jgit.ignore.internal.PathMatcher.createNameMatcher0(PathMatcher.java:178)
	at org.eclipse.jgit.ignore.internal.PathMatcher.createMatchers(PathMatcher.java:99)
	at org.eclipse.jgit.ignore.internal.PathMatcher.<init>(PathMatcher.java:84)
	at org.eclipse.jgit.ignore.internal.PathMatcher.createPathMatcher(PathMatcher.java:135)
	at org.eclipse.jgit.ignore.FastIgnoreRule.<init>(FastIgnoreRule.java:129)
	at org.eclipse.jgit.ignore.IgnoreNode.parse(IgnoreNode.java:115)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator$PerDirectoryIgnoreNode.load(WorkingTreeIterator.java:1346)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator$RootIgnoreNode.load(WorkingTreeIterator.java:1365)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.getIgnoreNode(WorkingTreeIterator.java:771)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isDirectoryIgnored(WorkingTreeIterator.java:1611)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isDirectoryIgnored(WorkingTreeIterator.java:1589)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isEntryIgnored(WorkingTreeIterator.java:753)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isEntryIgnored(WorkingTreeIterator.java:713)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isEntryIgnored(WorkingTreeIterator.java:700)
	at org.eclipse.jgit.treewalk.FileTreeIterator.createSubtreeIterator(FileTreeIterator.java:215)
	at org.eclipse.jgit.treewalk.AbstractTreeIterator.createSubtreeIterator(AbstractTreeIterator.java:594)
	at org.eclipse.jgit.treewalk.TreeWalk.enterSubtree(TreeWalk.java:1303)
	at org.eclipse.egit.core.RepositoryUtil.canBeAutoIgnored(RepositoryUtil.java:773)
	at org.eclipse.egit.core.Activator$IgnoreDerivedResources$1.visit(Activator.java:835)
	at org.eclipse.core.internal.events.ResourceDelta.accept(ResourceDelta.java:67)
	at org.eclipse.core.internal.events.ResourceDelta.accept(ResourceDelta.java:77)
	at org.eclipse.core.internal.events.ResourceDelta.accept(ResourceDelta.java:77)
	at org.eclipse.core.internal.events.ResourceDelta.accept(ResourceDelta.java:51)
	at org.eclipse.egit.core.Activator$IgnoreDerivedResources.resourceChanged(Activator.java:811)
	at org.eclipse.core.internal.events.NotificationManager$1.run(NotificationManager.java:305)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.core.internal.events.NotificationManager.notify(NotificationManager.java:295)
	at org.eclipse.core.internal.events.NotificationManager.broadcastChanges(NotificationManager.java:158)
	at org.eclipse.core.internal.resources.Workspace.broadcastPostChange(Workspace.java:379)
	at org.eclipse.core.internal.resources.Workspace.endOperation(Workspace.java:1502)
	at org.eclipse.core.internal.events.AutoBuildJob.doBuild(AutoBuildJob.java:169)
	at org.eclipse.core.internal.events.AutoBuildJob.run(AutoBuildJob.java:244)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.m2e.logback.appender 4 0 2020-05-06 17:43:35.752
!MESSAGE Not closed bracket?
!STACK 0
org.eclipse.jgit.errors.InvalidPatternException: Not closed bracket?
	at org.eclipse.jgit.ignore.internal.Strings.convertGlob(Strings.java:444)
	at org.eclipse.jgit.ignore.internal.WildCardMatcher.<init>(WildCardMatcher.java:64)
	at org.eclipse.jgit.ignore.internal.PathMatcher.createNameMatcher0(PathMatcher.java:178)
	at org.eclipse.jgit.ignore.internal.PathMatcher.createMatchers(PathMatcher.java:99)
	at org.eclipse.jgit.ignore.internal.PathMatcher.<init>(PathMatcher.java:84)
	at org.eclipse.jgit.ignore.internal.PathMatcher.createPathMatcher(PathMatcher.java:135)
	at org.eclipse.jgit.ignore.FastIgnoreRule.<init>(FastIgnoreRule.java:129)
	at org.eclipse.jgit.ignore.IgnoreNode.parse(IgnoreNode.java:115)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator$PerDirectoryIgnoreNode.load(WorkingTreeIterator.java:1346)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator$RootIgnoreNode.load(WorkingTreeIterator.java:1365)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.getIgnoreNode(WorkingTreeIterator.java:771)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isDirectoryIgnored(WorkingTreeIterator.java:1611)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isDirectoryIgnored(WorkingTreeIterator.java:1589)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isEntryIgnored(WorkingTreeIterator.java:753)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isEntryIgnored(WorkingTreeIterator.java:713)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isEntryIgnored(WorkingTreeIterator.java:700)
	at org.eclipse.jgit.treewalk.filter.IndexDiffFilter.include(IndexDiffFilter.java:170)
	at org.eclipse.jgit.treewalk.filter.TreeFilter.matchFilter(TreeFilter.java:228)
	at org.eclipse.jgit.treewalk.filter.AndTreeFilter$List.matchFilter(AndTreeFilter.java:190)
	at org.eclipse.jgit.treewalk.TreeWalk.next(TreeWalk.java:853)
	at org.eclipse.jgit.lib.IndexDiff.diff(IndexDiff.java:446)
	at org.eclipse.egit.core.internal.indexdiff.IndexDiffCacheEntry.calcIndexDiffDataIncremental(IndexDiffCacheEntry.java:625)
	at org.eclipse.egit.core.internal.indexdiff.IndexDiffCacheEntry.access$13(IndexDiffCacheEntry.java:604)
	at org.eclipse.egit.core.internal.indexdiff.IndexDiffCacheEntry$5.updateIndexDiff(IndexDiffCacheEntry.java:550)
	at org.eclipse.egit.core.internal.indexdiff.IndexDiffUpdateJob.run(IndexDiffUpdateJob.java:77)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.m2e.logback.appender 4 0 2020-05-06 17:43:40.775
!MESSAGE Not closed bracket?
!STACK 0
org.eclipse.jgit.errors.InvalidPatternException: Not closed bracket?
	at org.eclipse.jgit.ignore.internal.Strings.convertGlob(Strings.java:444)
	at org.eclipse.jgit.ignore.internal.WildCardMatcher.<init>(WildCardMatcher.java:64)
	at org.eclipse.jgit.ignore.internal.PathMatcher.createNameMatcher0(PathMatcher.java:178)
	at org.eclipse.jgit.ignore.internal.PathMatcher.createMatchers(PathMatcher.java:99)
	at org.eclipse.jgit.ignore.internal.PathMatcher.<init>(PathMatcher.java:84)
	at org.eclipse.jgit.ignore.internal.PathMatcher.createPathMatcher(PathMatcher.java:135)
	at org.eclipse.jgit.ignore.FastIgnoreRule.<init>(FastIgnoreRule.java:129)
	at org.eclipse.jgit.ignore.IgnoreNode.parse(IgnoreNode.java:115)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator$PerDirectoryIgnoreNode.load(WorkingTreeIterator.java:1346)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator$RootIgnoreNode.load(WorkingTreeIterator.java:1365)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.getIgnoreNode(WorkingTreeIterator.java:771)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isDirectoryIgnored(WorkingTreeIterator.java:1611)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isDirectoryIgnored(WorkingTreeIterator.java:1589)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isEntryIgnored(WorkingTreeIterator.java:753)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isEntryIgnored(WorkingTreeIterator.java:713)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isEntryIgnored(WorkingTreeIterator.java:700)
	at org.eclipse.jgit.treewalk.filter.IndexDiffFilter.include(IndexDiffFilter.java:170)
	at org.eclipse.jgit.treewalk.filter.TreeFilter.matchFilter(TreeFilter.java:228)
	at org.eclipse.jgit.treewalk.filter.AndTreeFilter$List.matchFilter(AndTreeFilter.java:190)
	at org.eclipse.jgit.treewalk.TreeWalk.next(TreeWalk.java:853)
	at org.eclipse.jgit.lib.IndexDiff.diff(IndexDiff.java:446)
	at org.eclipse.egit.core.internal.indexdiff.IndexDiffCacheEntry.calcIndexDiffDataIncremental(IndexDiffCacheEntry.java:625)
	at org.eclipse.egit.core.internal.indexdiff.IndexDiffCacheEntry.access$13(IndexDiffCacheEntry.java:604)
	at org.eclipse.egit.core.internal.indexdiff.IndexDiffCacheEntry$5.updateIndexDiff(IndexDiffCacheEntry.java:550)
	at org.eclipse.egit.core.internal.indexdiff.IndexDiffUpdateJob.run(IndexDiffUpdateJob.java:77)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-06 17:43:40.940
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-06 17:43:40.941
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 4 0 2020-05-06 17:43:40.943
!MESSAGE Not closed bracket?
!STACK 0
org.eclipse.jgit.errors.InvalidPatternException: Not closed bracket?
	at org.eclipse.jgit.ignore.internal.Strings.convertGlob(Strings.java:444)
	at org.eclipse.jgit.ignore.internal.WildCardMatcher.<init>(WildCardMatcher.java:64)
	at org.eclipse.jgit.ignore.internal.PathMatcher.createNameMatcher0(PathMatcher.java:178)
	at org.eclipse.jgit.ignore.internal.PathMatcher.createMatchers(PathMatcher.java:99)
	at org.eclipse.jgit.ignore.internal.PathMatcher.<init>(PathMatcher.java:84)
	at org.eclipse.jgit.ignore.internal.PathMatcher.createPathMatcher(PathMatcher.java:135)
	at org.eclipse.jgit.ignore.FastIgnoreRule.<init>(FastIgnoreRule.java:129)
	at org.eclipse.jgit.ignore.IgnoreNode.parse(IgnoreNode.java:115)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator$PerDirectoryIgnoreNode.load(WorkingTreeIterator.java:1346)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator$RootIgnoreNode.load(WorkingTreeIterator.java:1365)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.getIgnoreNode(WorkingTreeIterator.java:771)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isDirectoryIgnored(WorkingTreeIterator.java:1611)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isDirectoryIgnored(WorkingTreeIterator.java:1589)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isEntryIgnored(WorkingTreeIterator.java:753)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isEntryIgnored(WorkingTreeIterator.java:713)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isEntryIgnored(WorkingTreeIterator.java:700)
	at org.eclipse.jgit.treewalk.FileTreeIterator.createSubtreeIterator(FileTreeIterator.java:215)
	at org.eclipse.jgit.treewalk.AbstractTreeIterator.createSubtreeIterator(AbstractTreeIterator.java:594)
	at org.eclipse.jgit.treewalk.TreeWalk.enterSubtree(TreeWalk.java:1303)
	at org.eclipse.egit.core.RepositoryUtil.canBeAutoIgnored(RepositoryUtil.java:773)
	at org.eclipse.egit.core.Activator$IgnoreDerivedResources$1.visit(Activator.java:835)
	at org.eclipse.core.internal.events.ResourceDelta.accept(ResourceDelta.java:67)
	at org.eclipse.core.internal.events.ResourceDelta.accept(ResourceDelta.java:77)
	at org.eclipse.core.internal.events.ResourceDelta.accept(ResourceDelta.java:77)
	at org.eclipse.core.internal.events.ResourceDelta.accept(ResourceDelta.java:51)
	at org.eclipse.egit.core.Activator$IgnoreDerivedResources.resourceChanged(Activator.java:811)
	at org.eclipse.core.internal.events.NotificationManager$1.run(NotificationManager.java:305)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.core.internal.events.NotificationManager.notify(NotificationManager.java:295)
	at org.eclipse.core.internal.events.NotificationManager.broadcastChanges(NotificationManager.java:158)
	at org.eclipse.core.internal.resources.Workspace.broadcastPostChange(Workspace.java:379)
	at org.eclipse.core.internal.resources.Workspace.endOperation(Workspace.java:1502)
	at org.eclipse.core.internal.events.AutoBuildJob.doBuild(AutoBuildJob.java:169)
	at org.eclipse.core.internal.events.AutoBuildJob.run(AutoBuildJob.java:244)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.m2e.logback.appender 4 0 2020-05-06 17:43:41.031
!MESSAGE Not closed bracket?
!STACK 0
org.eclipse.jgit.errors.InvalidPatternException: Not closed bracket?
	at org.eclipse.jgit.ignore.internal.Strings.convertGlob(Strings.java:444)
	at org.eclipse.jgit.ignore.internal.WildCardMatcher.<init>(WildCardMatcher.java:64)
	at org.eclipse.jgit.ignore.internal.PathMatcher.createNameMatcher0(PathMatcher.java:178)
	at org.eclipse.jgit.ignore.internal.PathMatcher.createMatchers(PathMatcher.java:99)
	at org.eclipse.jgit.ignore.internal.PathMatcher.<init>(PathMatcher.java:84)
	at org.eclipse.jgit.ignore.internal.PathMatcher.createPathMatcher(PathMatcher.java:135)
	at org.eclipse.jgit.ignore.FastIgnoreRule.<init>(FastIgnoreRule.java:129)
	at org.eclipse.jgit.ignore.IgnoreNode.parse(IgnoreNode.java:115)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator$PerDirectoryIgnoreNode.load(WorkingTreeIterator.java:1346)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator$RootIgnoreNode.load(WorkingTreeIterator.java:1365)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.getIgnoreNode(WorkingTreeIterator.java:771)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isDirectoryIgnored(WorkingTreeIterator.java:1611)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isDirectoryIgnored(WorkingTreeIterator.java:1589)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isEntryIgnored(WorkingTreeIterator.java:753)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isEntryIgnored(WorkingTreeIterator.java:713)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isEntryIgnored(WorkingTreeIterator.java:700)
	at org.eclipse.jgit.treewalk.filter.IndexDiffFilter.include(IndexDiffFilter.java:170)
	at org.eclipse.jgit.treewalk.filter.TreeFilter.matchFilter(TreeFilter.java:228)
	at org.eclipse.jgit.treewalk.filter.AndTreeFilter$List.matchFilter(AndTreeFilter.java:190)
	at org.eclipse.jgit.treewalk.TreeWalk.next(TreeWalk.java:853)
	at org.eclipse.jgit.lib.IndexDiff.diff(IndexDiff.java:446)
	at org.eclipse.egit.core.internal.indexdiff.IndexDiffCacheEntry.calcIndexDiffDataIncremental(IndexDiffCacheEntry.java:625)
	at org.eclipse.egit.core.internal.indexdiff.IndexDiffCacheEntry.access$13(IndexDiffCacheEntry.java:604)
	at org.eclipse.egit.core.internal.indexdiff.IndexDiffCacheEntry$5.updateIndexDiff(IndexDiffCacheEntry.java:550)
	at org.eclipse.egit.core.internal.indexdiff.IndexDiffUpdateJob.run(IndexDiffUpdateJob.java:77)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.m2e.logback.appender 4 0 2020-05-06 17:44:29.551
!MESSAGE Not closed bracket?
!STACK 0
org.eclipse.jgit.errors.InvalidPatternException: Not closed bracket?
	at org.eclipse.jgit.ignore.internal.Strings.convertGlob(Strings.java:444)
	at org.eclipse.jgit.ignore.internal.WildCardMatcher.<init>(WildCardMatcher.java:64)
	at org.eclipse.jgit.ignore.internal.PathMatcher.createNameMatcher0(PathMatcher.java:178)
	at org.eclipse.jgit.ignore.internal.PathMatcher.createMatchers(PathMatcher.java:99)
	at org.eclipse.jgit.ignore.internal.PathMatcher.<init>(PathMatcher.java:84)
	at org.eclipse.jgit.ignore.internal.PathMatcher.createPathMatcher(PathMatcher.java:135)
	at org.eclipse.jgit.ignore.FastIgnoreRule.<init>(FastIgnoreRule.java:129)
	at org.eclipse.jgit.ignore.IgnoreNode.parse(IgnoreNode.java:115)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator$PerDirectoryIgnoreNode.load(WorkingTreeIterator.java:1346)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator$RootIgnoreNode.load(WorkingTreeIterator.java:1365)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.getIgnoreNode(WorkingTreeIterator.java:771)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isDirectoryIgnored(WorkingTreeIterator.java:1611)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isDirectoryIgnored(WorkingTreeIterator.java:1589)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isEntryIgnored(WorkingTreeIterator.java:753)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isEntryIgnored(WorkingTreeIterator.java:713)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isEntryIgnored(WorkingTreeIterator.java:700)
	at org.eclipse.jgit.treewalk.filter.IndexDiffFilter.include(IndexDiffFilter.java:170)
	at org.eclipse.jgit.treewalk.filter.TreeFilter.matchFilter(TreeFilter.java:228)
	at org.eclipse.jgit.treewalk.filter.AndTreeFilter$List.matchFilter(AndTreeFilter.java:190)
	at org.eclipse.jgit.treewalk.TreeWalk.next(TreeWalk.java:853)
	at org.eclipse.jgit.lib.IndexDiff.diff(IndexDiff.java:446)
	at org.eclipse.egit.core.internal.indexdiff.IndexDiffCacheEntry.calcIndexDiffDataIncremental(IndexDiffCacheEntry.java:625)
	at org.eclipse.egit.core.internal.indexdiff.IndexDiffCacheEntry.access$13(IndexDiffCacheEntry.java:604)
	at org.eclipse.egit.core.internal.indexdiff.IndexDiffCacheEntry$5.updateIndexDiff(IndexDiffCacheEntry.java:550)
	at org.eclipse.egit.core.internal.indexdiff.IndexDiffUpdateJob.run(IndexDiffUpdateJob.java:77)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-06 17:44:29.709
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-06 17:44:29.711
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 4 0 2020-05-06 17:44:29.713
!MESSAGE Not closed bracket?
!STACK 0
org.eclipse.jgit.errors.InvalidPatternException: Not closed bracket?
	at org.eclipse.jgit.ignore.internal.Strings.convertGlob(Strings.java:444)
	at org.eclipse.jgit.ignore.internal.WildCardMatcher.<init>(WildCardMatcher.java:64)
	at org.eclipse.jgit.ignore.internal.PathMatcher.createNameMatcher0(PathMatcher.java:178)
	at org.eclipse.jgit.ignore.internal.PathMatcher.createMatchers(PathMatcher.java:99)
	at org.eclipse.jgit.ignore.internal.PathMatcher.<init>(PathMatcher.java:84)
	at org.eclipse.jgit.ignore.internal.PathMatcher.createPathMatcher(PathMatcher.java:135)
	at org.eclipse.jgit.ignore.FastIgnoreRule.<init>(FastIgnoreRule.java:129)
	at org.eclipse.jgit.ignore.IgnoreNode.parse(IgnoreNode.java:115)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator$PerDirectoryIgnoreNode.load(WorkingTreeIterator.java:1346)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator$RootIgnoreNode.load(WorkingTreeIterator.java:1365)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.getIgnoreNode(WorkingTreeIterator.java:771)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isDirectoryIgnored(WorkingTreeIterator.java:1611)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isDirectoryIgnored(WorkingTreeIterator.java:1589)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isEntryIgnored(WorkingTreeIterator.java:753)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isEntryIgnored(WorkingTreeIterator.java:713)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isEntryIgnored(WorkingTreeIterator.java:700)
	at org.eclipse.jgit.treewalk.FileTreeIterator.createSubtreeIterator(FileTreeIterator.java:215)
	at org.eclipse.jgit.treewalk.AbstractTreeIterator.createSubtreeIterator(AbstractTreeIterator.java:594)
	at org.eclipse.jgit.treewalk.TreeWalk.enterSubtree(TreeWalk.java:1303)
	at org.eclipse.egit.core.RepositoryUtil.canBeAutoIgnored(RepositoryUtil.java:773)
	at org.eclipse.egit.core.Activator$IgnoreDerivedResources$1.visit(Activator.java:835)
	at org.eclipse.core.internal.events.ResourceDelta.accept(ResourceDelta.java:67)
	at org.eclipse.core.internal.events.ResourceDelta.accept(ResourceDelta.java:77)
	at org.eclipse.core.internal.events.ResourceDelta.accept(ResourceDelta.java:77)
	at org.eclipse.core.internal.events.ResourceDelta.accept(ResourceDelta.java:51)
	at org.eclipse.egit.core.Activator$IgnoreDerivedResources.resourceChanged(Activator.java:811)
	at org.eclipse.core.internal.events.NotificationManager$1.run(NotificationManager.java:305)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.core.internal.events.NotificationManager.notify(NotificationManager.java:295)
	at org.eclipse.core.internal.events.NotificationManager.broadcastChanges(NotificationManager.java:158)
	at org.eclipse.core.internal.resources.Workspace.broadcastPostChange(Workspace.java:379)
	at org.eclipse.core.internal.resources.Workspace.endOperation(Workspace.java:1502)
	at org.eclipse.core.internal.events.AutoBuildJob.doBuild(AutoBuildJob.java:169)
	at org.eclipse.core.internal.events.AutoBuildJob.run(AutoBuildJob.java:244)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.m2e.logback.appender 4 0 2020-05-06 17:44:29.848
!MESSAGE Not closed bracket?
!STACK 0
org.eclipse.jgit.errors.InvalidPatternException: Not closed bracket?
	at org.eclipse.jgit.ignore.internal.Strings.convertGlob(Strings.java:444)
	at org.eclipse.jgit.ignore.internal.WildCardMatcher.<init>(WildCardMatcher.java:64)
	at org.eclipse.jgit.ignore.internal.PathMatcher.createNameMatcher0(PathMatcher.java:178)
	at org.eclipse.jgit.ignore.internal.PathMatcher.createMatchers(PathMatcher.java:99)
	at org.eclipse.jgit.ignore.internal.PathMatcher.<init>(PathMatcher.java:84)
	at org.eclipse.jgit.ignore.internal.PathMatcher.createPathMatcher(PathMatcher.java:135)
	at org.eclipse.jgit.ignore.FastIgnoreRule.<init>(FastIgnoreRule.java:129)
	at org.eclipse.jgit.ignore.IgnoreNode.parse(IgnoreNode.java:115)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator$PerDirectoryIgnoreNode.load(WorkingTreeIterator.java:1346)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator$RootIgnoreNode.load(WorkingTreeIterator.java:1365)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.getIgnoreNode(WorkingTreeIterator.java:771)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isDirectoryIgnored(WorkingTreeIterator.java:1611)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isDirectoryIgnored(WorkingTreeIterator.java:1589)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isEntryIgnored(WorkingTreeIterator.java:753)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isEntryIgnored(WorkingTreeIterator.java:713)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isEntryIgnored(WorkingTreeIterator.java:700)
	at org.eclipse.jgit.treewalk.filter.IndexDiffFilter.include(IndexDiffFilter.java:170)
	at org.eclipse.jgit.treewalk.filter.TreeFilter.matchFilter(TreeFilter.java:228)
	at org.eclipse.jgit.treewalk.filter.AndTreeFilter$List.matchFilter(AndTreeFilter.java:190)
	at org.eclipse.jgit.treewalk.TreeWalk.next(TreeWalk.java:853)
	at org.eclipse.jgit.lib.IndexDiff.diff(IndexDiff.java:446)
	at org.eclipse.egit.core.internal.indexdiff.IndexDiffCacheEntry.calcIndexDiffDataIncremental(IndexDiffCacheEntry.java:625)
	at org.eclipse.egit.core.internal.indexdiff.IndexDiffCacheEntry.access$13(IndexDiffCacheEntry.java:604)
	at org.eclipse.egit.core.internal.indexdiff.IndexDiffCacheEntry$5.updateIndexDiff(IndexDiffCacheEntry.java:550)
	at org.eclipse.egit.core.internal.indexdiff.IndexDiffUpdateJob.run(IndexDiffUpdateJob.java:77)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.m2e.logback.appender 4 0 2020-05-06 17:56:59.786
!MESSAGE Not closed bracket?
!STACK 0
org.eclipse.jgit.errors.InvalidPatternException: Not closed bracket?
	at org.eclipse.jgit.ignore.internal.Strings.convertGlob(Strings.java:444)
	at org.eclipse.jgit.ignore.internal.WildCardMatcher.<init>(WildCardMatcher.java:64)
	at org.eclipse.jgit.ignore.internal.PathMatcher.createNameMatcher0(PathMatcher.java:178)
	at org.eclipse.jgit.ignore.internal.PathMatcher.createMatchers(PathMatcher.java:99)
	at org.eclipse.jgit.ignore.internal.PathMatcher.<init>(PathMatcher.java:84)
	at org.eclipse.jgit.ignore.internal.PathMatcher.createPathMatcher(PathMatcher.java:135)
	at org.eclipse.jgit.ignore.FastIgnoreRule.<init>(FastIgnoreRule.java:129)
	at org.eclipse.jgit.ignore.IgnoreNode.parse(IgnoreNode.java:115)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator$PerDirectoryIgnoreNode.load(WorkingTreeIterator.java:1346)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator$RootIgnoreNode.load(WorkingTreeIterator.java:1365)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.getIgnoreNode(WorkingTreeIterator.java:771)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isDirectoryIgnored(WorkingTreeIterator.java:1611)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isDirectoryIgnored(WorkingTreeIterator.java:1589)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isEntryIgnored(WorkingTreeIterator.java:753)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isEntryIgnored(WorkingTreeIterator.java:713)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isEntryIgnored(WorkingTreeIterator.java:700)
	at org.eclipse.jgit.treewalk.filter.IndexDiffFilter.include(IndexDiffFilter.java:170)
	at org.eclipse.jgit.treewalk.filter.TreeFilter.matchFilter(TreeFilter.java:228)
	at org.eclipse.jgit.treewalk.filter.AndTreeFilter$List.matchFilter(AndTreeFilter.java:190)
	at org.eclipse.jgit.treewalk.TreeWalk.next(TreeWalk.java:853)
	at org.eclipse.jgit.lib.IndexDiff.diff(IndexDiff.java:446)
	at org.eclipse.egit.core.internal.indexdiff.IndexDiffCacheEntry.calcIndexDiffDataIncremental(IndexDiffCacheEntry.java:625)
	at org.eclipse.egit.core.internal.indexdiff.IndexDiffCacheEntry.access$13(IndexDiffCacheEntry.java:604)
	at org.eclipse.egit.core.internal.indexdiff.IndexDiffCacheEntry$5.updateIndexDiff(IndexDiffCacheEntry.java:550)
	at org.eclipse.egit.core.internal.indexdiff.IndexDiffUpdateJob.run(IndexDiffUpdateJob.java:77)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-06 17:57:00.037
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-05-06 17:57:00.039
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 4 0 2020-05-06 17:57:00.045
!MESSAGE Not closed bracket?
!STACK 0
org.eclipse.jgit.errors.InvalidPatternException: Not closed bracket?
	at org.eclipse.jgit.ignore.internal.Strings.convertGlob(Strings.java:444)
	at org.eclipse.jgit.ignore.internal.WildCardMatcher.<init>(WildCardMatcher.java:64)
	at org.eclipse.jgit.ignore.internal.PathMatcher.createNameMatcher0(PathMatcher.java:178)
	at org.eclipse.jgit.ignore.internal.PathMatcher.createMatchers(PathMatcher.java:99)
	at org.eclipse.jgit.ignore.internal.PathMatcher.<init>(PathMatcher.java:84)
	at org.eclipse.jgit.ignore.internal.PathMatcher.createPathMatcher(PathMatcher.java:135)
	at org.eclipse.jgit.ignore.FastIgnoreRule.<init>(FastIgnoreRule.java:129)
	at org.eclipse.jgit.ignore.IgnoreNode.parse(IgnoreNode.java:115)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator$PerDirectoryIgnoreNode.load(WorkingTreeIterator.java:1346)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator$RootIgnoreNode.load(WorkingTreeIterator.java:1365)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.getIgnoreNode(WorkingTreeIterator.java:771)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isDirectoryIgnored(WorkingTreeIterator.java:1611)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isDirectoryIgnored(WorkingTreeIterator.java:1589)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isEntryIgnored(WorkingTreeIterator.java:753)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isEntryIgnored(WorkingTreeIterator.java:713)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isEntryIgnored(WorkingTreeIterator.java:700)
	at org.eclipse.jgit.treewalk.FileTreeIterator.createSubtreeIterator(FileTreeIterator.java:215)
	at org.eclipse.jgit.treewalk.AbstractTreeIterator.createSubtreeIterator(AbstractTreeIterator.java:594)
	at org.eclipse.jgit.treewalk.TreeWalk.enterSubtree(TreeWalk.java:1303)
	at org.eclipse.egit.core.RepositoryUtil.canBeAutoIgnored(RepositoryUtil.java:773)
	at org.eclipse.egit.core.Activator$IgnoreDerivedResources$1.visit(Activator.java:835)
	at org.eclipse.core.internal.events.ResourceDelta.accept(ResourceDelta.java:67)
	at org.eclipse.core.internal.events.ResourceDelta.accept(ResourceDelta.java:77)
	at org.eclipse.core.internal.events.ResourceDelta.accept(ResourceDelta.java:77)
	at org.eclipse.core.internal.events.ResourceDelta.accept(ResourceDelta.java:51)
	at org.eclipse.egit.core.Activator$IgnoreDerivedResources.resourceChanged(Activator.java:811)
	at org.eclipse.core.internal.events.NotificationManager$1.run(NotificationManager.java:305)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.core.internal.events.NotificationManager.notify(NotificationManager.java:295)
	at org.eclipse.core.internal.events.NotificationManager.broadcastChanges(NotificationManager.java:158)
	at org.eclipse.core.internal.resources.Workspace.broadcastPostChange(Workspace.java:379)
	at org.eclipse.core.internal.resources.Workspace.endOperation(Workspace.java:1502)
	at org.eclipse.core.internal.events.AutoBuildJob.doBuild(AutoBuildJob.java:169)
	at org.eclipse.core.internal.events.AutoBuildJob.run(AutoBuildJob.java:244)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.m2e.logback.appender 4 0 2020-05-06 17:57:00.220
!MESSAGE Not closed bracket?
!STACK 0
org.eclipse.jgit.errors.InvalidPatternException: Not closed bracket?
	at org.eclipse.jgit.ignore.internal.Strings.convertGlob(Strings.java:444)
	at org.eclipse.jgit.ignore.internal.WildCardMatcher.<init>(WildCardMatcher.java:64)
	at org.eclipse.jgit.ignore.internal.PathMatcher.createNameMatcher0(PathMatcher.java:178)
	at org.eclipse.jgit.ignore.internal.PathMatcher.createMatchers(PathMatcher.java:99)
	at org.eclipse.jgit.ignore.internal.PathMatcher.<init>(PathMatcher.java:84)
	at org.eclipse.jgit.ignore.internal.PathMatcher.createPathMatcher(PathMatcher.java:135)
	at org.eclipse.jgit.ignore.FastIgnoreRule.<init>(FastIgnoreRule.java:129)
	at org.eclipse.jgit.ignore.IgnoreNode.parse(IgnoreNode.java:115)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator$PerDirectoryIgnoreNode.load(WorkingTreeIterator.java:1346)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator$RootIgnoreNode.load(WorkingTreeIterator.java:1365)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.getIgnoreNode(WorkingTreeIterator.java:771)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isDirectoryIgnored(WorkingTreeIterator.java:1611)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isDirectoryIgnored(WorkingTreeIterator.java:1589)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isEntryIgnored(WorkingTreeIterator.java:753)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isEntryIgnored(WorkingTreeIterator.java:713)
	at org.eclipse.jgit.treewalk.WorkingTreeIterator.isEntryIgnored(WorkingTreeIterator.java:700)
	at org.eclipse.jgit.treewalk.filter.IndexDiffFilter.include(IndexDiffFilter.java:170)
	at org.eclipse.jgit.treewalk.filter.TreeFilter.matchFilter(TreeFilter.java:228)
	at org.eclipse.jgit.treewalk.filter.AndTreeFilter$List.matchFilter(AndTreeFilter.java:190)
	at org.eclipse.jgit.treewalk.TreeWalk.next(TreeWalk.java:853)
	at org.eclipse.jgit.lib.IndexDiff.diff(IndexDiff.java:446)
	at org.eclipse.egit.core.internal.indexdiff.IndexDiffCacheEntry.calcIndexDiffDataIncremental(IndexDiffCacheEntry.java:625)
	at org.eclipse.egit.core.internal.indexdiff.IndexDiffCacheEntry.access$13(IndexDiffCacheEntry.java:604)
	at org.eclipse.egit.core.internal.indexdiff.IndexDiffCacheEntry$5.updateIndexDiff(IndexDiffCacheEntry.java:550)
	at org.eclipse.egit.core.internal.indexdiff.IndexDiffUpdateJob.run(IndexDiffUpdateJob.java:77)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)
